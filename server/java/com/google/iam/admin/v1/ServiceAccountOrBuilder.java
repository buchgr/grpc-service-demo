// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/iam/admin/v1/iam.proto

package com.google.iam.admin.v1;

public interface ServiceAccountOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.iam.admin.v1.ServiceAccount)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The resource name of the service account in the following format:
   * `projects/{project}/serviceAccounts/{account}`.
   * Requests using `-` as a wildcard for the project will infer the project
   * from the `account` and the `account` value can be the `email` address or
   * the `unique_id` of the service account.
   * In responses the resource name will always be in the format
   * `projects/{project}/serviceAccounts/{email}`.
   * </pre>
   *
   * <code>string name = 1;</code>
   */
  java.lang.String getName();
  /**
   * <pre>
   * The resource name of the service account in the following format:
   * `projects/{project}/serviceAccounts/{account}`.
   * Requests using `-` as a wildcard for the project will infer the project
   * from the `account` and the `account` value can be the `email` address or
   * the `unique_id` of the service account.
   * In responses the resource name will always be in the format
   * `projects/{project}/serviceAccounts/{email}`.
   * </pre>
   *
   * <code>string name = 1;</code>
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * &#64;OutputOnly The id of the project that owns the service account.
   * </pre>
   *
   * <code>string project_id = 2;</code>
   */
  java.lang.String getProjectId();
  /**
   * <pre>
   * &#64;OutputOnly The id of the project that owns the service account.
   * </pre>
   *
   * <code>string project_id = 2;</code>
   */
  com.google.protobuf.ByteString
      getProjectIdBytes();

  /**
   * <pre>
   * &#64;OutputOnly The unique and stable id of the service account.
   * </pre>
   *
   * <code>string unique_id = 4;</code>
   */
  java.lang.String getUniqueId();
  /**
   * <pre>
   * &#64;OutputOnly The unique and stable id of the service account.
   * </pre>
   *
   * <code>string unique_id = 4;</code>
   */
  com.google.protobuf.ByteString
      getUniqueIdBytes();

  /**
   * <pre>
   * &#64;OutputOnly The email address of the service account.
   * </pre>
   *
   * <code>string email = 5;</code>
   */
  java.lang.String getEmail();
  /**
   * <pre>
   * &#64;OutputOnly The email address of the service account.
   * </pre>
   *
   * <code>string email = 5;</code>
   */
  com.google.protobuf.ByteString
      getEmailBytes();

  /**
   * <pre>
   * Optional. A user-specified description of the service account.  Must be
   * fewer than 100 UTF-8 bytes.
   * </pre>
   *
   * <code>string display_name = 6;</code>
   */
  java.lang.String getDisplayName();
  /**
   * <pre>
   * Optional. A user-specified description of the service account.  Must be
   * fewer than 100 UTF-8 bytes.
   * </pre>
   *
   * <code>string display_name = 6;</code>
   */
  com.google.protobuf.ByteString
      getDisplayNameBytes();

  /**
   * <pre>
   * Used to perform a consistent read-modify-write.
   * </pre>
   *
   * <code>bytes etag = 7;</code>
   */
  com.google.protobuf.ByteString getEtag();

  /**
   * <pre>
   * &#64;OutputOnly. The OAuth2 client id for the service account.
   * This is used in conjunction with the OAuth2 clientconfig API to make
   * three legged OAuth2 (3LO) flows to access the data of Google users.
   * </pre>
   *
   * <code>string oauth2_client_id = 9;</code>
   */
  java.lang.String getOauth2ClientId();
  /**
   * <pre>
   * &#64;OutputOnly. The OAuth2 client id for the service account.
   * This is used in conjunction with the OAuth2 clientconfig API to make
   * three legged OAuth2 (3LO) flows to access the data of Google users.
   * </pre>
   *
   * <code>string oauth2_client_id = 9;</code>
   */
  com.google.protobuf.ByteString
      getOauth2ClientIdBytes();
}
