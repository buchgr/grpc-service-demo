// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/cloudbuild/v1/cloudbuild.proto

package com.google.cloudbuild.v1;

public interface BuildOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.devtools.cloudbuild.v1.Build)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Unique identifier of the build.
   * &#64;OutputOnly
   * </pre>
   *
   * <code>string id = 1;</code>
   */
  java.lang.String getId();
  /**
   * <pre>
   * Unique identifier of the build.
   * &#64;OutputOnly
   * </pre>
   *
   * <code>string id = 1;</code>
   */
  com.google.protobuf.ByteString
      getIdBytes();

  /**
   * <pre>
   * ID of the project.
   * &#64;OutputOnly.
   * </pre>
   *
   * <code>string project_id = 16;</code>
   */
  java.lang.String getProjectId();
  /**
   * <pre>
   * ID of the project.
   * &#64;OutputOnly.
   * </pre>
   *
   * <code>string project_id = 16;</code>
   */
  com.google.protobuf.ByteString
      getProjectIdBytes();

  /**
   * <pre>
   * Status of the build.
   * &#64;OutputOnly
   * </pre>
   *
   * <code>.google.devtools.cloudbuild.v1.Build.Status status = 2;</code>
   */
  int getStatusValue();
  /**
   * <pre>
   * Status of the build.
   * &#64;OutputOnly
   * </pre>
   *
   * <code>.google.devtools.cloudbuild.v1.Build.Status status = 2;</code>
   */
  com.google.cloudbuild.v1.Build.Status getStatus();

  /**
   * <pre>
   * Customer-readable message about the current status.
   * &#64;OutputOnly
   * </pre>
   *
   * <code>string status_detail = 24;</code>
   */
  java.lang.String getStatusDetail();
  /**
   * <pre>
   * Customer-readable message about the current status.
   * &#64;OutputOnly
   * </pre>
   *
   * <code>string status_detail = 24;</code>
   */
  com.google.protobuf.ByteString
      getStatusDetailBytes();

  /**
   * <pre>
   * Describes where to find the source files to build.
   * </pre>
   *
   * <code>.google.devtools.cloudbuild.v1.Source source = 3;</code>
   */
  boolean hasSource();
  /**
   * <pre>
   * Describes where to find the source files to build.
   * </pre>
   *
   * <code>.google.devtools.cloudbuild.v1.Source source = 3;</code>
   */
  com.google.cloudbuild.v1.Source getSource();
  /**
   * <pre>
   * Describes where to find the source files to build.
   * </pre>
   *
   * <code>.google.devtools.cloudbuild.v1.Source source = 3;</code>
   */
  com.google.cloudbuild.v1.SourceOrBuilder getSourceOrBuilder();

  /**
   * <pre>
   * Describes the operations to be performed on the workspace.
   * </pre>
   *
   * <code>repeated .google.devtools.cloudbuild.v1.BuildStep steps = 11;</code>
   */
  java.util.List<com.google.cloudbuild.v1.BuildStep> 
      getStepsList();
  /**
   * <pre>
   * Describes the operations to be performed on the workspace.
   * </pre>
   *
   * <code>repeated .google.devtools.cloudbuild.v1.BuildStep steps = 11;</code>
   */
  com.google.cloudbuild.v1.BuildStep getSteps(int index);
  /**
   * <pre>
   * Describes the operations to be performed on the workspace.
   * </pre>
   *
   * <code>repeated .google.devtools.cloudbuild.v1.BuildStep steps = 11;</code>
   */
  int getStepsCount();
  /**
   * <pre>
   * Describes the operations to be performed on the workspace.
   * </pre>
   *
   * <code>repeated .google.devtools.cloudbuild.v1.BuildStep steps = 11;</code>
   */
  java.util.List<? extends com.google.cloudbuild.v1.BuildStepOrBuilder> 
      getStepsOrBuilderList();
  /**
   * <pre>
   * Describes the operations to be performed on the workspace.
   * </pre>
   *
   * <code>repeated .google.devtools.cloudbuild.v1.BuildStep steps = 11;</code>
   */
  com.google.cloudbuild.v1.BuildStepOrBuilder getStepsOrBuilder(
      int index);

  /**
   * <pre>
   * Results of the build.
   * &#64;OutputOnly
   * </pre>
   *
   * <code>.google.devtools.cloudbuild.v1.Results results = 10;</code>
   */
  boolean hasResults();
  /**
   * <pre>
   * Results of the build.
   * &#64;OutputOnly
   * </pre>
   *
   * <code>.google.devtools.cloudbuild.v1.Results results = 10;</code>
   */
  com.google.cloudbuild.v1.Results getResults();
  /**
   * <pre>
   * Results of the build.
   * &#64;OutputOnly
   * </pre>
   *
   * <code>.google.devtools.cloudbuild.v1.Results results = 10;</code>
   */
  com.google.cloudbuild.v1.ResultsOrBuilder getResultsOrBuilder();

  /**
   * <pre>
   * Time at which the request to create the build was received.
   * &#64;OutputOnly
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 6;</code>
   */
  boolean hasCreateTime();
  /**
   * <pre>
   * Time at which the request to create the build was received.
   * &#64;OutputOnly
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 6;</code>
   */
  com.google.protobuf.Timestamp getCreateTime();
  /**
   * <pre>
   * Time at which the request to create the build was received.
   * &#64;OutputOnly
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 6;</code>
   */
  com.google.protobuf.TimestampOrBuilder getCreateTimeOrBuilder();

  /**
   * <pre>
   * Time at which execution of the build was started.
   * &#64;OutputOnly
   * </pre>
   *
   * <code>.google.protobuf.Timestamp start_time = 7;</code>
   */
  boolean hasStartTime();
  /**
   * <pre>
   * Time at which execution of the build was started.
   * &#64;OutputOnly
   * </pre>
   *
   * <code>.google.protobuf.Timestamp start_time = 7;</code>
   */
  com.google.protobuf.Timestamp getStartTime();
  /**
   * <pre>
   * Time at which execution of the build was started.
   * &#64;OutputOnly
   * </pre>
   *
   * <code>.google.protobuf.Timestamp start_time = 7;</code>
   */
  com.google.protobuf.TimestampOrBuilder getStartTimeOrBuilder();

  /**
   * <pre>
   * Time at which execution of the build was finished.
   * The difference between finish_time and start_time is the duration of the
   * build's execution.
   * &#64;OutputOnly
   * </pre>
   *
   * <code>.google.protobuf.Timestamp finish_time = 8;</code>
   */
  boolean hasFinishTime();
  /**
   * <pre>
   * Time at which execution of the build was finished.
   * The difference between finish_time and start_time is the duration of the
   * build's execution.
   * &#64;OutputOnly
   * </pre>
   *
   * <code>.google.protobuf.Timestamp finish_time = 8;</code>
   */
  com.google.protobuf.Timestamp getFinishTime();
  /**
   * <pre>
   * Time at which execution of the build was finished.
   * The difference between finish_time and start_time is the duration of the
   * build's execution.
   * &#64;OutputOnly
   * </pre>
   *
   * <code>.google.protobuf.Timestamp finish_time = 8;</code>
   */
  com.google.protobuf.TimestampOrBuilder getFinishTimeOrBuilder();

  /**
   * <pre>
   * Amount of time that this build should be allowed to run, to second
   * granularity. If this amount of time elapses, work on the build will cease
   * and the build status will be TIMEOUT.
   * Default time is ten minutes.
   * </pre>
   *
   * <code>.google.protobuf.Duration timeout = 12;</code>
   */
  boolean hasTimeout();
  /**
   * <pre>
   * Amount of time that this build should be allowed to run, to second
   * granularity. If this amount of time elapses, work on the build will cease
   * and the build status will be TIMEOUT.
   * Default time is ten minutes.
   * </pre>
   *
   * <code>.google.protobuf.Duration timeout = 12;</code>
   */
  com.google.protobuf.Duration getTimeout();
  /**
   * <pre>
   * Amount of time that this build should be allowed to run, to second
   * granularity. If this amount of time elapses, work on the build will cease
   * and the build status will be TIMEOUT.
   * Default time is ten minutes.
   * </pre>
   *
   * <code>.google.protobuf.Duration timeout = 12;</code>
   */
  com.google.protobuf.DurationOrBuilder getTimeoutOrBuilder();

  /**
   * <pre>
   * A list of images to be pushed upon the successful completion of all build
   * steps.
   * The images will be pushed using the builder service account's credentials.
   * The digests of the pushed images will be stored in the Build resource's
   * results field.
   * If any of the images fail to be pushed, the build is marked FAILURE.
   * </pre>
   *
   * <code>repeated string images = 13;</code>
   */
  java.util.List<java.lang.String>
      getImagesList();
  /**
   * <pre>
   * A list of images to be pushed upon the successful completion of all build
   * steps.
   * The images will be pushed using the builder service account's credentials.
   * The digests of the pushed images will be stored in the Build resource's
   * results field.
   * If any of the images fail to be pushed, the build is marked FAILURE.
   * </pre>
   *
   * <code>repeated string images = 13;</code>
   */
  int getImagesCount();
  /**
   * <pre>
   * A list of images to be pushed upon the successful completion of all build
   * steps.
   * The images will be pushed using the builder service account's credentials.
   * The digests of the pushed images will be stored in the Build resource's
   * results field.
   * If any of the images fail to be pushed, the build is marked FAILURE.
   * </pre>
   *
   * <code>repeated string images = 13;</code>
   */
  java.lang.String getImages(int index);
  /**
   * <pre>
   * A list of images to be pushed upon the successful completion of all build
   * steps.
   * The images will be pushed using the builder service account's credentials.
   * The digests of the pushed images will be stored in the Build resource's
   * results field.
   * If any of the images fail to be pushed, the build is marked FAILURE.
   * </pre>
   *
   * <code>repeated string images = 13;</code>
   */
  com.google.protobuf.ByteString
      getImagesBytes(int index);

  /**
   * <pre>
   * Google Cloud Storage bucket where logs should be written (see
   * [Bucket Name
   * Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).
   * Logs file names will be of the format `${logs_bucket}/log-${build_id}.txt`.
   * </pre>
   *
   * <code>string logs_bucket = 19;</code>
   */
  java.lang.String getLogsBucket();
  /**
   * <pre>
   * Google Cloud Storage bucket where logs should be written (see
   * [Bucket Name
   * Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).
   * Logs file names will be of the format `${logs_bucket}/log-${build_id}.txt`.
   * </pre>
   *
   * <code>string logs_bucket = 19;</code>
   */
  com.google.protobuf.ByteString
      getLogsBucketBytes();

  /**
   * <pre>
   * A permanent fixed identifier for source.
   * &#64;OutputOnly
   * </pre>
   *
   * <code>.google.devtools.cloudbuild.v1.SourceProvenance source_provenance = 21;</code>
   */
  boolean hasSourceProvenance();
  /**
   * <pre>
   * A permanent fixed identifier for source.
   * &#64;OutputOnly
   * </pre>
   *
   * <code>.google.devtools.cloudbuild.v1.SourceProvenance source_provenance = 21;</code>
   */
  com.google.cloudbuild.v1.SourceProvenance getSourceProvenance();
  /**
   * <pre>
   * A permanent fixed identifier for source.
   * &#64;OutputOnly
   * </pre>
   *
   * <code>.google.devtools.cloudbuild.v1.SourceProvenance source_provenance = 21;</code>
   */
  com.google.cloudbuild.v1.SourceProvenanceOrBuilder getSourceProvenanceOrBuilder();

  /**
   * <pre>
   * The ID of the BuildTrigger that triggered this build, if it was
   * triggered automatically.
   * &#64;OutputOnly
   * </pre>
   *
   * <code>string build_trigger_id = 22;</code>
   */
  java.lang.String getBuildTriggerId();
  /**
   * <pre>
   * The ID of the BuildTrigger that triggered this build, if it was
   * triggered automatically.
   * &#64;OutputOnly
   * </pre>
   *
   * <code>string build_trigger_id = 22;</code>
   */
  com.google.protobuf.ByteString
      getBuildTriggerIdBytes();

  /**
   * <pre>
   * Special options for this build.
   * </pre>
   *
   * <code>.google.devtools.cloudbuild.v1.BuildOptions options = 23;</code>
   */
  boolean hasOptions();
  /**
   * <pre>
   * Special options for this build.
   * </pre>
   *
   * <code>.google.devtools.cloudbuild.v1.BuildOptions options = 23;</code>
   */
  com.google.cloudbuild.v1.BuildOptions getOptions();
  /**
   * <pre>
   * Special options for this build.
   * </pre>
   *
   * <code>.google.devtools.cloudbuild.v1.BuildOptions options = 23;</code>
   */
  com.google.cloudbuild.v1.BuildOptionsOrBuilder getOptionsOrBuilder();

  /**
   * <pre>
   * URL to logs for this build in Google Cloud Logging.
   * &#64;OutputOnly
   * </pre>
   *
   * <code>string log_url = 25;</code>
   */
  java.lang.String getLogUrl();
  /**
   * <pre>
   * URL to logs for this build in Google Cloud Logging.
   * &#64;OutputOnly
   * </pre>
   *
   * <code>string log_url = 25;</code>
   */
  com.google.protobuf.ByteString
      getLogUrlBytes();

  /**
   * <pre>
   * Substitutions data for Build resource.
   * </pre>
   *
   * <code>map&lt;string, string&gt; substitutions = 29;</code>
   */
  int getSubstitutionsCount();
  /**
   * <pre>
   * Substitutions data for Build resource.
   * </pre>
   *
   * <code>map&lt;string, string&gt; substitutions = 29;</code>
   */
  boolean containsSubstitutions(
      java.lang.String key);
  /**
   * Use {@link #getSubstitutionsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getSubstitutions();
  /**
   * <pre>
   * Substitutions data for Build resource.
   * </pre>
   *
   * <code>map&lt;string, string&gt; substitutions = 29;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getSubstitutionsMap();
  /**
   * <pre>
   * Substitutions data for Build resource.
   * </pre>
   *
   * <code>map&lt;string, string&gt; substitutions = 29;</code>
   */

  java.lang.String getSubstitutionsOrDefault(
      java.lang.String key,
      java.lang.String defaultValue);
  /**
   * <pre>
   * Substitutions data for Build resource.
   * </pre>
   *
   * <code>map&lt;string, string&gt; substitutions = 29;</code>
   */

  java.lang.String getSubstitutionsOrThrow(
      java.lang.String key);
}
