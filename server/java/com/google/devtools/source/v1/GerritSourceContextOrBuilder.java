// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/source/v1/source_context.proto

package com.google.devtools.source.v1;

public interface GerritSourceContextOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.devtools.source.v1.GerritSourceContext)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The URI of a running Gerrit instance.
   * </pre>
   *
   * <code>string host_uri = 1;</code>
   */
  java.lang.String getHostUri();
  /**
   * <pre>
   * The URI of a running Gerrit instance.
   * </pre>
   *
   * <code>string host_uri = 1;</code>
   */
  com.google.protobuf.ByteString
      getHostUriBytes();

  /**
   * <pre>
   * The full project name within the host. Projects may be nested, so
   * "project/subproject" is a valid project name.
   * The "repo name" is hostURI/project.
   * </pre>
   *
   * <code>string gerrit_project = 2;</code>
   */
  java.lang.String getGerritProject();
  /**
   * <pre>
   * The full project name within the host. Projects may be nested, so
   * "project/subproject" is a valid project name.
   * The "repo name" is hostURI/project.
   * </pre>
   *
   * <code>string gerrit_project = 2;</code>
   */
  com.google.protobuf.ByteString
      getGerritProjectBytes();

  /**
   * <pre>
   * A revision (commit) ID.
   * </pre>
   *
   * <code>string revision_id = 3;</code>
   */
  java.lang.String getRevisionId();
  /**
   * <pre>
   * A revision (commit) ID.
   * </pre>
   *
   * <code>string revision_id = 3;</code>
   */
  com.google.protobuf.ByteString
      getRevisionIdBytes();

  /**
   * <pre>
   * The name of an alias (branch, tag, etc.).
   * </pre>
   *
   * <code>string alias_name = 4;</code>
   */
  java.lang.String getAliasName();
  /**
   * <pre>
   * The name of an alias (branch, tag, etc.).
   * </pre>
   *
   * <code>string alias_name = 4;</code>
   */
  com.google.protobuf.ByteString
      getAliasNameBytes();

  /**
   * <pre>
   * An alias, which may be a branch or tag.
   * </pre>
   *
   * <code>.google.devtools.source.v1.AliasContext alias_context = 5;</code>
   */
  com.google.devtools.source.v1.AliasContext getAliasContext();
  /**
   * <pre>
   * An alias, which may be a branch or tag.
   * </pre>
   *
   * <code>.google.devtools.source.v1.AliasContext alias_context = 5;</code>
   */
  com.google.devtools.source.v1.AliasContextOrBuilder getAliasContextOrBuilder();

  public com.google.devtools.source.v1.GerritSourceContext.RevisionCase getRevisionCase();
}
