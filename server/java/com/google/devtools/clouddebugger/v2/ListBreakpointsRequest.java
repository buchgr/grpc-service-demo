// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/clouddebugger/v2/debugger.proto

package com.google.devtools.clouddebugger.v2;

/**
 * <pre>
 * Request to list breakpoints.
 * </pre>
 *
 * Protobuf type {@code google.devtools.clouddebugger.v2.ListBreakpointsRequest}
 */
public  final class ListBreakpointsRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.devtools.clouddebugger.v2.ListBreakpointsRequest)
    ListBreakpointsRequestOrBuilder {
  // Use ListBreakpointsRequest.newBuilder() to construct.
  private ListBreakpointsRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ListBreakpointsRequest() {
    debuggeeId_ = "";
    includeAllUsers_ = false;
    includeInactive_ = false;
    stripResults_ = false;
    waitToken_ = "";
    clientVersion_ = "";
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private ListBreakpointsRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            debuggeeId_ = s;
            break;
          }
          case 16: {

            includeAllUsers_ = input.readBool();
            break;
          }
          case 24: {

            includeInactive_ = input.readBool();
            break;
          }
          case 34: {
            com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue.Builder subBuilder = null;
            if (action_ != null) {
              subBuilder = action_.toBuilder();
            }
            action_ = input.readMessage(com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(action_);
              action_ = subBuilder.buildPartial();
            }

            break;
          }
          case 40: {

            stripResults_ = input.readBool();
            break;
          }
          case 50: {
            java.lang.String s = input.readStringRequireUtf8();

            waitToken_ = s;
            break;
          }
          case 66: {
            java.lang.String s = input.readStringRequireUtf8();

            clientVersion_ = s;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.devtools.clouddebugger.v2.DebuggerProto.internal_static_google_devtools_clouddebugger_v2_ListBreakpointsRequest_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.devtools.clouddebugger.v2.DebuggerProto.internal_static_google_devtools_clouddebugger_v2_ListBreakpointsRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.class, com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.Builder.class);
  }

  public interface BreakpointActionValueOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Only breakpoints with the specified action will pass the filter.
     * </pre>
     *
     * <code>.google.devtools.clouddebugger.v2.Breakpoint.Action value = 1;</code>
     */
    int getValueValue();
    /**
     * <pre>
     * Only breakpoints with the specified action will pass the filter.
     * </pre>
     *
     * <code>.google.devtools.clouddebugger.v2.Breakpoint.Action value = 1;</code>
     */
    com.google.devtools.clouddebugger.v2.Breakpoint.Action getValue();
  }
  /**
   * <pre>
   * Wrapper message for `Breakpoint.Action`. Defines a filter on the action
   * field of breakpoints.
   * </pre>
   *
   * Protobuf type {@code google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue}
   */
  public  static final class BreakpointActionValue extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue)
      BreakpointActionValueOrBuilder {
    // Use BreakpointActionValue.newBuilder() to construct.
    private BreakpointActionValue(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BreakpointActionValue() {
      value_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private BreakpointActionValue(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              value_ = rawValue;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.clouddebugger.v2.DebuggerProto.internal_static_google_devtools_clouddebugger_v2_ListBreakpointsRequest_BreakpointActionValue_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.clouddebugger.v2.DebuggerProto.internal_static_google_devtools_clouddebugger_v2_ListBreakpointsRequest_BreakpointActionValue_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue.class, com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue.Builder.class);
    }

    public static final int VALUE_FIELD_NUMBER = 1;
    private int value_;
    /**
     * <pre>
     * Only breakpoints with the specified action will pass the filter.
     * </pre>
     *
     * <code>.google.devtools.clouddebugger.v2.Breakpoint.Action value = 1;</code>
     */
    public int getValueValue() {
      return value_;
    }
    /**
     * <pre>
     * Only breakpoints with the specified action will pass the filter.
     * </pre>
     *
     * <code>.google.devtools.clouddebugger.v2.Breakpoint.Action value = 1;</code>
     */
    public com.google.devtools.clouddebugger.v2.Breakpoint.Action getValue() {
      com.google.devtools.clouddebugger.v2.Breakpoint.Action result = com.google.devtools.clouddebugger.v2.Breakpoint.Action.valueOf(value_);
      return result == null ? com.google.devtools.clouddebugger.v2.Breakpoint.Action.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (value_ != com.google.devtools.clouddebugger.v2.Breakpoint.Action.CAPTURE.getNumber()) {
        output.writeEnum(1, value_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (value_ != com.google.devtools.clouddebugger.v2.Breakpoint.Action.CAPTURE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, value_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue)) {
        return super.equals(obj);
      }
      com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue other = (com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue) obj;

      boolean result = true;
      result = result && value_ == other.value_;
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + value_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Wrapper message for `Breakpoint.Action`. Defines a filter on the action
     * field of breakpoints.
     * </pre>
     *
     * Protobuf type {@code google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue)
        com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValueOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.devtools.clouddebugger.v2.DebuggerProto.internal_static_google_devtools_clouddebugger_v2_ListBreakpointsRequest_BreakpointActionValue_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.devtools.clouddebugger.v2.DebuggerProto.internal_static_google_devtools_clouddebugger_v2_ListBreakpointsRequest_BreakpointActionValue_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue.class, com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue.Builder.class);
      }

      // Construct using com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        value_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.devtools.clouddebugger.v2.DebuggerProto.internal_static_google_devtools_clouddebugger_v2_ListBreakpointsRequest_BreakpointActionValue_descriptor;
      }

      public com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue getDefaultInstanceForType() {
        return com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue.getDefaultInstance();
      }

      public com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue build() {
        com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue buildPartial() {
        com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue result = new com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue(this);
        result.value_ = value_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue) {
          return mergeFrom((com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue other) {
        if (other == com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue.getDefaultInstance()) return this;
        if (other.value_ != 0) {
          setValueValue(other.getValueValue());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int value_ = 0;
      /**
       * <pre>
       * Only breakpoints with the specified action will pass the filter.
       * </pre>
       *
       * <code>.google.devtools.clouddebugger.v2.Breakpoint.Action value = 1;</code>
       */
      public int getValueValue() {
        return value_;
      }
      /**
       * <pre>
       * Only breakpoints with the specified action will pass the filter.
       * </pre>
       *
       * <code>.google.devtools.clouddebugger.v2.Breakpoint.Action value = 1;</code>
       */
      public Builder setValueValue(int value) {
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Only breakpoints with the specified action will pass the filter.
       * </pre>
       *
       * <code>.google.devtools.clouddebugger.v2.Breakpoint.Action value = 1;</code>
       */
      public com.google.devtools.clouddebugger.v2.Breakpoint.Action getValue() {
        com.google.devtools.clouddebugger.v2.Breakpoint.Action result = com.google.devtools.clouddebugger.v2.Breakpoint.Action.valueOf(value_);
        return result == null ? com.google.devtools.clouddebugger.v2.Breakpoint.Action.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Only breakpoints with the specified action will pass the filter.
       * </pre>
       *
       * <code>.google.devtools.clouddebugger.v2.Breakpoint.Action value = 1;</code>
       */
      public Builder setValue(com.google.devtools.clouddebugger.v2.Breakpoint.Action value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        value_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Only breakpoints with the specified action will pass the filter.
       * </pre>
       *
       * <code>.google.devtools.clouddebugger.v2.Breakpoint.Action value = 1;</code>
       */
      public Builder clearValue() {
        
        value_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue)
    }

    // @@protoc_insertion_point(class_scope:google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue)
    private static final com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue();
    }

    public static com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BreakpointActionValue>
        PARSER = new com.google.protobuf.AbstractParser<BreakpointActionValue>() {
      public BreakpointActionValue parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new BreakpointActionValue(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BreakpointActionValue> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BreakpointActionValue> getParserForType() {
      return PARSER;
    }

    public com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int DEBUGGEE_ID_FIELD_NUMBER = 1;
  private volatile java.lang.Object debuggeeId_;
  /**
   * <pre>
   * ID of the debuggee whose breakpoints to list.
   * </pre>
   *
   * <code>string debuggee_id = 1;</code>
   */
  public java.lang.String getDebuggeeId() {
    java.lang.Object ref = debuggeeId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      debuggeeId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * ID of the debuggee whose breakpoints to list.
   * </pre>
   *
   * <code>string debuggee_id = 1;</code>
   */
  public com.google.protobuf.ByteString
      getDebuggeeIdBytes() {
    java.lang.Object ref = debuggeeId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      debuggeeId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int INCLUDE_ALL_USERS_FIELD_NUMBER = 2;
  private boolean includeAllUsers_;
  /**
   * <pre>
   * When set to `true`, the response includes the list of breakpoints set by
   * any user. Otherwise, it includes only breakpoints set by the caller.
   * </pre>
   *
   * <code>bool include_all_users = 2;</code>
   */
  public boolean getIncludeAllUsers() {
    return includeAllUsers_;
  }

  public static final int INCLUDE_INACTIVE_FIELD_NUMBER = 3;
  private boolean includeInactive_;
  /**
   * <pre>
   * When set to `true`, the response includes active and inactive
   * breakpoints. Otherwise, it includes only active breakpoints.
   * </pre>
   *
   * <code>bool include_inactive = 3;</code>
   */
  public boolean getIncludeInactive() {
    return includeInactive_;
  }

  public static final int ACTION_FIELD_NUMBER = 4;
  private com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue action_;
  /**
   * <pre>
   * When set, the response includes only breakpoints with the specified action.
   * </pre>
   *
   * <code>.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue action = 4;</code>
   */
  public boolean hasAction() {
    return action_ != null;
  }
  /**
   * <pre>
   * When set, the response includes only breakpoints with the specified action.
   * </pre>
   *
   * <code>.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue action = 4;</code>
   */
  public com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue getAction() {
    return action_ == null ? com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue.getDefaultInstance() : action_;
  }
  /**
   * <pre>
   * When set, the response includes only breakpoints with the specified action.
   * </pre>
   *
   * <code>.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue action = 4;</code>
   */
  public com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValueOrBuilder getActionOrBuilder() {
    return getAction();
  }

  public static final int STRIP_RESULTS_FIELD_NUMBER = 5;
  private boolean stripResults_;
  /**
   * <pre>
   * This field is deprecated. The following fields are always stripped out of
   * the result: `stack_frames`, `evaluated_expressions` and `variable_table`.
   * </pre>
   *
   * <code>bool strip_results = 5;</code>
   */
  public boolean getStripResults() {
    return stripResults_;
  }

  public static final int WAIT_TOKEN_FIELD_NUMBER = 6;
  private volatile java.lang.Object waitToken_;
  /**
   * <pre>
   * A wait token that, if specified, blocks the call until the breakpoints
   * list has changed, or a server selected timeout has expired.  The value
   * should be set from the last response. The error code
   * `google.rpc.Code.ABORTED` (RPC) is returned on wait timeout, which
   * should be called again with the same `wait_token`.
   * </pre>
   *
   * <code>string wait_token = 6;</code>
   */
  public java.lang.String getWaitToken() {
    java.lang.Object ref = waitToken_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      waitToken_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * A wait token that, if specified, blocks the call until the breakpoints
   * list has changed, or a server selected timeout has expired.  The value
   * should be set from the last response. The error code
   * `google.rpc.Code.ABORTED` (RPC) is returned on wait timeout, which
   * should be called again with the same `wait_token`.
   * </pre>
   *
   * <code>string wait_token = 6;</code>
   */
  public com.google.protobuf.ByteString
      getWaitTokenBytes() {
    java.lang.Object ref = waitToken_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      waitToken_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CLIENT_VERSION_FIELD_NUMBER = 8;
  private volatile java.lang.Object clientVersion_;
  /**
   * <pre>
   * The client version making the call.
   * Following: `domain/type/version` (e.g., `google.com/intellij/v1`).
   * </pre>
   *
   * <code>string client_version = 8;</code>
   */
  public java.lang.String getClientVersion() {
    java.lang.Object ref = clientVersion_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      clientVersion_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The client version making the call.
   * Following: `domain/type/version` (e.g., `google.com/intellij/v1`).
   * </pre>
   *
   * <code>string client_version = 8;</code>
   */
  public com.google.protobuf.ByteString
      getClientVersionBytes() {
    java.lang.Object ref = clientVersion_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      clientVersion_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getDebuggeeIdBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, debuggeeId_);
    }
    if (includeAllUsers_ != false) {
      output.writeBool(2, includeAllUsers_);
    }
    if (includeInactive_ != false) {
      output.writeBool(3, includeInactive_);
    }
    if (action_ != null) {
      output.writeMessage(4, getAction());
    }
    if (stripResults_ != false) {
      output.writeBool(5, stripResults_);
    }
    if (!getWaitTokenBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, waitToken_);
    }
    if (!getClientVersionBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, clientVersion_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getDebuggeeIdBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, debuggeeId_);
    }
    if (includeAllUsers_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(2, includeAllUsers_);
    }
    if (includeInactive_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(3, includeInactive_);
    }
    if (action_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getAction());
    }
    if (stripResults_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(5, stripResults_);
    }
    if (!getWaitTokenBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, waitToken_);
    }
    if (!getClientVersionBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, clientVersion_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.devtools.clouddebugger.v2.ListBreakpointsRequest)) {
      return super.equals(obj);
    }
    com.google.devtools.clouddebugger.v2.ListBreakpointsRequest other = (com.google.devtools.clouddebugger.v2.ListBreakpointsRequest) obj;

    boolean result = true;
    result = result && getDebuggeeId()
        .equals(other.getDebuggeeId());
    result = result && (getIncludeAllUsers()
        == other.getIncludeAllUsers());
    result = result && (getIncludeInactive()
        == other.getIncludeInactive());
    result = result && (hasAction() == other.hasAction());
    if (hasAction()) {
      result = result && getAction()
          .equals(other.getAction());
    }
    result = result && (getStripResults()
        == other.getStripResults());
    result = result && getWaitToken()
        .equals(other.getWaitToken());
    result = result && getClientVersion()
        .equals(other.getClientVersion());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + DEBUGGEE_ID_FIELD_NUMBER;
    hash = (53 * hash) + getDebuggeeId().hashCode();
    hash = (37 * hash) + INCLUDE_ALL_USERS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getIncludeAllUsers());
    hash = (37 * hash) + INCLUDE_INACTIVE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getIncludeInactive());
    if (hasAction()) {
      hash = (37 * hash) + ACTION_FIELD_NUMBER;
      hash = (53 * hash) + getAction().hashCode();
    }
    hash = (37 * hash) + STRIP_RESULTS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getStripResults());
    hash = (37 * hash) + WAIT_TOKEN_FIELD_NUMBER;
    hash = (53 * hash) + getWaitToken().hashCode();
    hash = (37 * hash) + CLIENT_VERSION_FIELD_NUMBER;
    hash = (53 * hash) + getClientVersion().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.devtools.clouddebugger.v2.ListBreakpointsRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.clouddebugger.v2.ListBreakpointsRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.clouddebugger.v2.ListBreakpointsRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.clouddebugger.v2.ListBreakpointsRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.clouddebugger.v2.ListBreakpointsRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.clouddebugger.v2.ListBreakpointsRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.clouddebugger.v2.ListBreakpointsRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.devtools.clouddebugger.v2.ListBreakpointsRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.clouddebugger.v2.ListBreakpointsRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.clouddebugger.v2.ListBreakpointsRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.devtools.clouddebugger.v2.ListBreakpointsRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Request to list breakpoints.
   * </pre>
   *
   * Protobuf type {@code google.devtools.clouddebugger.v2.ListBreakpointsRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.devtools.clouddebugger.v2.ListBreakpointsRequest)
      com.google.devtools.clouddebugger.v2.ListBreakpointsRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.clouddebugger.v2.DebuggerProto.internal_static_google_devtools_clouddebugger_v2_ListBreakpointsRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.clouddebugger.v2.DebuggerProto.internal_static_google_devtools_clouddebugger_v2_ListBreakpointsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.class, com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.Builder.class);
    }

    // Construct using com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      debuggeeId_ = "";

      includeAllUsers_ = false;

      includeInactive_ = false;

      if (actionBuilder_ == null) {
        action_ = null;
      } else {
        action_ = null;
        actionBuilder_ = null;
      }
      stripResults_ = false;

      waitToken_ = "";

      clientVersion_ = "";

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.devtools.clouddebugger.v2.DebuggerProto.internal_static_google_devtools_clouddebugger_v2_ListBreakpointsRequest_descriptor;
    }

    public com.google.devtools.clouddebugger.v2.ListBreakpointsRequest getDefaultInstanceForType() {
      return com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.getDefaultInstance();
    }

    public com.google.devtools.clouddebugger.v2.ListBreakpointsRequest build() {
      com.google.devtools.clouddebugger.v2.ListBreakpointsRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.google.devtools.clouddebugger.v2.ListBreakpointsRequest buildPartial() {
      com.google.devtools.clouddebugger.v2.ListBreakpointsRequest result = new com.google.devtools.clouddebugger.v2.ListBreakpointsRequest(this);
      result.debuggeeId_ = debuggeeId_;
      result.includeAllUsers_ = includeAllUsers_;
      result.includeInactive_ = includeInactive_;
      if (actionBuilder_ == null) {
        result.action_ = action_;
      } else {
        result.action_ = actionBuilder_.build();
      }
      result.stripResults_ = stripResults_;
      result.waitToken_ = waitToken_;
      result.clientVersion_ = clientVersion_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.devtools.clouddebugger.v2.ListBreakpointsRequest) {
        return mergeFrom((com.google.devtools.clouddebugger.v2.ListBreakpointsRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.devtools.clouddebugger.v2.ListBreakpointsRequest other) {
      if (other == com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.getDefaultInstance()) return this;
      if (!other.getDebuggeeId().isEmpty()) {
        debuggeeId_ = other.debuggeeId_;
        onChanged();
      }
      if (other.getIncludeAllUsers() != false) {
        setIncludeAllUsers(other.getIncludeAllUsers());
      }
      if (other.getIncludeInactive() != false) {
        setIncludeInactive(other.getIncludeInactive());
      }
      if (other.hasAction()) {
        mergeAction(other.getAction());
      }
      if (other.getStripResults() != false) {
        setStripResults(other.getStripResults());
      }
      if (!other.getWaitToken().isEmpty()) {
        waitToken_ = other.waitToken_;
        onChanged();
      }
      if (!other.getClientVersion().isEmpty()) {
        clientVersion_ = other.clientVersion_;
        onChanged();
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.devtools.clouddebugger.v2.ListBreakpointsRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.devtools.clouddebugger.v2.ListBreakpointsRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object debuggeeId_ = "";
    /**
     * <pre>
     * ID of the debuggee whose breakpoints to list.
     * </pre>
     *
     * <code>string debuggee_id = 1;</code>
     */
    public java.lang.String getDebuggeeId() {
      java.lang.Object ref = debuggeeId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        debuggeeId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * ID of the debuggee whose breakpoints to list.
     * </pre>
     *
     * <code>string debuggee_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getDebuggeeIdBytes() {
      java.lang.Object ref = debuggeeId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        debuggeeId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * ID of the debuggee whose breakpoints to list.
     * </pre>
     *
     * <code>string debuggee_id = 1;</code>
     */
    public Builder setDebuggeeId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      debuggeeId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * ID of the debuggee whose breakpoints to list.
     * </pre>
     *
     * <code>string debuggee_id = 1;</code>
     */
    public Builder clearDebuggeeId() {
      
      debuggeeId_ = getDefaultInstance().getDebuggeeId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * ID of the debuggee whose breakpoints to list.
     * </pre>
     *
     * <code>string debuggee_id = 1;</code>
     */
    public Builder setDebuggeeIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      debuggeeId_ = value;
      onChanged();
      return this;
    }

    private boolean includeAllUsers_ ;
    /**
     * <pre>
     * When set to `true`, the response includes the list of breakpoints set by
     * any user. Otherwise, it includes only breakpoints set by the caller.
     * </pre>
     *
     * <code>bool include_all_users = 2;</code>
     */
    public boolean getIncludeAllUsers() {
      return includeAllUsers_;
    }
    /**
     * <pre>
     * When set to `true`, the response includes the list of breakpoints set by
     * any user. Otherwise, it includes only breakpoints set by the caller.
     * </pre>
     *
     * <code>bool include_all_users = 2;</code>
     */
    public Builder setIncludeAllUsers(boolean value) {
      
      includeAllUsers_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When set to `true`, the response includes the list of breakpoints set by
     * any user. Otherwise, it includes only breakpoints set by the caller.
     * </pre>
     *
     * <code>bool include_all_users = 2;</code>
     */
    public Builder clearIncludeAllUsers() {
      
      includeAllUsers_ = false;
      onChanged();
      return this;
    }

    private boolean includeInactive_ ;
    /**
     * <pre>
     * When set to `true`, the response includes active and inactive
     * breakpoints. Otherwise, it includes only active breakpoints.
     * </pre>
     *
     * <code>bool include_inactive = 3;</code>
     */
    public boolean getIncludeInactive() {
      return includeInactive_;
    }
    /**
     * <pre>
     * When set to `true`, the response includes active and inactive
     * breakpoints. Otherwise, it includes only active breakpoints.
     * </pre>
     *
     * <code>bool include_inactive = 3;</code>
     */
    public Builder setIncludeInactive(boolean value) {
      
      includeInactive_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When set to `true`, the response includes active and inactive
     * breakpoints. Otherwise, it includes only active breakpoints.
     * </pre>
     *
     * <code>bool include_inactive = 3;</code>
     */
    public Builder clearIncludeInactive() {
      
      includeInactive_ = false;
      onChanged();
      return this;
    }

    private com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue action_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue, com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue.Builder, com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValueOrBuilder> actionBuilder_;
    /**
     * <pre>
     * When set, the response includes only breakpoints with the specified action.
     * </pre>
     *
     * <code>.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue action = 4;</code>
     */
    public boolean hasAction() {
      return actionBuilder_ != null || action_ != null;
    }
    /**
     * <pre>
     * When set, the response includes only breakpoints with the specified action.
     * </pre>
     *
     * <code>.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue action = 4;</code>
     */
    public com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue getAction() {
      if (actionBuilder_ == null) {
        return action_ == null ? com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue.getDefaultInstance() : action_;
      } else {
        return actionBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * When set, the response includes only breakpoints with the specified action.
     * </pre>
     *
     * <code>.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue action = 4;</code>
     */
    public Builder setAction(com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue value) {
      if (actionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        actionBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * When set, the response includes only breakpoints with the specified action.
     * </pre>
     *
     * <code>.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue action = 4;</code>
     */
    public Builder setAction(
        com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue.Builder builderForValue) {
      if (actionBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        actionBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * When set, the response includes only breakpoints with the specified action.
     * </pre>
     *
     * <code>.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue action = 4;</code>
     */
    public Builder mergeAction(com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue value) {
      if (actionBuilder_ == null) {
        if (action_ != null) {
          action_ =
            com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue.newBuilder(action_).mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        actionBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * When set, the response includes only breakpoints with the specified action.
     * </pre>
     *
     * <code>.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue action = 4;</code>
     */
    public Builder clearAction() {
      if (actionBuilder_ == null) {
        action_ = null;
        onChanged();
      } else {
        action_ = null;
        actionBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * When set, the response includes only breakpoints with the specified action.
     * </pre>
     *
     * <code>.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue action = 4;</code>
     */
    public com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue.Builder getActionBuilder() {
      
      onChanged();
      return getActionFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * When set, the response includes only breakpoints with the specified action.
     * </pre>
     *
     * <code>.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue action = 4;</code>
     */
    public com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValueOrBuilder getActionOrBuilder() {
      if (actionBuilder_ != null) {
        return actionBuilder_.getMessageOrBuilder();
      } else {
        return action_ == null ?
            com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue.getDefaultInstance() : action_;
      }
    }
    /**
     * <pre>
     * When set, the response includes only breakpoints with the specified action.
     * </pre>
     *
     * <code>.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue action = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue, com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue.Builder, com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValueOrBuilder> 
        getActionFieldBuilder() {
      if (actionBuilder_ == null) {
        actionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue, com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValue.Builder, com.google.devtools.clouddebugger.v2.ListBreakpointsRequest.BreakpointActionValueOrBuilder>(
                getAction(),
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      return actionBuilder_;
    }

    private boolean stripResults_ ;
    /**
     * <pre>
     * This field is deprecated. The following fields are always stripped out of
     * the result: `stack_frames`, `evaluated_expressions` and `variable_table`.
     * </pre>
     *
     * <code>bool strip_results = 5;</code>
     */
    public boolean getStripResults() {
      return stripResults_;
    }
    /**
     * <pre>
     * This field is deprecated. The following fields are always stripped out of
     * the result: `stack_frames`, `evaluated_expressions` and `variable_table`.
     * </pre>
     *
     * <code>bool strip_results = 5;</code>
     */
    public Builder setStripResults(boolean value) {
      
      stripResults_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This field is deprecated. The following fields are always stripped out of
     * the result: `stack_frames`, `evaluated_expressions` and `variable_table`.
     * </pre>
     *
     * <code>bool strip_results = 5;</code>
     */
    public Builder clearStripResults() {
      
      stripResults_ = false;
      onChanged();
      return this;
    }

    private java.lang.Object waitToken_ = "";
    /**
     * <pre>
     * A wait token that, if specified, blocks the call until the breakpoints
     * list has changed, or a server selected timeout has expired.  The value
     * should be set from the last response. The error code
     * `google.rpc.Code.ABORTED` (RPC) is returned on wait timeout, which
     * should be called again with the same `wait_token`.
     * </pre>
     *
     * <code>string wait_token = 6;</code>
     */
    public java.lang.String getWaitToken() {
      java.lang.Object ref = waitToken_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        waitToken_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * A wait token that, if specified, blocks the call until the breakpoints
     * list has changed, or a server selected timeout has expired.  The value
     * should be set from the last response. The error code
     * `google.rpc.Code.ABORTED` (RPC) is returned on wait timeout, which
     * should be called again with the same `wait_token`.
     * </pre>
     *
     * <code>string wait_token = 6;</code>
     */
    public com.google.protobuf.ByteString
        getWaitTokenBytes() {
      java.lang.Object ref = waitToken_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        waitToken_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * A wait token that, if specified, blocks the call until the breakpoints
     * list has changed, or a server selected timeout has expired.  The value
     * should be set from the last response. The error code
     * `google.rpc.Code.ABORTED` (RPC) is returned on wait timeout, which
     * should be called again with the same `wait_token`.
     * </pre>
     *
     * <code>string wait_token = 6;</code>
     */
    public Builder setWaitToken(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      waitToken_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A wait token that, if specified, blocks the call until the breakpoints
     * list has changed, or a server selected timeout has expired.  The value
     * should be set from the last response. The error code
     * `google.rpc.Code.ABORTED` (RPC) is returned on wait timeout, which
     * should be called again with the same `wait_token`.
     * </pre>
     *
     * <code>string wait_token = 6;</code>
     */
    public Builder clearWaitToken() {
      
      waitToken_ = getDefaultInstance().getWaitToken();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A wait token that, if specified, blocks the call until the breakpoints
     * list has changed, or a server selected timeout has expired.  The value
     * should be set from the last response. The error code
     * `google.rpc.Code.ABORTED` (RPC) is returned on wait timeout, which
     * should be called again with the same `wait_token`.
     * </pre>
     *
     * <code>string wait_token = 6;</code>
     */
    public Builder setWaitTokenBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      waitToken_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object clientVersion_ = "";
    /**
     * <pre>
     * The client version making the call.
     * Following: `domain/type/version` (e.g., `google.com/intellij/v1`).
     * </pre>
     *
     * <code>string client_version = 8;</code>
     */
    public java.lang.String getClientVersion() {
      java.lang.Object ref = clientVersion_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        clientVersion_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The client version making the call.
     * Following: `domain/type/version` (e.g., `google.com/intellij/v1`).
     * </pre>
     *
     * <code>string client_version = 8;</code>
     */
    public com.google.protobuf.ByteString
        getClientVersionBytes() {
      java.lang.Object ref = clientVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clientVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The client version making the call.
     * Following: `domain/type/version` (e.g., `google.com/intellij/v1`).
     * </pre>
     *
     * <code>string client_version = 8;</code>
     */
    public Builder setClientVersion(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      clientVersion_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The client version making the call.
     * Following: `domain/type/version` (e.g., `google.com/intellij/v1`).
     * </pre>
     *
     * <code>string client_version = 8;</code>
     */
    public Builder clearClientVersion() {
      
      clientVersion_ = getDefaultInstance().getClientVersion();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The client version making the call.
     * Following: `domain/type/version` (e.g., `google.com/intellij/v1`).
     * </pre>
     *
     * <code>string client_version = 8;</code>
     */
    public Builder setClientVersionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      clientVersion_ = value;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:google.devtools.clouddebugger.v2.ListBreakpointsRequest)
  }

  // @@protoc_insertion_point(class_scope:google.devtools.clouddebugger.v2.ListBreakpointsRequest)
  private static final com.google.devtools.clouddebugger.v2.ListBreakpointsRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.devtools.clouddebugger.v2.ListBreakpointsRequest();
  }

  public static com.google.devtools.clouddebugger.v2.ListBreakpointsRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ListBreakpointsRequest>
      PARSER = new com.google.protobuf.AbstractParser<ListBreakpointsRequest>() {
    public ListBreakpointsRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new ListBreakpointsRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ListBreakpointsRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ListBreakpointsRequest> getParserForType() {
    return PARSER;
  }

  public com.google.devtools.clouddebugger.v2.ListBreakpointsRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

