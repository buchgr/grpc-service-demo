// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/clouddebugger/v2/data.proto

package com.google.devtools.clouddebugger.v2;

public interface FormatMessageOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.devtools.clouddebugger.v2.FormatMessage)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Format template for the message. The `format` uses placeholders `$0`,
   * `$1`, etc. to reference parameters. `$$` can be used to denote the `$`
   * character.
   * Examples:
   * *   `Failed to load '$0' which helps debug $1 the first time it
   *     is loaded.  Again, $0 is very important.`
   * *   `Please pay $$10 to use $0 instead of $1.`
   * </pre>
   *
   * <code>string format = 1;</code>
   */
  java.lang.String getFormat();
  /**
   * <pre>
   * Format template for the message. The `format` uses placeholders `$0`,
   * `$1`, etc. to reference parameters. `$$` can be used to denote the `$`
   * character.
   * Examples:
   * *   `Failed to load '$0' which helps debug $1 the first time it
   *     is loaded.  Again, $0 is very important.`
   * *   `Please pay $$10 to use $0 instead of $1.`
   * </pre>
   *
   * <code>string format = 1;</code>
   */
  com.google.protobuf.ByteString
      getFormatBytes();

  /**
   * <pre>
   * Optional parameters to be embedded into the message.
   * </pre>
   *
   * <code>repeated string parameters = 2;</code>
   */
  java.util.List<java.lang.String>
      getParametersList();
  /**
   * <pre>
   * Optional parameters to be embedded into the message.
   * </pre>
   *
   * <code>repeated string parameters = 2;</code>
   */
  int getParametersCount();
  /**
   * <pre>
   * Optional parameters to be embedded into the message.
   * </pre>
   *
   * <code>repeated string parameters = 2;</code>
   */
  java.lang.String getParameters(int index);
  /**
   * <pre>
   * Optional parameters to be embedded into the message.
   * </pre>
   *
   * <code>repeated string parameters = 2;</code>
   */
  com.google.protobuf.ByteString
      getParametersBytes(int index);
}
