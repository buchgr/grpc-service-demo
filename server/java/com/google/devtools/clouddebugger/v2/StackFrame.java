// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/clouddebugger/v2/data.proto

package com.google.devtools.clouddebugger.v2;

/**
 * <pre>
 * Represents a stack frame context.
 * </pre>
 *
 * Protobuf type {@code google.devtools.clouddebugger.v2.StackFrame}
 */
public  final class StackFrame extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.devtools.clouddebugger.v2.StackFrame)
    StackFrameOrBuilder {
  // Use StackFrame.newBuilder() to construct.
  private StackFrame(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private StackFrame() {
    function_ = "";
    arguments_ = java.util.Collections.emptyList();
    locals_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private StackFrame(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            function_ = s;
            break;
          }
          case 18: {
            com.google.devtools.clouddebugger.v2.SourceLocation.Builder subBuilder = null;
            if (location_ != null) {
              subBuilder = location_.toBuilder();
            }
            location_ = input.readMessage(com.google.devtools.clouddebugger.v2.SourceLocation.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(location_);
              location_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              arguments_ = new java.util.ArrayList<com.google.devtools.clouddebugger.v2.Variable>();
              mutable_bitField0_ |= 0x00000004;
            }
            arguments_.add(
                input.readMessage(com.google.devtools.clouddebugger.v2.Variable.parser(), extensionRegistry));
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
              locals_ = new java.util.ArrayList<com.google.devtools.clouddebugger.v2.Variable>();
              mutable_bitField0_ |= 0x00000008;
            }
            locals_.add(
                input.readMessage(com.google.devtools.clouddebugger.v2.Variable.parser(), extensionRegistry));
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
        arguments_ = java.util.Collections.unmodifiableList(arguments_);
      }
      if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
        locals_ = java.util.Collections.unmodifiableList(locals_);
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.devtools.clouddebugger.v2.DataProto.internal_static_google_devtools_clouddebugger_v2_StackFrame_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.devtools.clouddebugger.v2.DataProto.internal_static_google_devtools_clouddebugger_v2_StackFrame_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.devtools.clouddebugger.v2.StackFrame.class, com.google.devtools.clouddebugger.v2.StackFrame.Builder.class);
  }

  private int bitField0_;
  public static final int FUNCTION_FIELD_NUMBER = 1;
  private volatile java.lang.Object function_;
  /**
   * <pre>
   * Demangled function name at the call site.
   * </pre>
   *
   * <code>string function = 1;</code>
   */
  public java.lang.String getFunction() {
    java.lang.Object ref = function_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      function_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Demangled function name at the call site.
   * </pre>
   *
   * <code>string function = 1;</code>
   */
  public com.google.protobuf.ByteString
      getFunctionBytes() {
    java.lang.Object ref = function_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      function_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int LOCATION_FIELD_NUMBER = 2;
  private com.google.devtools.clouddebugger.v2.SourceLocation location_;
  /**
   * <pre>
   * Source location of the call site.
   * </pre>
   *
   * <code>.google.devtools.clouddebugger.v2.SourceLocation location = 2;</code>
   */
  public boolean hasLocation() {
    return location_ != null;
  }
  /**
   * <pre>
   * Source location of the call site.
   * </pre>
   *
   * <code>.google.devtools.clouddebugger.v2.SourceLocation location = 2;</code>
   */
  public com.google.devtools.clouddebugger.v2.SourceLocation getLocation() {
    return location_ == null ? com.google.devtools.clouddebugger.v2.SourceLocation.getDefaultInstance() : location_;
  }
  /**
   * <pre>
   * Source location of the call site.
   * </pre>
   *
   * <code>.google.devtools.clouddebugger.v2.SourceLocation location = 2;</code>
   */
  public com.google.devtools.clouddebugger.v2.SourceLocationOrBuilder getLocationOrBuilder() {
    return getLocation();
  }

  public static final int ARGUMENTS_FIELD_NUMBER = 3;
  private java.util.List<com.google.devtools.clouddebugger.v2.Variable> arguments_;
  /**
   * <pre>
   * Set of arguments passed to this function.
   * Note that this might not be populated for all stack frames.
   * </pre>
   *
   * <code>repeated .google.devtools.clouddebugger.v2.Variable arguments = 3;</code>
   */
  public java.util.List<com.google.devtools.clouddebugger.v2.Variable> getArgumentsList() {
    return arguments_;
  }
  /**
   * <pre>
   * Set of arguments passed to this function.
   * Note that this might not be populated for all stack frames.
   * </pre>
   *
   * <code>repeated .google.devtools.clouddebugger.v2.Variable arguments = 3;</code>
   */
  public java.util.List<? extends com.google.devtools.clouddebugger.v2.VariableOrBuilder> 
      getArgumentsOrBuilderList() {
    return arguments_;
  }
  /**
   * <pre>
   * Set of arguments passed to this function.
   * Note that this might not be populated for all stack frames.
   * </pre>
   *
   * <code>repeated .google.devtools.clouddebugger.v2.Variable arguments = 3;</code>
   */
  public int getArgumentsCount() {
    return arguments_.size();
  }
  /**
   * <pre>
   * Set of arguments passed to this function.
   * Note that this might not be populated for all stack frames.
   * </pre>
   *
   * <code>repeated .google.devtools.clouddebugger.v2.Variable arguments = 3;</code>
   */
  public com.google.devtools.clouddebugger.v2.Variable getArguments(int index) {
    return arguments_.get(index);
  }
  /**
   * <pre>
   * Set of arguments passed to this function.
   * Note that this might not be populated for all stack frames.
   * </pre>
   *
   * <code>repeated .google.devtools.clouddebugger.v2.Variable arguments = 3;</code>
   */
  public com.google.devtools.clouddebugger.v2.VariableOrBuilder getArgumentsOrBuilder(
      int index) {
    return arguments_.get(index);
  }

  public static final int LOCALS_FIELD_NUMBER = 4;
  private java.util.List<com.google.devtools.clouddebugger.v2.Variable> locals_;
  /**
   * <pre>
   * Set of local variables at the stack frame location.
   * Note that this might not be populated for all stack frames.
   * </pre>
   *
   * <code>repeated .google.devtools.clouddebugger.v2.Variable locals = 4;</code>
   */
  public java.util.List<com.google.devtools.clouddebugger.v2.Variable> getLocalsList() {
    return locals_;
  }
  /**
   * <pre>
   * Set of local variables at the stack frame location.
   * Note that this might not be populated for all stack frames.
   * </pre>
   *
   * <code>repeated .google.devtools.clouddebugger.v2.Variable locals = 4;</code>
   */
  public java.util.List<? extends com.google.devtools.clouddebugger.v2.VariableOrBuilder> 
      getLocalsOrBuilderList() {
    return locals_;
  }
  /**
   * <pre>
   * Set of local variables at the stack frame location.
   * Note that this might not be populated for all stack frames.
   * </pre>
   *
   * <code>repeated .google.devtools.clouddebugger.v2.Variable locals = 4;</code>
   */
  public int getLocalsCount() {
    return locals_.size();
  }
  /**
   * <pre>
   * Set of local variables at the stack frame location.
   * Note that this might not be populated for all stack frames.
   * </pre>
   *
   * <code>repeated .google.devtools.clouddebugger.v2.Variable locals = 4;</code>
   */
  public com.google.devtools.clouddebugger.v2.Variable getLocals(int index) {
    return locals_.get(index);
  }
  /**
   * <pre>
   * Set of local variables at the stack frame location.
   * Note that this might not be populated for all stack frames.
   * </pre>
   *
   * <code>repeated .google.devtools.clouddebugger.v2.Variable locals = 4;</code>
   */
  public com.google.devtools.clouddebugger.v2.VariableOrBuilder getLocalsOrBuilder(
      int index) {
    return locals_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getFunctionBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, function_);
    }
    if (location_ != null) {
      output.writeMessage(2, getLocation());
    }
    for (int i = 0; i < arguments_.size(); i++) {
      output.writeMessage(3, arguments_.get(i));
    }
    for (int i = 0; i < locals_.size(); i++) {
      output.writeMessage(4, locals_.get(i));
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getFunctionBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, function_);
    }
    if (location_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getLocation());
    }
    for (int i = 0; i < arguments_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, arguments_.get(i));
    }
    for (int i = 0; i < locals_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, locals_.get(i));
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.devtools.clouddebugger.v2.StackFrame)) {
      return super.equals(obj);
    }
    com.google.devtools.clouddebugger.v2.StackFrame other = (com.google.devtools.clouddebugger.v2.StackFrame) obj;

    boolean result = true;
    result = result && getFunction()
        .equals(other.getFunction());
    result = result && (hasLocation() == other.hasLocation());
    if (hasLocation()) {
      result = result && getLocation()
          .equals(other.getLocation());
    }
    result = result && getArgumentsList()
        .equals(other.getArgumentsList());
    result = result && getLocalsList()
        .equals(other.getLocalsList());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + FUNCTION_FIELD_NUMBER;
    hash = (53 * hash) + getFunction().hashCode();
    if (hasLocation()) {
      hash = (37 * hash) + LOCATION_FIELD_NUMBER;
      hash = (53 * hash) + getLocation().hashCode();
    }
    if (getArgumentsCount() > 0) {
      hash = (37 * hash) + ARGUMENTS_FIELD_NUMBER;
      hash = (53 * hash) + getArgumentsList().hashCode();
    }
    if (getLocalsCount() > 0) {
      hash = (37 * hash) + LOCALS_FIELD_NUMBER;
      hash = (53 * hash) + getLocalsList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.devtools.clouddebugger.v2.StackFrame parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.clouddebugger.v2.StackFrame parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.clouddebugger.v2.StackFrame parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.clouddebugger.v2.StackFrame parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.clouddebugger.v2.StackFrame parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.clouddebugger.v2.StackFrame parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.clouddebugger.v2.StackFrame parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.devtools.clouddebugger.v2.StackFrame parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.clouddebugger.v2.StackFrame parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.clouddebugger.v2.StackFrame parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.devtools.clouddebugger.v2.StackFrame prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Represents a stack frame context.
   * </pre>
   *
   * Protobuf type {@code google.devtools.clouddebugger.v2.StackFrame}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.devtools.clouddebugger.v2.StackFrame)
      com.google.devtools.clouddebugger.v2.StackFrameOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.clouddebugger.v2.DataProto.internal_static_google_devtools_clouddebugger_v2_StackFrame_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.clouddebugger.v2.DataProto.internal_static_google_devtools_clouddebugger_v2_StackFrame_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.clouddebugger.v2.StackFrame.class, com.google.devtools.clouddebugger.v2.StackFrame.Builder.class);
    }

    // Construct using com.google.devtools.clouddebugger.v2.StackFrame.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getArgumentsFieldBuilder();
        getLocalsFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      function_ = "";

      if (locationBuilder_ == null) {
        location_ = null;
      } else {
        location_ = null;
        locationBuilder_ = null;
      }
      if (argumentsBuilder_ == null) {
        arguments_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
      } else {
        argumentsBuilder_.clear();
      }
      if (localsBuilder_ == null) {
        locals_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
      } else {
        localsBuilder_.clear();
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.devtools.clouddebugger.v2.DataProto.internal_static_google_devtools_clouddebugger_v2_StackFrame_descriptor;
    }

    public com.google.devtools.clouddebugger.v2.StackFrame getDefaultInstanceForType() {
      return com.google.devtools.clouddebugger.v2.StackFrame.getDefaultInstance();
    }

    public com.google.devtools.clouddebugger.v2.StackFrame build() {
      com.google.devtools.clouddebugger.v2.StackFrame result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.google.devtools.clouddebugger.v2.StackFrame buildPartial() {
      com.google.devtools.clouddebugger.v2.StackFrame result = new com.google.devtools.clouddebugger.v2.StackFrame(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.function_ = function_;
      if (locationBuilder_ == null) {
        result.location_ = location_;
      } else {
        result.location_ = locationBuilder_.build();
      }
      if (argumentsBuilder_ == null) {
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          arguments_ = java.util.Collections.unmodifiableList(arguments_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.arguments_ = arguments_;
      } else {
        result.arguments_ = argumentsBuilder_.build();
      }
      if (localsBuilder_ == null) {
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          locals_ = java.util.Collections.unmodifiableList(locals_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.locals_ = locals_;
      } else {
        result.locals_ = localsBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.devtools.clouddebugger.v2.StackFrame) {
        return mergeFrom((com.google.devtools.clouddebugger.v2.StackFrame)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.devtools.clouddebugger.v2.StackFrame other) {
      if (other == com.google.devtools.clouddebugger.v2.StackFrame.getDefaultInstance()) return this;
      if (!other.getFunction().isEmpty()) {
        function_ = other.function_;
        onChanged();
      }
      if (other.hasLocation()) {
        mergeLocation(other.getLocation());
      }
      if (argumentsBuilder_ == null) {
        if (!other.arguments_.isEmpty()) {
          if (arguments_.isEmpty()) {
            arguments_ = other.arguments_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureArgumentsIsMutable();
            arguments_.addAll(other.arguments_);
          }
          onChanged();
        }
      } else {
        if (!other.arguments_.isEmpty()) {
          if (argumentsBuilder_.isEmpty()) {
            argumentsBuilder_.dispose();
            argumentsBuilder_ = null;
            arguments_ = other.arguments_;
            bitField0_ = (bitField0_ & ~0x00000004);
            argumentsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getArgumentsFieldBuilder() : null;
          } else {
            argumentsBuilder_.addAllMessages(other.arguments_);
          }
        }
      }
      if (localsBuilder_ == null) {
        if (!other.locals_.isEmpty()) {
          if (locals_.isEmpty()) {
            locals_ = other.locals_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureLocalsIsMutable();
            locals_.addAll(other.locals_);
          }
          onChanged();
        }
      } else {
        if (!other.locals_.isEmpty()) {
          if (localsBuilder_.isEmpty()) {
            localsBuilder_.dispose();
            localsBuilder_ = null;
            locals_ = other.locals_;
            bitField0_ = (bitField0_ & ~0x00000008);
            localsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getLocalsFieldBuilder() : null;
          } else {
            localsBuilder_.addAllMessages(other.locals_);
          }
        }
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.devtools.clouddebugger.v2.StackFrame parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.devtools.clouddebugger.v2.StackFrame) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object function_ = "";
    /**
     * <pre>
     * Demangled function name at the call site.
     * </pre>
     *
     * <code>string function = 1;</code>
     */
    public java.lang.String getFunction() {
      java.lang.Object ref = function_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        function_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Demangled function name at the call site.
     * </pre>
     *
     * <code>string function = 1;</code>
     */
    public com.google.protobuf.ByteString
        getFunctionBytes() {
      java.lang.Object ref = function_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        function_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Demangled function name at the call site.
     * </pre>
     *
     * <code>string function = 1;</code>
     */
    public Builder setFunction(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      function_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Demangled function name at the call site.
     * </pre>
     *
     * <code>string function = 1;</code>
     */
    public Builder clearFunction() {
      
      function_ = getDefaultInstance().getFunction();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Demangled function name at the call site.
     * </pre>
     *
     * <code>string function = 1;</code>
     */
    public Builder setFunctionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      function_ = value;
      onChanged();
      return this;
    }

    private com.google.devtools.clouddebugger.v2.SourceLocation location_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.clouddebugger.v2.SourceLocation, com.google.devtools.clouddebugger.v2.SourceLocation.Builder, com.google.devtools.clouddebugger.v2.SourceLocationOrBuilder> locationBuilder_;
    /**
     * <pre>
     * Source location of the call site.
     * </pre>
     *
     * <code>.google.devtools.clouddebugger.v2.SourceLocation location = 2;</code>
     */
    public boolean hasLocation() {
      return locationBuilder_ != null || location_ != null;
    }
    /**
     * <pre>
     * Source location of the call site.
     * </pre>
     *
     * <code>.google.devtools.clouddebugger.v2.SourceLocation location = 2;</code>
     */
    public com.google.devtools.clouddebugger.v2.SourceLocation getLocation() {
      if (locationBuilder_ == null) {
        return location_ == null ? com.google.devtools.clouddebugger.v2.SourceLocation.getDefaultInstance() : location_;
      } else {
        return locationBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Source location of the call site.
     * </pre>
     *
     * <code>.google.devtools.clouddebugger.v2.SourceLocation location = 2;</code>
     */
    public Builder setLocation(com.google.devtools.clouddebugger.v2.SourceLocation value) {
      if (locationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        location_ = value;
        onChanged();
      } else {
        locationBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Source location of the call site.
     * </pre>
     *
     * <code>.google.devtools.clouddebugger.v2.SourceLocation location = 2;</code>
     */
    public Builder setLocation(
        com.google.devtools.clouddebugger.v2.SourceLocation.Builder builderForValue) {
      if (locationBuilder_ == null) {
        location_ = builderForValue.build();
        onChanged();
      } else {
        locationBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Source location of the call site.
     * </pre>
     *
     * <code>.google.devtools.clouddebugger.v2.SourceLocation location = 2;</code>
     */
    public Builder mergeLocation(com.google.devtools.clouddebugger.v2.SourceLocation value) {
      if (locationBuilder_ == null) {
        if (location_ != null) {
          location_ =
            com.google.devtools.clouddebugger.v2.SourceLocation.newBuilder(location_).mergeFrom(value).buildPartial();
        } else {
          location_ = value;
        }
        onChanged();
      } else {
        locationBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Source location of the call site.
     * </pre>
     *
     * <code>.google.devtools.clouddebugger.v2.SourceLocation location = 2;</code>
     */
    public Builder clearLocation() {
      if (locationBuilder_ == null) {
        location_ = null;
        onChanged();
      } else {
        location_ = null;
        locationBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Source location of the call site.
     * </pre>
     *
     * <code>.google.devtools.clouddebugger.v2.SourceLocation location = 2;</code>
     */
    public com.google.devtools.clouddebugger.v2.SourceLocation.Builder getLocationBuilder() {
      
      onChanged();
      return getLocationFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Source location of the call site.
     * </pre>
     *
     * <code>.google.devtools.clouddebugger.v2.SourceLocation location = 2;</code>
     */
    public com.google.devtools.clouddebugger.v2.SourceLocationOrBuilder getLocationOrBuilder() {
      if (locationBuilder_ != null) {
        return locationBuilder_.getMessageOrBuilder();
      } else {
        return location_ == null ?
            com.google.devtools.clouddebugger.v2.SourceLocation.getDefaultInstance() : location_;
      }
    }
    /**
     * <pre>
     * Source location of the call site.
     * </pre>
     *
     * <code>.google.devtools.clouddebugger.v2.SourceLocation location = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.clouddebugger.v2.SourceLocation, com.google.devtools.clouddebugger.v2.SourceLocation.Builder, com.google.devtools.clouddebugger.v2.SourceLocationOrBuilder> 
        getLocationFieldBuilder() {
      if (locationBuilder_ == null) {
        locationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.devtools.clouddebugger.v2.SourceLocation, com.google.devtools.clouddebugger.v2.SourceLocation.Builder, com.google.devtools.clouddebugger.v2.SourceLocationOrBuilder>(
                getLocation(),
                getParentForChildren(),
                isClean());
        location_ = null;
      }
      return locationBuilder_;
    }

    private java.util.List<com.google.devtools.clouddebugger.v2.Variable> arguments_ =
      java.util.Collections.emptyList();
    private void ensureArgumentsIsMutable() {
      if (!((bitField0_ & 0x00000004) == 0x00000004)) {
        arguments_ = new java.util.ArrayList<com.google.devtools.clouddebugger.v2.Variable>(arguments_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.devtools.clouddebugger.v2.Variable, com.google.devtools.clouddebugger.v2.Variable.Builder, com.google.devtools.clouddebugger.v2.VariableOrBuilder> argumentsBuilder_;

    /**
     * <pre>
     * Set of arguments passed to this function.
     * Note that this might not be populated for all stack frames.
     * </pre>
     *
     * <code>repeated .google.devtools.clouddebugger.v2.Variable arguments = 3;</code>
     */
    public java.util.List<com.google.devtools.clouddebugger.v2.Variable> getArgumentsList() {
      if (argumentsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(arguments_);
      } else {
        return argumentsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Set of arguments passed to this function.
     * Note that this might not be populated for all stack frames.
     * </pre>
     *
     * <code>repeated .google.devtools.clouddebugger.v2.Variable arguments = 3;</code>
     */
    public int getArgumentsCount() {
      if (argumentsBuilder_ == null) {
        return arguments_.size();
      } else {
        return argumentsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Set of arguments passed to this function.
     * Note that this might not be populated for all stack frames.
     * </pre>
     *
     * <code>repeated .google.devtools.clouddebugger.v2.Variable arguments = 3;</code>
     */
    public com.google.devtools.clouddebugger.v2.Variable getArguments(int index) {
      if (argumentsBuilder_ == null) {
        return arguments_.get(index);
      } else {
        return argumentsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Set of arguments passed to this function.
     * Note that this might not be populated for all stack frames.
     * </pre>
     *
     * <code>repeated .google.devtools.clouddebugger.v2.Variable arguments = 3;</code>
     */
    public Builder setArguments(
        int index, com.google.devtools.clouddebugger.v2.Variable value) {
      if (argumentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureArgumentsIsMutable();
        arguments_.set(index, value);
        onChanged();
      } else {
        argumentsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Set of arguments passed to this function.
     * Note that this might not be populated for all stack frames.
     * </pre>
     *
     * <code>repeated .google.devtools.clouddebugger.v2.Variable arguments = 3;</code>
     */
    public Builder setArguments(
        int index, com.google.devtools.clouddebugger.v2.Variable.Builder builderForValue) {
      if (argumentsBuilder_ == null) {
        ensureArgumentsIsMutable();
        arguments_.set(index, builderForValue.build());
        onChanged();
      } else {
        argumentsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Set of arguments passed to this function.
     * Note that this might not be populated for all stack frames.
     * </pre>
     *
     * <code>repeated .google.devtools.clouddebugger.v2.Variable arguments = 3;</code>
     */
    public Builder addArguments(com.google.devtools.clouddebugger.v2.Variable value) {
      if (argumentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureArgumentsIsMutable();
        arguments_.add(value);
        onChanged();
      } else {
        argumentsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Set of arguments passed to this function.
     * Note that this might not be populated for all stack frames.
     * </pre>
     *
     * <code>repeated .google.devtools.clouddebugger.v2.Variable arguments = 3;</code>
     */
    public Builder addArguments(
        int index, com.google.devtools.clouddebugger.v2.Variable value) {
      if (argumentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureArgumentsIsMutable();
        arguments_.add(index, value);
        onChanged();
      } else {
        argumentsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Set of arguments passed to this function.
     * Note that this might not be populated for all stack frames.
     * </pre>
     *
     * <code>repeated .google.devtools.clouddebugger.v2.Variable arguments = 3;</code>
     */
    public Builder addArguments(
        com.google.devtools.clouddebugger.v2.Variable.Builder builderForValue) {
      if (argumentsBuilder_ == null) {
        ensureArgumentsIsMutable();
        arguments_.add(builderForValue.build());
        onChanged();
      } else {
        argumentsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Set of arguments passed to this function.
     * Note that this might not be populated for all stack frames.
     * </pre>
     *
     * <code>repeated .google.devtools.clouddebugger.v2.Variable arguments = 3;</code>
     */
    public Builder addArguments(
        int index, com.google.devtools.clouddebugger.v2.Variable.Builder builderForValue) {
      if (argumentsBuilder_ == null) {
        ensureArgumentsIsMutable();
        arguments_.add(index, builderForValue.build());
        onChanged();
      } else {
        argumentsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Set of arguments passed to this function.
     * Note that this might not be populated for all stack frames.
     * </pre>
     *
     * <code>repeated .google.devtools.clouddebugger.v2.Variable arguments = 3;</code>
     */
    public Builder addAllArguments(
        java.lang.Iterable<? extends com.google.devtools.clouddebugger.v2.Variable> values) {
      if (argumentsBuilder_ == null) {
        ensureArgumentsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, arguments_);
        onChanged();
      } else {
        argumentsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Set of arguments passed to this function.
     * Note that this might not be populated for all stack frames.
     * </pre>
     *
     * <code>repeated .google.devtools.clouddebugger.v2.Variable arguments = 3;</code>
     */
    public Builder clearArguments() {
      if (argumentsBuilder_ == null) {
        arguments_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        argumentsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Set of arguments passed to this function.
     * Note that this might not be populated for all stack frames.
     * </pre>
     *
     * <code>repeated .google.devtools.clouddebugger.v2.Variable arguments = 3;</code>
     */
    public Builder removeArguments(int index) {
      if (argumentsBuilder_ == null) {
        ensureArgumentsIsMutable();
        arguments_.remove(index);
        onChanged();
      } else {
        argumentsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Set of arguments passed to this function.
     * Note that this might not be populated for all stack frames.
     * </pre>
     *
     * <code>repeated .google.devtools.clouddebugger.v2.Variable arguments = 3;</code>
     */
    public com.google.devtools.clouddebugger.v2.Variable.Builder getArgumentsBuilder(
        int index) {
      return getArgumentsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Set of arguments passed to this function.
     * Note that this might not be populated for all stack frames.
     * </pre>
     *
     * <code>repeated .google.devtools.clouddebugger.v2.Variable arguments = 3;</code>
     */
    public com.google.devtools.clouddebugger.v2.VariableOrBuilder getArgumentsOrBuilder(
        int index) {
      if (argumentsBuilder_ == null) {
        return arguments_.get(index);  } else {
        return argumentsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Set of arguments passed to this function.
     * Note that this might not be populated for all stack frames.
     * </pre>
     *
     * <code>repeated .google.devtools.clouddebugger.v2.Variable arguments = 3;</code>
     */
    public java.util.List<? extends com.google.devtools.clouddebugger.v2.VariableOrBuilder> 
         getArgumentsOrBuilderList() {
      if (argumentsBuilder_ != null) {
        return argumentsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(arguments_);
      }
    }
    /**
     * <pre>
     * Set of arguments passed to this function.
     * Note that this might not be populated for all stack frames.
     * </pre>
     *
     * <code>repeated .google.devtools.clouddebugger.v2.Variable arguments = 3;</code>
     */
    public com.google.devtools.clouddebugger.v2.Variable.Builder addArgumentsBuilder() {
      return getArgumentsFieldBuilder().addBuilder(
          com.google.devtools.clouddebugger.v2.Variable.getDefaultInstance());
    }
    /**
     * <pre>
     * Set of arguments passed to this function.
     * Note that this might not be populated for all stack frames.
     * </pre>
     *
     * <code>repeated .google.devtools.clouddebugger.v2.Variable arguments = 3;</code>
     */
    public com.google.devtools.clouddebugger.v2.Variable.Builder addArgumentsBuilder(
        int index) {
      return getArgumentsFieldBuilder().addBuilder(
          index, com.google.devtools.clouddebugger.v2.Variable.getDefaultInstance());
    }
    /**
     * <pre>
     * Set of arguments passed to this function.
     * Note that this might not be populated for all stack frames.
     * </pre>
     *
     * <code>repeated .google.devtools.clouddebugger.v2.Variable arguments = 3;</code>
     */
    public java.util.List<com.google.devtools.clouddebugger.v2.Variable.Builder> 
         getArgumentsBuilderList() {
      return getArgumentsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.devtools.clouddebugger.v2.Variable, com.google.devtools.clouddebugger.v2.Variable.Builder, com.google.devtools.clouddebugger.v2.VariableOrBuilder> 
        getArgumentsFieldBuilder() {
      if (argumentsBuilder_ == null) {
        argumentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.devtools.clouddebugger.v2.Variable, com.google.devtools.clouddebugger.v2.Variable.Builder, com.google.devtools.clouddebugger.v2.VariableOrBuilder>(
                arguments_,
                ((bitField0_ & 0x00000004) == 0x00000004),
                getParentForChildren(),
                isClean());
        arguments_ = null;
      }
      return argumentsBuilder_;
    }

    private java.util.List<com.google.devtools.clouddebugger.v2.Variable> locals_ =
      java.util.Collections.emptyList();
    private void ensureLocalsIsMutable() {
      if (!((bitField0_ & 0x00000008) == 0x00000008)) {
        locals_ = new java.util.ArrayList<com.google.devtools.clouddebugger.v2.Variable>(locals_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.devtools.clouddebugger.v2.Variable, com.google.devtools.clouddebugger.v2.Variable.Builder, com.google.devtools.clouddebugger.v2.VariableOrBuilder> localsBuilder_;

    /**
     * <pre>
     * Set of local variables at the stack frame location.
     * Note that this might not be populated for all stack frames.
     * </pre>
     *
     * <code>repeated .google.devtools.clouddebugger.v2.Variable locals = 4;</code>
     */
    public java.util.List<com.google.devtools.clouddebugger.v2.Variable> getLocalsList() {
      if (localsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(locals_);
      } else {
        return localsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Set of local variables at the stack frame location.
     * Note that this might not be populated for all stack frames.
     * </pre>
     *
     * <code>repeated .google.devtools.clouddebugger.v2.Variable locals = 4;</code>
     */
    public int getLocalsCount() {
      if (localsBuilder_ == null) {
        return locals_.size();
      } else {
        return localsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Set of local variables at the stack frame location.
     * Note that this might not be populated for all stack frames.
     * </pre>
     *
     * <code>repeated .google.devtools.clouddebugger.v2.Variable locals = 4;</code>
     */
    public com.google.devtools.clouddebugger.v2.Variable getLocals(int index) {
      if (localsBuilder_ == null) {
        return locals_.get(index);
      } else {
        return localsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Set of local variables at the stack frame location.
     * Note that this might not be populated for all stack frames.
     * </pre>
     *
     * <code>repeated .google.devtools.clouddebugger.v2.Variable locals = 4;</code>
     */
    public Builder setLocals(
        int index, com.google.devtools.clouddebugger.v2.Variable value) {
      if (localsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLocalsIsMutable();
        locals_.set(index, value);
        onChanged();
      } else {
        localsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Set of local variables at the stack frame location.
     * Note that this might not be populated for all stack frames.
     * </pre>
     *
     * <code>repeated .google.devtools.clouddebugger.v2.Variable locals = 4;</code>
     */
    public Builder setLocals(
        int index, com.google.devtools.clouddebugger.v2.Variable.Builder builderForValue) {
      if (localsBuilder_ == null) {
        ensureLocalsIsMutable();
        locals_.set(index, builderForValue.build());
        onChanged();
      } else {
        localsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Set of local variables at the stack frame location.
     * Note that this might not be populated for all stack frames.
     * </pre>
     *
     * <code>repeated .google.devtools.clouddebugger.v2.Variable locals = 4;</code>
     */
    public Builder addLocals(com.google.devtools.clouddebugger.v2.Variable value) {
      if (localsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLocalsIsMutable();
        locals_.add(value);
        onChanged();
      } else {
        localsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Set of local variables at the stack frame location.
     * Note that this might not be populated for all stack frames.
     * </pre>
     *
     * <code>repeated .google.devtools.clouddebugger.v2.Variable locals = 4;</code>
     */
    public Builder addLocals(
        int index, com.google.devtools.clouddebugger.v2.Variable value) {
      if (localsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLocalsIsMutable();
        locals_.add(index, value);
        onChanged();
      } else {
        localsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Set of local variables at the stack frame location.
     * Note that this might not be populated for all stack frames.
     * </pre>
     *
     * <code>repeated .google.devtools.clouddebugger.v2.Variable locals = 4;</code>
     */
    public Builder addLocals(
        com.google.devtools.clouddebugger.v2.Variable.Builder builderForValue) {
      if (localsBuilder_ == null) {
        ensureLocalsIsMutable();
        locals_.add(builderForValue.build());
        onChanged();
      } else {
        localsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Set of local variables at the stack frame location.
     * Note that this might not be populated for all stack frames.
     * </pre>
     *
     * <code>repeated .google.devtools.clouddebugger.v2.Variable locals = 4;</code>
     */
    public Builder addLocals(
        int index, com.google.devtools.clouddebugger.v2.Variable.Builder builderForValue) {
      if (localsBuilder_ == null) {
        ensureLocalsIsMutable();
        locals_.add(index, builderForValue.build());
        onChanged();
      } else {
        localsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Set of local variables at the stack frame location.
     * Note that this might not be populated for all stack frames.
     * </pre>
     *
     * <code>repeated .google.devtools.clouddebugger.v2.Variable locals = 4;</code>
     */
    public Builder addAllLocals(
        java.lang.Iterable<? extends com.google.devtools.clouddebugger.v2.Variable> values) {
      if (localsBuilder_ == null) {
        ensureLocalsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, locals_);
        onChanged();
      } else {
        localsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Set of local variables at the stack frame location.
     * Note that this might not be populated for all stack frames.
     * </pre>
     *
     * <code>repeated .google.devtools.clouddebugger.v2.Variable locals = 4;</code>
     */
    public Builder clearLocals() {
      if (localsBuilder_ == null) {
        locals_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        localsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Set of local variables at the stack frame location.
     * Note that this might not be populated for all stack frames.
     * </pre>
     *
     * <code>repeated .google.devtools.clouddebugger.v2.Variable locals = 4;</code>
     */
    public Builder removeLocals(int index) {
      if (localsBuilder_ == null) {
        ensureLocalsIsMutable();
        locals_.remove(index);
        onChanged();
      } else {
        localsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Set of local variables at the stack frame location.
     * Note that this might not be populated for all stack frames.
     * </pre>
     *
     * <code>repeated .google.devtools.clouddebugger.v2.Variable locals = 4;</code>
     */
    public com.google.devtools.clouddebugger.v2.Variable.Builder getLocalsBuilder(
        int index) {
      return getLocalsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Set of local variables at the stack frame location.
     * Note that this might not be populated for all stack frames.
     * </pre>
     *
     * <code>repeated .google.devtools.clouddebugger.v2.Variable locals = 4;</code>
     */
    public com.google.devtools.clouddebugger.v2.VariableOrBuilder getLocalsOrBuilder(
        int index) {
      if (localsBuilder_ == null) {
        return locals_.get(index);  } else {
        return localsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Set of local variables at the stack frame location.
     * Note that this might not be populated for all stack frames.
     * </pre>
     *
     * <code>repeated .google.devtools.clouddebugger.v2.Variable locals = 4;</code>
     */
    public java.util.List<? extends com.google.devtools.clouddebugger.v2.VariableOrBuilder> 
         getLocalsOrBuilderList() {
      if (localsBuilder_ != null) {
        return localsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(locals_);
      }
    }
    /**
     * <pre>
     * Set of local variables at the stack frame location.
     * Note that this might not be populated for all stack frames.
     * </pre>
     *
     * <code>repeated .google.devtools.clouddebugger.v2.Variable locals = 4;</code>
     */
    public com.google.devtools.clouddebugger.v2.Variable.Builder addLocalsBuilder() {
      return getLocalsFieldBuilder().addBuilder(
          com.google.devtools.clouddebugger.v2.Variable.getDefaultInstance());
    }
    /**
     * <pre>
     * Set of local variables at the stack frame location.
     * Note that this might not be populated for all stack frames.
     * </pre>
     *
     * <code>repeated .google.devtools.clouddebugger.v2.Variable locals = 4;</code>
     */
    public com.google.devtools.clouddebugger.v2.Variable.Builder addLocalsBuilder(
        int index) {
      return getLocalsFieldBuilder().addBuilder(
          index, com.google.devtools.clouddebugger.v2.Variable.getDefaultInstance());
    }
    /**
     * <pre>
     * Set of local variables at the stack frame location.
     * Note that this might not be populated for all stack frames.
     * </pre>
     *
     * <code>repeated .google.devtools.clouddebugger.v2.Variable locals = 4;</code>
     */
    public java.util.List<com.google.devtools.clouddebugger.v2.Variable.Builder> 
         getLocalsBuilderList() {
      return getLocalsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.devtools.clouddebugger.v2.Variable, com.google.devtools.clouddebugger.v2.Variable.Builder, com.google.devtools.clouddebugger.v2.VariableOrBuilder> 
        getLocalsFieldBuilder() {
      if (localsBuilder_ == null) {
        localsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.devtools.clouddebugger.v2.Variable, com.google.devtools.clouddebugger.v2.Variable.Builder, com.google.devtools.clouddebugger.v2.VariableOrBuilder>(
                locals_,
                ((bitField0_ & 0x00000008) == 0x00000008),
                getParentForChildren(),
                isClean());
        locals_ = null;
      }
      return localsBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:google.devtools.clouddebugger.v2.StackFrame)
  }

  // @@protoc_insertion_point(class_scope:google.devtools.clouddebugger.v2.StackFrame)
  private static final com.google.devtools.clouddebugger.v2.StackFrame DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.devtools.clouddebugger.v2.StackFrame();
  }

  public static com.google.devtools.clouddebugger.v2.StackFrame getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<StackFrame>
      PARSER = new com.google.protobuf.AbstractParser<StackFrame>() {
    public StackFrame parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new StackFrame(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<StackFrame> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<StackFrame> getParserForType() {
    return PARSER;
  }

  public com.google.devtools.clouddebugger.v2.StackFrame getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

