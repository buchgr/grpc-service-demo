// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/clouddebugger/v2/controller.proto

package com.google.devtools.clouddebugger.v2;

public interface ListActiveBreakpointsRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.devtools.clouddebugger.v2.ListActiveBreakpointsRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Identifies the debuggee.
   * </pre>
   *
   * <code>string debuggee_id = 1;</code>
   */
  java.lang.String getDebuggeeId();
  /**
   * <pre>
   * Identifies the debuggee.
   * </pre>
   *
   * <code>string debuggee_id = 1;</code>
   */
  com.google.protobuf.ByteString
      getDebuggeeIdBytes();

  /**
   * <pre>
   * A wait token that, if specified, blocks the method call until the list
   * of active breakpoints has changed, or a server selected timeout has
   * expired.  The value should be set from the last returned response.
   * </pre>
   *
   * <code>string wait_token = 2;</code>
   */
  java.lang.String getWaitToken();
  /**
   * <pre>
   * A wait token that, if specified, blocks the method call until the list
   * of active breakpoints has changed, or a server selected timeout has
   * expired.  The value should be set from the last returned response.
   * </pre>
   *
   * <code>string wait_token = 2;</code>
   */
  com.google.protobuf.ByteString
      getWaitTokenBytes();

  /**
   * <pre>
   * If set to `true`, returns `google.rpc.Code.OK` status and sets the
   * `wait_expired` response field to `true` when the server-selected timeout
   * has expired (recommended).
   * If set to `false`, returns `google.rpc.Code.ABORTED` status when the
   * server-selected timeout has expired (deprecated).
   * </pre>
   *
   * <code>bool success_on_timeout = 3;</code>
   */
  boolean getSuccessOnTimeout();
}
