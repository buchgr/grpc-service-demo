// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/ml/v1beta1/job_service.proto

package com.google.cloud.ml.api.v1beta1;

/**
 * <pre>
 * Represents a single hyperparameter to optimize.
 * </pre>
 *
 * Protobuf type {@code google.cloud.ml.v1beta1.ParameterSpec}
 */
public  final class ParameterSpec extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.cloud.ml.v1beta1.ParameterSpec)
    ParameterSpecOrBuilder {
  // Use ParameterSpec.newBuilder() to construct.
  private ParameterSpec(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ParameterSpec() {
    parameterName_ = "";
    type_ = 0;
    minValue_ = 0D;
    maxValue_ = 0D;
    categoricalValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    discreteValues_ = java.util.Collections.emptyList();
    scaleType_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private ParameterSpec(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            parameterName_ = s;
            break;
          }
          case 17: {

            minValue_ = input.readDouble();
            break;
          }
          case 25: {

            maxValue_ = input.readDouble();
            break;
          }
          case 32: {
            int rawValue = input.readEnum();

            type_ = rawValue;
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
              categoricalValues_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000010;
            }
            categoricalValues_.add(s);
            break;
          }
          case 49: {
            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
              discreteValues_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField0_ |= 0x00000020;
            }
            discreteValues_.add(input.readDouble());
            break;
          }
          case 50: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
              discreteValues_ = new java.util.ArrayList<java.lang.Double>();
              mutable_bitField0_ |= 0x00000020;
            }
            while (input.getBytesUntilLimit() > 0) {
              discreteValues_.add(input.readDouble());
            }
            input.popLimit(limit);
            break;
          }
          case 56: {
            int rawValue = input.readEnum();

            scaleType_ = rawValue;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
        categoricalValues_ = categoricalValues_.getUnmodifiableView();
      }
      if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
        discreteValues_ = java.util.Collections.unmodifiableList(discreteValues_);
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.cloud.ml.api.v1beta1.JobServiceProto.internal_static_google_cloud_ml_v1beta1_ParameterSpec_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.ml.api.v1beta1.JobServiceProto.internal_static_google_cloud_ml_v1beta1_ParameterSpec_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.ml.api.v1beta1.ParameterSpec.class, com.google.cloud.ml.api.v1beta1.ParameterSpec.Builder.class);
  }

  /**
   * <pre>
   * The type of the parameter.
   * </pre>
   *
   * Protobuf enum {@code google.cloud.ml.v1beta1.ParameterSpec.ParameterType}
   */
  public enum ParameterType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * You must specify a valid type. Using this unspecified type will result in
     * an error.
     * </pre>
     *
     * <code>PARAMETER_TYPE_UNSPECIFIED = 0;</code>
     */
    PARAMETER_TYPE_UNSPECIFIED(0),
    /**
     * <pre>
     * Type for real-valued parameters.
     * </pre>
     *
     * <code>DOUBLE = 1;</code>
     */
    DOUBLE(1),
    /**
     * <pre>
     * Type for integral parameters.
     * </pre>
     *
     * <code>INTEGER = 2;</code>
     */
    INTEGER(2),
    /**
     * <pre>
     * The parameter is categorical, with a value chosen from the categories
     * field.
     * </pre>
     *
     * <code>CATEGORICAL = 3;</code>
     */
    CATEGORICAL(3),
    /**
     * <pre>
     * The parameter is real valued, with a fixed set of feasible points. If
     * `type==DISCRETE`, feasible_points must be provided, and
     * {`min_value`, `max_value`} will be ignored.
     * </pre>
     *
     * <code>DISCRETE = 4;</code>
     */
    DISCRETE(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * You must specify a valid type. Using this unspecified type will result in
     * an error.
     * </pre>
     *
     * <code>PARAMETER_TYPE_UNSPECIFIED = 0;</code>
     */
    public static final int PARAMETER_TYPE_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * Type for real-valued parameters.
     * </pre>
     *
     * <code>DOUBLE = 1;</code>
     */
    public static final int DOUBLE_VALUE = 1;
    /**
     * <pre>
     * Type for integral parameters.
     * </pre>
     *
     * <code>INTEGER = 2;</code>
     */
    public static final int INTEGER_VALUE = 2;
    /**
     * <pre>
     * The parameter is categorical, with a value chosen from the categories
     * field.
     * </pre>
     *
     * <code>CATEGORICAL = 3;</code>
     */
    public static final int CATEGORICAL_VALUE = 3;
    /**
     * <pre>
     * The parameter is real valued, with a fixed set of feasible points. If
     * `type==DISCRETE`, feasible_points must be provided, and
     * {`min_value`, `max_value`} will be ignored.
     * </pre>
     *
     * <code>DISCRETE = 4;</code>
     */
    public static final int DISCRETE_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ParameterType valueOf(int value) {
      return forNumber(value);
    }

    public static ParameterType forNumber(int value) {
      switch (value) {
        case 0: return PARAMETER_TYPE_UNSPECIFIED;
        case 1: return DOUBLE;
        case 2: return INTEGER;
        case 3: return CATEGORICAL;
        case 4: return DISCRETE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ParameterType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ParameterType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ParameterType>() {
            public ParameterType findValueByNumber(int number) {
              return ParameterType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.cloud.ml.api.v1beta1.ParameterSpec.getDescriptor().getEnumTypes().get(0);
    }

    private static final ParameterType[] VALUES = values();

    public static ParameterType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ParameterType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.cloud.ml.v1beta1.ParameterSpec.ParameterType)
  }

  /**
   * <pre>
   * The type of scaling that should be applied to this parameter.
   * </pre>
   *
   * Protobuf enum {@code google.cloud.ml.v1beta1.ParameterSpec.ScaleType}
   */
  public enum ScaleType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * By default, no scaling is applied.
     * </pre>
     *
     * <code>NONE = 0;</code>
     */
    NONE(0),
    /**
     * <pre>
     * Scales the feasible space to (0, 1) linearly.
     * </pre>
     *
     * <code>UNIT_LINEAR_SCALE = 1;</code>
     */
    UNIT_LINEAR_SCALE(1),
    /**
     * <pre>
     * Scales the feasible space logarithmically to (0, 1). The entire feasible
     * space must be strictly positive.
     * </pre>
     *
     * <code>UNIT_LOG_SCALE = 2;</code>
     */
    UNIT_LOG_SCALE(2),
    /**
     * <pre>
     * Scales the feasible space "reverse" logarithmically to (0, 1). The result
     * is that values close to the top of the feasible space are spread out more
     * than points near the bottom. The entire feasible space must be strictly
     * positive.
     * </pre>
     *
     * <code>UNIT_REVERSE_LOG_SCALE = 3;</code>
     */
    UNIT_REVERSE_LOG_SCALE(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * By default, no scaling is applied.
     * </pre>
     *
     * <code>NONE = 0;</code>
     */
    public static final int NONE_VALUE = 0;
    /**
     * <pre>
     * Scales the feasible space to (0, 1) linearly.
     * </pre>
     *
     * <code>UNIT_LINEAR_SCALE = 1;</code>
     */
    public static final int UNIT_LINEAR_SCALE_VALUE = 1;
    /**
     * <pre>
     * Scales the feasible space logarithmically to (0, 1). The entire feasible
     * space must be strictly positive.
     * </pre>
     *
     * <code>UNIT_LOG_SCALE = 2;</code>
     */
    public static final int UNIT_LOG_SCALE_VALUE = 2;
    /**
     * <pre>
     * Scales the feasible space "reverse" logarithmically to (0, 1). The result
     * is that values close to the top of the feasible space are spread out more
     * than points near the bottom. The entire feasible space must be strictly
     * positive.
     * </pre>
     *
     * <code>UNIT_REVERSE_LOG_SCALE = 3;</code>
     */
    public static final int UNIT_REVERSE_LOG_SCALE_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ScaleType valueOf(int value) {
      return forNumber(value);
    }

    public static ScaleType forNumber(int value) {
      switch (value) {
        case 0: return NONE;
        case 1: return UNIT_LINEAR_SCALE;
        case 2: return UNIT_LOG_SCALE;
        case 3: return UNIT_REVERSE_LOG_SCALE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ScaleType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ScaleType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ScaleType>() {
            public ScaleType findValueByNumber(int number) {
              return ScaleType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.cloud.ml.api.v1beta1.ParameterSpec.getDescriptor().getEnumTypes().get(1);
    }

    private static final ScaleType[] VALUES = values();

    public static ScaleType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ScaleType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.cloud.ml.v1beta1.ParameterSpec.ScaleType)
  }

  private int bitField0_;
  public static final int PARAMETER_NAME_FIELD_NUMBER = 1;
  private volatile java.lang.Object parameterName_;
  /**
   * <pre>
   * Required. The parameter name must be unique amongst all ParameterConfigs in
   * a HyperparameterSpec message. E.g., "learning_rate".
   * </pre>
   *
   * <code>string parameter_name = 1;</code>
   */
  public java.lang.String getParameterName() {
    java.lang.Object ref = parameterName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      parameterName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Required. The parameter name must be unique amongst all ParameterConfigs in
   * a HyperparameterSpec message. E.g., "learning_rate".
   * </pre>
   *
   * <code>string parameter_name = 1;</code>
   */
  public com.google.protobuf.ByteString
      getParameterNameBytes() {
    java.lang.Object ref = parameterName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      parameterName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TYPE_FIELD_NUMBER = 4;
  private int type_;
  /**
   * <pre>
   * Required. The type of the parameter.
   * </pre>
   *
   * <code>.google.cloud.ml.v1beta1.ParameterSpec.ParameterType type = 4;</code>
   */
  public int getTypeValue() {
    return type_;
  }
  /**
   * <pre>
   * Required. The type of the parameter.
   * </pre>
   *
   * <code>.google.cloud.ml.v1beta1.ParameterSpec.ParameterType type = 4;</code>
   */
  public com.google.cloud.ml.api.v1beta1.ParameterSpec.ParameterType getType() {
    com.google.cloud.ml.api.v1beta1.ParameterSpec.ParameterType result = com.google.cloud.ml.api.v1beta1.ParameterSpec.ParameterType.valueOf(type_);
    return result == null ? com.google.cloud.ml.api.v1beta1.ParameterSpec.ParameterType.UNRECOGNIZED : result;
  }

  public static final int MIN_VALUE_FIELD_NUMBER = 2;
  private double minValue_;
  /**
   * <pre>
   * Required if type is `DOUBLE` or `INTEGER`. This field
   * should be unset if type is `CATEGORICAL`. This value should be integers if
   * type is INTEGER.
   * </pre>
   *
   * <code>double min_value = 2;</code>
   */
  public double getMinValue() {
    return minValue_;
  }

  public static final int MAX_VALUE_FIELD_NUMBER = 3;
  private double maxValue_;
  /**
   * <pre>
   * Required if typeis `DOUBLE` or `INTEGER`. This field
   * should be unset if type is `CATEGORICAL`. This value should be integers if
   * type is `INTEGER`.
   * </pre>
   *
   * <code>double max_value = 3;</code>
   */
  public double getMaxValue() {
    return maxValue_;
  }

  public static final int CATEGORICAL_VALUES_FIELD_NUMBER = 5;
  private com.google.protobuf.LazyStringList categoricalValues_;
  /**
   * <pre>
   * Required if type is `CATEGORICAL`. The list of possible categories.
   * </pre>
   *
   * <code>repeated string categorical_values = 5;</code>
   */
  public com.google.protobuf.ProtocolStringList
      getCategoricalValuesList() {
    return categoricalValues_;
  }
  /**
   * <pre>
   * Required if type is `CATEGORICAL`. The list of possible categories.
   * </pre>
   *
   * <code>repeated string categorical_values = 5;</code>
   */
  public int getCategoricalValuesCount() {
    return categoricalValues_.size();
  }
  /**
   * <pre>
   * Required if type is `CATEGORICAL`. The list of possible categories.
   * </pre>
   *
   * <code>repeated string categorical_values = 5;</code>
   */
  public java.lang.String getCategoricalValues(int index) {
    return categoricalValues_.get(index);
  }
  /**
   * <pre>
   * Required if type is `CATEGORICAL`. The list of possible categories.
   * </pre>
   *
   * <code>repeated string categorical_values = 5;</code>
   */
  public com.google.protobuf.ByteString
      getCategoricalValuesBytes(int index) {
    return categoricalValues_.getByteString(index);
  }

  public static final int DISCRETE_VALUES_FIELD_NUMBER = 6;
  private java.util.List<java.lang.Double> discreteValues_;
  /**
   * <pre>
   * Required if type is `DISCRETE`.
   * A list of feasible points.
   * The list should be in strictly increasing order. For instance, this
   * parameter might have possible settings of 1.5, 2.5, and 4.0. This list
   * should not contain more than 1,000 values.
   * </pre>
   *
   * <code>repeated double discrete_values = 6;</code>
   */
  public java.util.List<java.lang.Double>
      getDiscreteValuesList() {
    return discreteValues_;
  }
  /**
   * <pre>
   * Required if type is `DISCRETE`.
   * A list of feasible points.
   * The list should be in strictly increasing order. For instance, this
   * parameter might have possible settings of 1.5, 2.5, and 4.0. This list
   * should not contain more than 1,000 values.
   * </pre>
   *
   * <code>repeated double discrete_values = 6;</code>
   */
  public int getDiscreteValuesCount() {
    return discreteValues_.size();
  }
  /**
   * <pre>
   * Required if type is `DISCRETE`.
   * A list of feasible points.
   * The list should be in strictly increasing order. For instance, this
   * parameter might have possible settings of 1.5, 2.5, and 4.0. This list
   * should not contain more than 1,000 values.
   * </pre>
   *
   * <code>repeated double discrete_values = 6;</code>
   */
  public double getDiscreteValues(int index) {
    return discreteValues_.get(index);
  }
  private int discreteValuesMemoizedSerializedSize = -1;

  public static final int SCALE_TYPE_FIELD_NUMBER = 7;
  private int scaleType_;
  /**
   * <pre>
   * Optional. How the parameter should be scaled to the hypercube.
   * Leave unset for categorical parameters.
   * Some kind of scaling is strongly recommended for real or integral
   * parameters (e.g., `UNIT_LINEAR_SCALE`).
   * </pre>
   *
   * <code>.google.cloud.ml.v1beta1.ParameterSpec.ScaleType scale_type = 7;</code>
   */
  public int getScaleTypeValue() {
    return scaleType_;
  }
  /**
   * <pre>
   * Optional. How the parameter should be scaled to the hypercube.
   * Leave unset for categorical parameters.
   * Some kind of scaling is strongly recommended for real or integral
   * parameters (e.g., `UNIT_LINEAR_SCALE`).
   * </pre>
   *
   * <code>.google.cloud.ml.v1beta1.ParameterSpec.ScaleType scale_type = 7;</code>
   */
  public com.google.cloud.ml.api.v1beta1.ParameterSpec.ScaleType getScaleType() {
    com.google.cloud.ml.api.v1beta1.ParameterSpec.ScaleType result = com.google.cloud.ml.api.v1beta1.ParameterSpec.ScaleType.valueOf(scaleType_);
    return result == null ? com.google.cloud.ml.api.v1beta1.ParameterSpec.ScaleType.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (!getParameterNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, parameterName_);
    }
    if (minValue_ != 0D) {
      output.writeDouble(2, minValue_);
    }
    if (maxValue_ != 0D) {
      output.writeDouble(3, maxValue_);
    }
    if (type_ != com.google.cloud.ml.api.v1beta1.ParameterSpec.ParameterType.PARAMETER_TYPE_UNSPECIFIED.getNumber()) {
      output.writeEnum(4, type_);
    }
    for (int i = 0; i < categoricalValues_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, categoricalValues_.getRaw(i));
    }
    if (getDiscreteValuesList().size() > 0) {
      output.writeUInt32NoTag(50);
      output.writeUInt32NoTag(discreteValuesMemoizedSerializedSize);
    }
    for (int i = 0; i < discreteValues_.size(); i++) {
      output.writeDoubleNoTag(discreteValues_.get(i));
    }
    if (scaleType_ != com.google.cloud.ml.api.v1beta1.ParameterSpec.ScaleType.NONE.getNumber()) {
      output.writeEnum(7, scaleType_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getParameterNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, parameterName_);
    }
    if (minValue_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(2, minValue_);
    }
    if (maxValue_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(3, maxValue_);
    }
    if (type_ != com.google.cloud.ml.api.v1beta1.ParameterSpec.ParameterType.PARAMETER_TYPE_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(4, type_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < categoricalValues_.size(); i++) {
        dataSize += computeStringSizeNoTag(categoricalValues_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getCategoricalValuesList().size();
    }
    {
      int dataSize = 0;
      dataSize = 8 * getDiscreteValuesList().size();
      size += dataSize;
      if (!getDiscreteValuesList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      discreteValuesMemoizedSerializedSize = dataSize;
    }
    if (scaleType_ != com.google.cloud.ml.api.v1beta1.ParameterSpec.ScaleType.NONE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(7, scaleType_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.cloud.ml.api.v1beta1.ParameterSpec)) {
      return super.equals(obj);
    }
    com.google.cloud.ml.api.v1beta1.ParameterSpec other = (com.google.cloud.ml.api.v1beta1.ParameterSpec) obj;

    boolean result = true;
    result = result && getParameterName()
        .equals(other.getParameterName());
    result = result && type_ == other.type_;
    result = result && (
        java.lang.Double.doubleToLongBits(getMinValue())
        == java.lang.Double.doubleToLongBits(
            other.getMinValue()));
    result = result && (
        java.lang.Double.doubleToLongBits(getMaxValue())
        == java.lang.Double.doubleToLongBits(
            other.getMaxValue()));
    result = result && getCategoricalValuesList()
        .equals(other.getCategoricalValuesList());
    result = result && getDiscreteValuesList()
        .equals(other.getDiscreteValuesList());
    result = result && scaleType_ == other.scaleType_;
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + PARAMETER_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getParameterName().hashCode();
    hash = (37 * hash) + TYPE_FIELD_NUMBER;
    hash = (53 * hash) + type_;
    hash = (37 * hash) + MIN_VALUE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getMinValue()));
    hash = (37 * hash) + MAX_VALUE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getMaxValue()));
    if (getCategoricalValuesCount() > 0) {
      hash = (37 * hash) + CATEGORICAL_VALUES_FIELD_NUMBER;
      hash = (53 * hash) + getCategoricalValuesList().hashCode();
    }
    if (getDiscreteValuesCount() > 0) {
      hash = (37 * hash) + DISCRETE_VALUES_FIELD_NUMBER;
      hash = (53 * hash) + getDiscreteValuesList().hashCode();
    }
    hash = (37 * hash) + SCALE_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + scaleType_;
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.ml.api.v1beta1.ParameterSpec parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.ml.api.v1beta1.ParameterSpec parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.ml.api.v1beta1.ParameterSpec parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.ml.api.v1beta1.ParameterSpec parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.ml.api.v1beta1.ParameterSpec parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.ml.api.v1beta1.ParameterSpec parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.ml.api.v1beta1.ParameterSpec parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.cloud.ml.api.v1beta1.ParameterSpec parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.ml.api.v1beta1.ParameterSpec parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.ml.api.v1beta1.ParameterSpec parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.cloud.ml.api.v1beta1.ParameterSpec prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Represents a single hyperparameter to optimize.
   * </pre>
   *
   * Protobuf type {@code google.cloud.ml.v1beta1.ParameterSpec}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.cloud.ml.v1beta1.ParameterSpec)
      com.google.cloud.ml.api.v1beta1.ParameterSpecOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.ml.api.v1beta1.JobServiceProto.internal_static_google_cloud_ml_v1beta1_ParameterSpec_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.ml.api.v1beta1.JobServiceProto.internal_static_google_cloud_ml_v1beta1_ParameterSpec_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.ml.api.v1beta1.ParameterSpec.class, com.google.cloud.ml.api.v1beta1.ParameterSpec.Builder.class);
    }

    // Construct using com.google.cloud.ml.api.v1beta1.ParameterSpec.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      parameterName_ = "";

      type_ = 0;

      minValue_ = 0D;

      maxValue_ = 0D;

      categoricalValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000010);
      discreteValues_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000020);
      scaleType_ = 0;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.cloud.ml.api.v1beta1.JobServiceProto.internal_static_google_cloud_ml_v1beta1_ParameterSpec_descriptor;
    }

    public com.google.cloud.ml.api.v1beta1.ParameterSpec getDefaultInstanceForType() {
      return com.google.cloud.ml.api.v1beta1.ParameterSpec.getDefaultInstance();
    }

    public com.google.cloud.ml.api.v1beta1.ParameterSpec build() {
      com.google.cloud.ml.api.v1beta1.ParameterSpec result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.google.cloud.ml.api.v1beta1.ParameterSpec buildPartial() {
      com.google.cloud.ml.api.v1beta1.ParameterSpec result = new com.google.cloud.ml.api.v1beta1.ParameterSpec(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.parameterName_ = parameterName_;
      result.type_ = type_;
      result.minValue_ = minValue_;
      result.maxValue_ = maxValue_;
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        categoricalValues_ = categoricalValues_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000010);
      }
      result.categoricalValues_ = categoricalValues_;
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        discreteValues_ = java.util.Collections.unmodifiableList(discreteValues_);
        bitField0_ = (bitField0_ & ~0x00000020);
      }
      result.discreteValues_ = discreteValues_;
      result.scaleType_ = scaleType_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.ml.api.v1beta1.ParameterSpec) {
        return mergeFrom((com.google.cloud.ml.api.v1beta1.ParameterSpec)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.ml.api.v1beta1.ParameterSpec other) {
      if (other == com.google.cloud.ml.api.v1beta1.ParameterSpec.getDefaultInstance()) return this;
      if (!other.getParameterName().isEmpty()) {
        parameterName_ = other.parameterName_;
        onChanged();
      }
      if (other.type_ != 0) {
        setTypeValue(other.getTypeValue());
      }
      if (other.getMinValue() != 0D) {
        setMinValue(other.getMinValue());
      }
      if (other.getMaxValue() != 0D) {
        setMaxValue(other.getMaxValue());
      }
      if (!other.categoricalValues_.isEmpty()) {
        if (categoricalValues_.isEmpty()) {
          categoricalValues_ = other.categoricalValues_;
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          ensureCategoricalValuesIsMutable();
          categoricalValues_.addAll(other.categoricalValues_);
        }
        onChanged();
      }
      if (!other.discreteValues_.isEmpty()) {
        if (discreteValues_.isEmpty()) {
          discreteValues_ = other.discreteValues_;
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          ensureDiscreteValuesIsMutable();
          discreteValues_.addAll(other.discreteValues_);
        }
        onChanged();
      }
      if (other.scaleType_ != 0) {
        setScaleTypeValue(other.getScaleTypeValue());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.cloud.ml.api.v1beta1.ParameterSpec parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.cloud.ml.api.v1beta1.ParameterSpec) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object parameterName_ = "";
    /**
     * <pre>
     * Required. The parameter name must be unique amongst all ParameterConfigs in
     * a HyperparameterSpec message. E.g., "learning_rate".
     * </pre>
     *
     * <code>string parameter_name = 1;</code>
     */
    public java.lang.String getParameterName() {
      java.lang.Object ref = parameterName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        parameterName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Required. The parameter name must be unique amongst all ParameterConfigs in
     * a HyperparameterSpec message. E.g., "learning_rate".
     * </pre>
     *
     * <code>string parameter_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getParameterNameBytes() {
      java.lang.Object ref = parameterName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        parameterName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Required. The parameter name must be unique amongst all ParameterConfigs in
     * a HyperparameterSpec message. E.g., "learning_rate".
     * </pre>
     *
     * <code>string parameter_name = 1;</code>
     */
    public Builder setParameterName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      parameterName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The parameter name must be unique amongst all ParameterConfigs in
     * a HyperparameterSpec message. E.g., "learning_rate".
     * </pre>
     *
     * <code>string parameter_name = 1;</code>
     */
    public Builder clearParameterName() {
      
      parameterName_ = getDefaultInstance().getParameterName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The parameter name must be unique amongst all ParameterConfigs in
     * a HyperparameterSpec message. E.g., "learning_rate".
     * </pre>
     *
     * <code>string parameter_name = 1;</code>
     */
    public Builder setParameterNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      parameterName_ = value;
      onChanged();
      return this;
    }

    private int type_ = 0;
    /**
     * <pre>
     * Required. The type of the parameter.
     * </pre>
     *
     * <code>.google.cloud.ml.v1beta1.ParameterSpec.ParameterType type = 4;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * Required. The type of the parameter.
     * </pre>
     *
     * <code>.google.cloud.ml.v1beta1.ParameterSpec.ParameterType type = 4;</code>
     */
    public Builder setTypeValue(int value) {
      type_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The type of the parameter.
     * </pre>
     *
     * <code>.google.cloud.ml.v1beta1.ParameterSpec.ParameterType type = 4;</code>
     */
    public com.google.cloud.ml.api.v1beta1.ParameterSpec.ParameterType getType() {
      com.google.cloud.ml.api.v1beta1.ParameterSpec.ParameterType result = com.google.cloud.ml.api.v1beta1.ParameterSpec.ParameterType.valueOf(type_);
      return result == null ? com.google.cloud.ml.api.v1beta1.ParameterSpec.ParameterType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Required. The type of the parameter.
     * </pre>
     *
     * <code>.google.cloud.ml.v1beta1.ParameterSpec.ParameterType type = 4;</code>
     */
    public Builder setType(com.google.cloud.ml.api.v1beta1.ParameterSpec.ParameterType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      type_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The type of the parameter.
     * </pre>
     *
     * <code>.google.cloud.ml.v1beta1.ParameterSpec.ParameterType type = 4;</code>
     */
    public Builder clearType() {
      
      type_ = 0;
      onChanged();
      return this;
    }

    private double minValue_ ;
    /**
     * <pre>
     * Required if type is `DOUBLE` or `INTEGER`. This field
     * should be unset if type is `CATEGORICAL`. This value should be integers if
     * type is INTEGER.
     * </pre>
     *
     * <code>double min_value = 2;</code>
     */
    public double getMinValue() {
      return minValue_;
    }
    /**
     * <pre>
     * Required if type is `DOUBLE` or `INTEGER`. This field
     * should be unset if type is `CATEGORICAL`. This value should be integers if
     * type is INTEGER.
     * </pre>
     *
     * <code>double min_value = 2;</code>
     */
    public Builder setMinValue(double value) {
      
      minValue_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required if type is `DOUBLE` or `INTEGER`. This field
     * should be unset if type is `CATEGORICAL`. This value should be integers if
     * type is INTEGER.
     * </pre>
     *
     * <code>double min_value = 2;</code>
     */
    public Builder clearMinValue() {
      
      minValue_ = 0D;
      onChanged();
      return this;
    }

    private double maxValue_ ;
    /**
     * <pre>
     * Required if typeis `DOUBLE` or `INTEGER`. This field
     * should be unset if type is `CATEGORICAL`. This value should be integers if
     * type is `INTEGER`.
     * </pre>
     *
     * <code>double max_value = 3;</code>
     */
    public double getMaxValue() {
      return maxValue_;
    }
    /**
     * <pre>
     * Required if typeis `DOUBLE` or `INTEGER`. This field
     * should be unset if type is `CATEGORICAL`. This value should be integers if
     * type is `INTEGER`.
     * </pre>
     *
     * <code>double max_value = 3;</code>
     */
    public Builder setMaxValue(double value) {
      
      maxValue_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required if typeis `DOUBLE` or `INTEGER`. This field
     * should be unset if type is `CATEGORICAL`. This value should be integers if
     * type is `INTEGER`.
     * </pre>
     *
     * <code>double max_value = 3;</code>
     */
    public Builder clearMaxValue() {
      
      maxValue_ = 0D;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList categoricalValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureCategoricalValuesIsMutable() {
      if (!((bitField0_ & 0x00000010) == 0x00000010)) {
        categoricalValues_ = new com.google.protobuf.LazyStringArrayList(categoricalValues_);
        bitField0_ |= 0x00000010;
       }
    }
    /**
     * <pre>
     * Required if type is `CATEGORICAL`. The list of possible categories.
     * </pre>
     *
     * <code>repeated string categorical_values = 5;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getCategoricalValuesList() {
      return categoricalValues_.getUnmodifiableView();
    }
    /**
     * <pre>
     * Required if type is `CATEGORICAL`. The list of possible categories.
     * </pre>
     *
     * <code>repeated string categorical_values = 5;</code>
     */
    public int getCategoricalValuesCount() {
      return categoricalValues_.size();
    }
    /**
     * <pre>
     * Required if type is `CATEGORICAL`. The list of possible categories.
     * </pre>
     *
     * <code>repeated string categorical_values = 5;</code>
     */
    public java.lang.String getCategoricalValues(int index) {
      return categoricalValues_.get(index);
    }
    /**
     * <pre>
     * Required if type is `CATEGORICAL`. The list of possible categories.
     * </pre>
     *
     * <code>repeated string categorical_values = 5;</code>
     */
    public com.google.protobuf.ByteString
        getCategoricalValuesBytes(int index) {
      return categoricalValues_.getByteString(index);
    }
    /**
     * <pre>
     * Required if type is `CATEGORICAL`. The list of possible categories.
     * </pre>
     *
     * <code>repeated string categorical_values = 5;</code>
     */
    public Builder setCategoricalValues(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureCategoricalValuesIsMutable();
      categoricalValues_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required if type is `CATEGORICAL`. The list of possible categories.
     * </pre>
     *
     * <code>repeated string categorical_values = 5;</code>
     */
    public Builder addCategoricalValues(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureCategoricalValuesIsMutable();
      categoricalValues_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required if type is `CATEGORICAL`. The list of possible categories.
     * </pre>
     *
     * <code>repeated string categorical_values = 5;</code>
     */
    public Builder addAllCategoricalValues(
        java.lang.Iterable<java.lang.String> values) {
      ensureCategoricalValuesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, categoricalValues_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required if type is `CATEGORICAL`. The list of possible categories.
     * </pre>
     *
     * <code>repeated string categorical_values = 5;</code>
     */
    public Builder clearCategoricalValues() {
      categoricalValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required if type is `CATEGORICAL`. The list of possible categories.
     * </pre>
     *
     * <code>repeated string categorical_values = 5;</code>
     */
    public Builder addCategoricalValuesBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureCategoricalValuesIsMutable();
      categoricalValues_.add(value);
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Double> discreteValues_ = java.util.Collections.emptyList();
    private void ensureDiscreteValuesIsMutable() {
      if (!((bitField0_ & 0x00000020) == 0x00000020)) {
        discreteValues_ = new java.util.ArrayList<java.lang.Double>(discreteValues_);
        bitField0_ |= 0x00000020;
       }
    }
    /**
     * <pre>
     * Required if type is `DISCRETE`.
     * A list of feasible points.
     * The list should be in strictly increasing order. For instance, this
     * parameter might have possible settings of 1.5, 2.5, and 4.0. This list
     * should not contain more than 1,000 values.
     * </pre>
     *
     * <code>repeated double discrete_values = 6;</code>
     */
    public java.util.List<java.lang.Double>
        getDiscreteValuesList() {
      return java.util.Collections.unmodifiableList(discreteValues_);
    }
    /**
     * <pre>
     * Required if type is `DISCRETE`.
     * A list of feasible points.
     * The list should be in strictly increasing order. For instance, this
     * parameter might have possible settings of 1.5, 2.5, and 4.0. This list
     * should not contain more than 1,000 values.
     * </pre>
     *
     * <code>repeated double discrete_values = 6;</code>
     */
    public int getDiscreteValuesCount() {
      return discreteValues_.size();
    }
    /**
     * <pre>
     * Required if type is `DISCRETE`.
     * A list of feasible points.
     * The list should be in strictly increasing order. For instance, this
     * parameter might have possible settings of 1.5, 2.5, and 4.0. This list
     * should not contain more than 1,000 values.
     * </pre>
     *
     * <code>repeated double discrete_values = 6;</code>
     */
    public double getDiscreteValues(int index) {
      return discreteValues_.get(index);
    }
    /**
     * <pre>
     * Required if type is `DISCRETE`.
     * A list of feasible points.
     * The list should be in strictly increasing order. For instance, this
     * parameter might have possible settings of 1.5, 2.5, and 4.0. This list
     * should not contain more than 1,000 values.
     * </pre>
     *
     * <code>repeated double discrete_values = 6;</code>
     */
    public Builder setDiscreteValues(
        int index, double value) {
      ensureDiscreteValuesIsMutable();
      discreteValues_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required if type is `DISCRETE`.
     * A list of feasible points.
     * The list should be in strictly increasing order. For instance, this
     * parameter might have possible settings of 1.5, 2.5, and 4.0. This list
     * should not contain more than 1,000 values.
     * </pre>
     *
     * <code>repeated double discrete_values = 6;</code>
     */
    public Builder addDiscreteValues(double value) {
      ensureDiscreteValuesIsMutable();
      discreteValues_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required if type is `DISCRETE`.
     * A list of feasible points.
     * The list should be in strictly increasing order. For instance, this
     * parameter might have possible settings of 1.5, 2.5, and 4.0. This list
     * should not contain more than 1,000 values.
     * </pre>
     *
     * <code>repeated double discrete_values = 6;</code>
     */
    public Builder addAllDiscreteValues(
        java.lang.Iterable<? extends java.lang.Double> values) {
      ensureDiscreteValuesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, discreteValues_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required if type is `DISCRETE`.
     * A list of feasible points.
     * The list should be in strictly increasing order. For instance, this
     * parameter might have possible settings of 1.5, 2.5, and 4.0. This list
     * should not contain more than 1,000 values.
     * </pre>
     *
     * <code>repeated double discrete_values = 6;</code>
     */
    public Builder clearDiscreteValues() {
      discreteValues_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }

    private int scaleType_ = 0;
    /**
     * <pre>
     * Optional. How the parameter should be scaled to the hypercube.
     * Leave unset for categorical parameters.
     * Some kind of scaling is strongly recommended for real or integral
     * parameters (e.g., `UNIT_LINEAR_SCALE`).
     * </pre>
     *
     * <code>.google.cloud.ml.v1beta1.ParameterSpec.ScaleType scale_type = 7;</code>
     */
    public int getScaleTypeValue() {
      return scaleType_;
    }
    /**
     * <pre>
     * Optional. How the parameter should be scaled to the hypercube.
     * Leave unset for categorical parameters.
     * Some kind of scaling is strongly recommended for real or integral
     * parameters (e.g., `UNIT_LINEAR_SCALE`).
     * </pre>
     *
     * <code>.google.cloud.ml.v1beta1.ParameterSpec.ScaleType scale_type = 7;</code>
     */
    public Builder setScaleTypeValue(int value) {
      scaleType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional. How the parameter should be scaled to the hypercube.
     * Leave unset for categorical parameters.
     * Some kind of scaling is strongly recommended for real or integral
     * parameters (e.g., `UNIT_LINEAR_SCALE`).
     * </pre>
     *
     * <code>.google.cloud.ml.v1beta1.ParameterSpec.ScaleType scale_type = 7;</code>
     */
    public com.google.cloud.ml.api.v1beta1.ParameterSpec.ScaleType getScaleType() {
      com.google.cloud.ml.api.v1beta1.ParameterSpec.ScaleType result = com.google.cloud.ml.api.v1beta1.ParameterSpec.ScaleType.valueOf(scaleType_);
      return result == null ? com.google.cloud.ml.api.v1beta1.ParameterSpec.ScaleType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Optional. How the parameter should be scaled to the hypercube.
     * Leave unset for categorical parameters.
     * Some kind of scaling is strongly recommended for real or integral
     * parameters (e.g., `UNIT_LINEAR_SCALE`).
     * </pre>
     *
     * <code>.google.cloud.ml.v1beta1.ParameterSpec.ScaleType scale_type = 7;</code>
     */
    public Builder setScaleType(com.google.cloud.ml.api.v1beta1.ParameterSpec.ScaleType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      scaleType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional. How the parameter should be scaled to the hypercube.
     * Leave unset for categorical parameters.
     * Some kind of scaling is strongly recommended for real or integral
     * parameters (e.g., `UNIT_LINEAR_SCALE`).
     * </pre>
     *
     * <code>.google.cloud.ml.v1beta1.ParameterSpec.ScaleType scale_type = 7;</code>
     */
    public Builder clearScaleType() {
      
      scaleType_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:google.cloud.ml.v1beta1.ParameterSpec)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.ml.v1beta1.ParameterSpec)
  private static final com.google.cloud.ml.api.v1beta1.ParameterSpec DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.cloud.ml.api.v1beta1.ParameterSpec();
  }

  public static com.google.cloud.ml.api.v1beta1.ParameterSpec getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ParameterSpec>
      PARSER = new com.google.protobuf.AbstractParser<ParameterSpec>() {
    public ParameterSpec parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new ParameterSpec(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ParameterSpec> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ParameterSpec> getParserForType() {
    return PARSER;
  }

  public com.google.cloud.ml.api.v1beta1.ParameterSpec getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

