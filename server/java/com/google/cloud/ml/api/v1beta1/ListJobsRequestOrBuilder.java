// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/ml/v1beta1/job_service.proto

package com.google.cloud.ml.api.v1beta1;

public interface ListJobsRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.cloud.ml.v1beta1.ListJobsRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Required. The name of the project for which to list jobs.
   * Authorization: requires `Viewer` role on the specified project.
   * </pre>
   *
   * <code>string parent = 1;</code>
   */
  java.lang.String getParent();
  /**
   * <pre>
   * Required. The name of the project for which to list jobs.
   * Authorization: requires `Viewer` role on the specified project.
   * </pre>
   *
   * <code>string parent = 1;</code>
   */
  com.google.protobuf.ByteString
      getParentBytes();

  /**
   * <pre>
   * Optional. Specifies the subset of jobs to retrieve.
   * </pre>
   *
   * <code>string filter = 2;</code>
   */
  java.lang.String getFilter();
  /**
   * <pre>
   * Optional. Specifies the subset of jobs to retrieve.
   * </pre>
   *
   * <code>string filter = 2;</code>
   */
  com.google.protobuf.ByteString
      getFilterBytes();

  /**
   * <pre>
   * Optional. A page token to request the next page of results.
   * You get the token from the `next_page_token` field of the response from
   * the previous call.
   * </pre>
   *
   * <code>string page_token = 4;</code>
   */
  java.lang.String getPageToken();
  /**
   * <pre>
   * Optional. A page token to request the next page of results.
   * You get the token from the `next_page_token` field of the response from
   * the previous call.
   * </pre>
   *
   * <code>string page_token = 4;</code>
   */
  com.google.protobuf.ByteString
      getPageTokenBytes();

  /**
   * <pre>
   * Optional. The number of jobs to retrieve per "page" of results. If there
   * are more remaining results than this number, the response message will
   * contain a valid value in the `next_page_token` field.
   * The default value is 20, and the maximum page size is 100.
   * </pre>
   *
   * <code>int32 page_size = 5;</code>
   */
  int getPageSize();
}
