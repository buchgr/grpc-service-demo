// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/ml/v1beta1/job_service.proto

package com.google.cloud.ml.api.v1beta1;

/**
 * <pre>
 * Represents a set of hyperparameters to optimize.
 * </pre>
 *
 * Protobuf type {@code google.cloud.ml.v1beta1.HyperparameterSpec}
 */
public  final class HyperparameterSpec extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.cloud.ml.v1beta1.HyperparameterSpec)
    HyperparameterSpecOrBuilder {
  // Use HyperparameterSpec.newBuilder() to construct.
  private HyperparameterSpec(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private HyperparameterSpec() {
    goal_ = 0;
    params_ = java.util.Collections.emptyList();
    maxTrials_ = 0;
    maxParallelTrials_ = 0;
    hyperparameterMetricTag_ = "";
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private HyperparameterSpec(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 8: {
            int rawValue = input.readEnum();

            goal_ = rawValue;
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              params_ = new java.util.ArrayList<com.google.cloud.ml.api.v1beta1.ParameterSpec>();
              mutable_bitField0_ |= 0x00000002;
            }
            params_.add(
                input.readMessage(com.google.cloud.ml.api.v1beta1.ParameterSpec.parser(), extensionRegistry));
            break;
          }
          case 24: {

            maxTrials_ = input.readInt32();
            break;
          }
          case 32: {

            maxParallelTrials_ = input.readInt32();
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();

            hyperparameterMetricTag_ = s;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
        params_ = java.util.Collections.unmodifiableList(params_);
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.cloud.ml.api.v1beta1.JobServiceProto.internal_static_google_cloud_ml_v1beta1_HyperparameterSpec_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.ml.api.v1beta1.JobServiceProto.internal_static_google_cloud_ml_v1beta1_HyperparameterSpec_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.ml.api.v1beta1.HyperparameterSpec.class, com.google.cloud.ml.api.v1beta1.HyperparameterSpec.Builder.class);
  }

  /**
   * <pre>
   * The available types of optimization goals.
   * </pre>
   *
   * Protobuf enum {@code google.cloud.ml.v1beta1.HyperparameterSpec.GoalType}
   */
  public enum GoalType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Goal Type will default to maximize.
     * </pre>
     *
     * <code>GOAL_TYPE_UNSPECIFIED = 0;</code>
     */
    GOAL_TYPE_UNSPECIFIED(0),
    /**
     * <pre>
     * Maximize the goal metric.
     * </pre>
     *
     * <code>MAXIMIZE = 1;</code>
     */
    MAXIMIZE(1),
    /**
     * <pre>
     * Minimize the goal metric.
     * </pre>
     *
     * <code>MINIMIZE = 2;</code>
     */
    MINIMIZE(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Goal Type will default to maximize.
     * </pre>
     *
     * <code>GOAL_TYPE_UNSPECIFIED = 0;</code>
     */
    public static final int GOAL_TYPE_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * Maximize the goal metric.
     * </pre>
     *
     * <code>MAXIMIZE = 1;</code>
     */
    public static final int MAXIMIZE_VALUE = 1;
    /**
     * <pre>
     * Minimize the goal metric.
     * </pre>
     *
     * <code>MINIMIZE = 2;</code>
     */
    public static final int MINIMIZE_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static GoalType valueOf(int value) {
      return forNumber(value);
    }

    public static GoalType forNumber(int value) {
      switch (value) {
        case 0: return GOAL_TYPE_UNSPECIFIED;
        case 1: return MAXIMIZE;
        case 2: return MINIMIZE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<GoalType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        GoalType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GoalType>() {
            public GoalType findValueByNumber(int number) {
              return GoalType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.cloud.ml.api.v1beta1.HyperparameterSpec.getDescriptor().getEnumTypes().get(0);
    }

    private static final GoalType[] VALUES = values();

    public static GoalType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private GoalType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.cloud.ml.v1beta1.HyperparameterSpec.GoalType)
  }

  private int bitField0_;
  public static final int GOAL_FIELD_NUMBER = 1;
  private int goal_;
  /**
   * <pre>
   * Required. The type of goal to use for tuning. Available types are
   * `MAXIMIZE` and `MINIMIZE`.
   * Defaults to `MAXIMIZE`.
   * </pre>
   *
   * <code>.google.cloud.ml.v1beta1.HyperparameterSpec.GoalType goal = 1;</code>
   */
  public int getGoalValue() {
    return goal_;
  }
  /**
   * <pre>
   * Required. The type of goal to use for tuning. Available types are
   * `MAXIMIZE` and `MINIMIZE`.
   * Defaults to `MAXIMIZE`.
   * </pre>
   *
   * <code>.google.cloud.ml.v1beta1.HyperparameterSpec.GoalType goal = 1;</code>
   */
  public com.google.cloud.ml.api.v1beta1.HyperparameterSpec.GoalType getGoal() {
    com.google.cloud.ml.api.v1beta1.HyperparameterSpec.GoalType result = com.google.cloud.ml.api.v1beta1.HyperparameterSpec.GoalType.valueOf(goal_);
    return result == null ? com.google.cloud.ml.api.v1beta1.HyperparameterSpec.GoalType.UNRECOGNIZED : result;
  }

  public static final int PARAMS_FIELD_NUMBER = 2;
  private java.util.List<com.google.cloud.ml.api.v1beta1.ParameterSpec> params_;
  /**
   * <pre>
   * Required. The set of parameters to tune.
   * </pre>
   *
   * <code>repeated .google.cloud.ml.v1beta1.ParameterSpec params = 2;</code>
   */
  public java.util.List<com.google.cloud.ml.api.v1beta1.ParameterSpec> getParamsList() {
    return params_;
  }
  /**
   * <pre>
   * Required. The set of parameters to tune.
   * </pre>
   *
   * <code>repeated .google.cloud.ml.v1beta1.ParameterSpec params = 2;</code>
   */
  public java.util.List<? extends com.google.cloud.ml.api.v1beta1.ParameterSpecOrBuilder> 
      getParamsOrBuilderList() {
    return params_;
  }
  /**
   * <pre>
   * Required. The set of parameters to tune.
   * </pre>
   *
   * <code>repeated .google.cloud.ml.v1beta1.ParameterSpec params = 2;</code>
   */
  public int getParamsCount() {
    return params_.size();
  }
  /**
   * <pre>
   * Required. The set of parameters to tune.
   * </pre>
   *
   * <code>repeated .google.cloud.ml.v1beta1.ParameterSpec params = 2;</code>
   */
  public com.google.cloud.ml.api.v1beta1.ParameterSpec getParams(int index) {
    return params_.get(index);
  }
  /**
   * <pre>
   * Required. The set of parameters to tune.
   * </pre>
   *
   * <code>repeated .google.cloud.ml.v1beta1.ParameterSpec params = 2;</code>
   */
  public com.google.cloud.ml.api.v1beta1.ParameterSpecOrBuilder getParamsOrBuilder(
      int index) {
    return params_.get(index);
  }

  public static final int MAX_TRIALS_FIELD_NUMBER = 3;
  private int maxTrials_;
  /**
   * <pre>
   * Optional. How many training trials should be attempted to optimize
   * the specified hyperparameters.
   * Defaults to one.
   * </pre>
   *
   * <code>int32 max_trials = 3;</code>
   */
  public int getMaxTrials() {
    return maxTrials_;
  }

  public static final int MAX_PARALLEL_TRIALS_FIELD_NUMBER = 4;
  private int maxParallelTrials_;
  /**
   * <pre>
   * Optional. The number of training trials to run concurrently.
   * You can reduce the time it takes to perform hyperparameter tuning by adding
   * trials in parallel. However, each trail only benefits from the information
   * gained in completed trials. That means that a trial does not get access to
   * the results of trials running at the same time, which could reduce the
   * quality of the overall optimization.
   * Each trial will use the same scale tier and machine types.
   * Defaults to one.
   * </pre>
   *
   * <code>int32 max_parallel_trials = 4;</code>
   */
  public int getMaxParallelTrials() {
    return maxParallelTrials_;
  }

  public static final int HYPERPARAMETER_METRIC_TAG_FIELD_NUMBER = 5;
  private volatile java.lang.Object hyperparameterMetricTag_;
  /**
   * <pre>
   * Optional. The Tensorflow summary tag name to use for optimizing trials. For
   * current versions of Tensorflow, this tag name should exactly match what is
   * shown in Tensorboard, including all scopes.  For versions of Tensorflow
   * prior to 0.12, this should be only the tag passed to tf.Summary.
   * By default, "training/hptuning/metric" will be used.
   * </pre>
   *
   * <code>string hyperparameter_metric_tag = 5;</code>
   */
  public java.lang.String getHyperparameterMetricTag() {
    java.lang.Object ref = hyperparameterMetricTag_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      hyperparameterMetricTag_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Optional. The Tensorflow summary tag name to use for optimizing trials. For
   * current versions of Tensorflow, this tag name should exactly match what is
   * shown in Tensorboard, including all scopes.  For versions of Tensorflow
   * prior to 0.12, this should be only the tag passed to tf.Summary.
   * By default, "training/hptuning/metric" will be used.
   * </pre>
   *
   * <code>string hyperparameter_metric_tag = 5;</code>
   */
  public com.google.protobuf.ByteString
      getHyperparameterMetricTagBytes() {
    java.lang.Object ref = hyperparameterMetricTag_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      hyperparameterMetricTag_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (goal_ != com.google.cloud.ml.api.v1beta1.HyperparameterSpec.GoalType.GOAL_TYPE_UNSPECIFIED.getNumber()) {
      output.writeEnum(1, goal_);
    }
    for (int i = 0; i < params_.size(); i++) {
      output.writeMessage(2, params_.get(i));
    }
    if (maxTrials_ != 0) {
      output.writeInt32(3, maxTrials_);
    }
    if (maxParallelTrials_ != 0) {
      output.writeInt32(4, maxParallelTrials_);
    }
    if (!getHyperparameterMetricTagBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, hyperparameterMetricTag_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (goal_ != com.google.cloud.ml.api.v1beta1.HyperparameterSpec.GoalType.GOAL_TYPE_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, goal_);
    }
    for (int i = 0; i < params_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, params_.get(i));
    }
    if (maxTrials_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, maxTrials_);
    }
    if (maxParallelTrials_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, maxParallelTrials_);
    }
    if (!getHyperparameterMetricTagBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, hyperparameterMetricTag_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.cloud.ml.api.v1beta1.HyperparameterSpec)) {
      return super.equals(obj);
    }
    com.google.cloud.ml.api.v1beta1.HyperparameterSpec other = (com.google.cloud.ml.api.v1beta1.HyperparameterSpec) obj;

    boolean result = true;
    result = result && goal_ == other.goal_;
    result = result && getParamsList()
        .equals(other.getParamsList());
    result = result && (getMaxTrials()
        == other.getMaxTrials());
    result = result && (getMaxParallelTrials()
        == other.getMaxParallelTrials());
    result = result && getHyperparameterMetricTag()
        .equals(other.getHyperparameterMetricTag());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + GOAL_FIELD_NUMBER;
    hash = (53 * hash) + goal_;
    if (getParamsCount() > 0) {
      hash = (37 * hash) + PARAMS_FIELD_NUMBER;
      hash = (53 * hash) + getParamsList().hashCode();
    }
    hash = (37 * hash) + MAX_TRIALS_FIELD_NUMBER;
    hash = (53 * hash) + getMaxTrials();
    hash = (37 * hash) + MAX_PARALLEL_TRIALS_FIELD_NUMBER;
    hash = (53 * hash) + getMaxParallelTrials();
    hash = (37 * hash) + HYPERPARAMETER_METRIC_TAG_FIELD_NUMBER;
    hash = (53 * hash) + getHyperparameterMetricTag().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.ml.api.v1beta1.HyperparameterSpec parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.ml.api.v1beta1.HyperparameterSpec parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.ml.api.v1beta1.HyperparameterSpec parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.ml.api.v1beta1.HyperparameterSpec parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.ml.api.v1beta1.HyperparameterSpec parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.ml.api.v1beta1.HyperparameterSpec parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.ml.api.v1beta1.HyperparameterSpec parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.cloud.ml.api.v1beta1.HyperparameterSpec parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.ml.api.v1beta1.HyperparameterSpec parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.ml.api.v1beta1.HyperparameterSpec parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.cloud.ml.api.v1beta1.HyperparameterSpec prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Represents a set of hyperparameters to optimize.
   * </pre>
   *
   * Protobuf type {@code google.cloud.ml.v1beta1.HyperparameterSpec}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.cloud.ml.v1beta1.HyperparameterSpec)
      com.google.cloud.ml.api.v1beta1.HyperparameterSpecOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.ml.api.v1beta1.JobServiceProto.internal_static_google_cloud_ml_v1beta1_HyperparameterSpec_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.ml.api.v1beta1.JobServiceProto.internal_static_google_cloud_ml_v1beta1_HyperparameterSpec_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.ml.api.v1beta1.HyperparameterSpec.class, com.google.cloud.ml.api.v1beta1.HyperparameterSpec.Builder.class);
    }

    // Construct using com.google.cloud.ml.api.v1beta1.HyperparameterSpec.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getParamsFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      goal_ = 0;

      if (paramsBuilder_ == null) {
        params_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        paramsBuilder_.clear();
      }
      maxTrials_ = 0;

      maxParallelTrials_ = 0;

      hyperparameterMetricTag_ = "";

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.cloud.ml.api.v1beta1.JobServiceProto.internal_static_google_cloud_ml_v1beta1_HyperparameterSpec_descriptor;
    }

    public com.google.cloud.ml.api.v1beta1.HyperparameterSpec getDefaultInstanceForType() {
      return com.google.cloud.ml.api.v1beta1.HyperparameterSpec.getDefaultInstance();
    }

    public com.google.cloud.ml.api.v1beta1.HyperparameterSpec build() {
      com.google.cloud.ml.api.v1beta1.HyperparameterSpec result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.google.cloud.ml.api.v1beta1.HyperparameterSpec buildPartial() {
      com.google.cloud.ml.api.v1beta1.HyperparameterSpec result = new com.google.cloud.ml.api.v1beta1.HyperparameterSpec(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.goal_ = goal_;
      if (paramsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          params_ = java.util.Collections.unmodifiableList(params_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.params_ = params_;
      } else {
        result.params_ = paramsBuilder_.build();
      }
      result.maxTrials_ = maxTrials_;
      result.maxParallelTrials_ = maxParallelTrials_;
      result.hyperparameterMetricTag_ = hyperparameterMetricTag_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.ml.api.v1beta1.HyperparameterSpec) {
        return mergeFrom((com.google.cloud.ml.api.v1beta1.HyperparameterSpec)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.ml.api.v1beta1.HyperparameterSpec other) {
      if (other == com.google.cloud.ml.api.v1beta1.HyperparameterSpec.getDefaultInstance()) return this;
      if (other.goal_ != 0) {
        setGoalValue(other.getGoalValue());
      }
      if (paramsBuilder_ == null) {
        if (!other.params_.isEmpty()) {
          if (params_.isEmpty()) {
            params_ = other.params_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureParamsIsMutable();
            params_.addAll(other.params_);
          }
          onChanged();
        }
      } else {
        if (!other.params_.isEmpty()) {
          if (paramsBuilder_.isEmpty()) {
            paramsBuilder_.dispose();
            paramsBuilder_ = null;
            params_ = other.params_;
            bitField0_ = (bitField0_ & ~0x00000002);
            paramsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getParamsFieldBuilder() : null;
          } else {
            paramsBuilder_.addAllMessages(other.params_);
          }
        }
      }
      if (other.getMaxTrials() != 0) {
        setMaxTrials(other.getMaxTrials());
      }
      if (other.getMaxParallelTrials() != 0) {
        setMaxParallelTrials(other.getMaxParallelTrials());
      }
      if (!other.getHyperparameterMetricTag().isEmpty()) {
        hyperparameterMetricTag_ = other.hyperparameterMetricTag_;
        onChanged();
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.cloud.ml.api.v1beta1.HyperparameterSpec parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.cloud.ml.api.v1beta1.HyperparameterSpec) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int goal_ = 0;
    /**
     * <pre>
     * Required. The type of goal to use for tuning. Available types are
     * `MAXIMIZE` and `MINIMIZE`.
     * Defaults to `MAXIMIZE`.
     * </pre>
     *
     * <code>.google.cloud.ml.v1beta1.HyperparameterSpec.GoalType goal = 1;</code>
     */
    public int getGoalValue() {
      return goal_;
    }
    /**
     * <pre>
     * Required. The type of goal to use for tuning. Available types are
     * `MAXIMIZE` and `MINIMIZE`.
     * Defaults to `MAXIMIZE`.
     * </pre>
     *
     * <code>.google.cloud.ml.v1beta1.HyperparameterSpec.GoalType goal = 1;</code>
     */
    public Builder setGoalValue(int value) {
      goal_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The type of goal to use for tuning. Available types are
     * `MAXIMIZE` and `MINIMIZE`.
     * Defaults to `MAXIMIZE`.
     * </pre>
     *
     * <code>.google.cloud.ml.v1beta1.HyperparameterSpec.GoalType goal = 1;</code>
     */
    public com.google.cloud.ml.api.v1beta1.HyperparameterSpec.GoalType getGoal() {
      com.google.cloud.ml.api.v1beta1.HyperparameterSpec.GoalType result = com.google.cloud.ml.api.v1beta1.HyperparameterSpec.GoalType.valueOf(goal_);
      return result == null ? com.google.cloud.ml.api.v1beta1.HyperparameterSpec.GoalType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Required. The type of goal to use for tuning. Available types are
     * `MAXIMIZE` and `MINIMIZE`.
     * Defaults to `MAXIMIZE`.
     * </pre>
     *
     * <code>.google.cloud.ml.v1beta1.HyperparameterSpec.GoalType goal = 1;</code>
     */
    public Builder setGoal(com.google.cloud.ml.api.v1beta1.HyperparameterSpec.GoalType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      goal_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The type of goal to use for tuning. Available types are
     * `MAXIMIZE` and `MINIMIZE`.
     * Defaults to `MAXIMIZE`.
     * </pre>
     *
     * <code>.google.cloud.ml.v1beta1.HyperparameterSpec.GoalType goal = 1;</code>
     */
    public Builder clearGoal() {
      
      goal_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<com.google.cloud.ml.api.v1beta1.ParameterSpec> params_ =
      java.util.Collections.emptyList();
    private void ensureParamsIsMutable() {
      if (!((bitField0_ & 0x00000002) == 0x00000002)) {
        params_ = new java.util.ArrayList<com.google.cloud.ml.api.v1beta1.ParameterSpec>(params_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.ml.api.v1beta1.ParameterSpec, com.google.cloud.ml.api.v1beta1.ParameterSpec.Builder, com.google.cloud.ml.api.v1beta1.ParameterSpecOrBuilder> paramsBuilder_;

    /**
     * <pre>
     * Required. The set of parameters to tune.
     * </pre>
     *
     * <code>repeated .google.cloud.ml.v1beta1.ParameterSpec params = 2;</code>
     */
    public java.util.List<com.google.cloud.ml.api.v1beta1.ParameterSpec> getParamsList() {
      if (paramsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(params_);
      } else {
        return paramsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Required. The set of parameters to tune.
     * </pre>
     *
     * <code>repeated .google.cloud.ml.v1beta1.ParameterSpec params = 2;</code>
     */
    public int getParamsCount() {
      if (paramsBuilder_ == null) {
        return params_.size();
      } else {
        return paramsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Required. The set of parameters to tune.
     * </pre>
     *
     * <code>repeated .google.cloud.ml.v1beta1.ParameterSpec params = 2;</code>
     */
    public com.google.cloud.ml.api.v1beta1.ParameterSpec getParams(int index) {
      if (paramsBuilder_ == null) {
        return params_.get(index);
      } else {
        return paramsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Required. The set of parameters to tune.
     * </pre>
     *
     * <code>repeated .google.cloud.ml.v1beta1.ParameterSpec params = 2;</code>
     */
    public Builder setParams(
        int index, com.google.cloud.ml.api.v1beta1.ParameterSpec value) {
      if (paramsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureParamsIsMutable();
        params_.set(index, value);
        onChanged();
      } else {
        paramsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Required. The set of parameters to tune.
     * </pre>
     *
     * <code>repeated .google.cloud.ml.v1beta1.ParameterSpec params = 2;</code>
     */
    public Builder setParams(
        int index, com.google.cloud.ml.api.v1beta1.ParameterSpec.Builder builderForValue) {
      if (paramsBuilder_ == null) {
        ensureParamsIsMutable();
        params_.set(index, builderForValue.build());
        onChanged();
      } else {
        paramsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Required. The set of parameters to tune.
     * </pre>
     *
     * <code>repeated .google.cloud.ml.v1beta1.ParameterSpec params = 2;</code>
     */
    public Builder addParams(com.google.cloud.ml.api.v1beta1.ParameterSpec value) {
      if (paramsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureParamsIsMutable();
        params_.add(value);
        onChanged();
      } else {
        paramsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Required. The set of parameters to tune.
     * </pre>
     *
     * <code>repeated .google.cloud.ml.v1beta1.ParameterSpec params = 2;</code>
     */
    public Builder addParams(
        int index, com.google.cloud.ml.api.v1beta1.ParameterSpec value) {
      if (paramsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureParamsIsMutable();
        params_.add(index, value);
        onChanged();
      } else {
        paramsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Required. The set of parameters to tune.
     * </pre>
     *
     * <code>repeated .google.cloud.ml.v1beta1.ParameterSpec params = 2;</code>
     */
    public Builder addParams(
        com.google.cloud.ml.api.v1beta1.ParameterSpec.Builder builderForValue) {
      if (paramsBuilder_ == null) {
        ensureParamsIsMutable();
        params_.add(builderForValue.build());
        onChanged();
      } else {
        paramsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Required. The set of parameters to tune.
     * </pre>
     *
     * <code>repeated .google.cloud.ml.v1beta1.ParameterSpec params = 2;</code>
     */
    public Builder addParams(
        int index, com.google.cloud.ml.api.v1beta1.ParameterSpec.Builder builderForValue) {
      if (paramsBuilder_ == null) {
        ensureParamsIsMutable();
        params_.add(index, builderForValue.build());
        onChanged();
      } else {
        paramsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Required. The set of parameters to tune.
     * </pre>
     *
     * <code>repeated .google.cloud.ml.v1beta1.ParameterSpec params = 2;</code>
     */
    public Builder addAllParams(
        java.lang.Iterable<? extends com.google.cloud.ml.api.v1beta1.ParameterSpec> values) {
      if (paramsBuilder_ == null) {
        ensureParamsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, params_);
        onChanged();
      } else {
        paramsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Required. The set of parameters to tune.
     * </pre>
     *
     * <code>repeated .google.cloud.ml.v1beta1.ParameterSpec params = 2;</code>
     */
    public Builder clearParams() {
      if (paramsBuilder_ == null) {
        params_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        paramsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Required. The set of parameters to tune.
     * </pre>
     *
     * <code>repeated .google.cloud.ml.v1beta1.ParameterSpec params = 2;</code>
     */
    public Builder removeParams(int index) {
      if (paramsBuilder_ == null) {
        ensureParamsIsMutable();
        params_.remove(index);
        onChanged();
      } else {
        paramsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Required. The set of parameters to tune.
     * </pre>
     *
     * <code>repeated .google.cloud.ml.v1beta1.ParameterSpec params = 2;</code>
     */
    public com.google.cloud.ml.api.v1beta1.ParameterSpec.Builder getParamsBuilder(
        int index) {
      return getParamsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Required. The set of parameters to tune.
     * </pre>
     *
     * <code>repeated .google.cloud.ml.v1beta1.ParameterSpec params = 2;</code>
     */
    public com.google.cloud.ml.api.v1beta1.ParameterSpecOrBuilder getParamsOrBuilder(
        int index) {
      if (paramsBuilder_ == null) {
        return params_.get(index);  } else {
        return paramsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Required. The set of parameters to tune.
     * </pre>
     *
     * <code>repeated .google.cloud.ml.v1beta1.ParameterSpec params = 2;</code>
     */
    public java.util.List<? extends com.google.cloud.ml.api.v1beta1.ParameterSpecOrBuilder> 
         getParamsOrBuilderList() {
      if (paramsBuilder_ != null) {
        return paramsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(params_);
      }
    }
    /**
     * <pre>
     * Required. The set of parameters to tune.
     * </pre>
     *
     * <code>repeated .google.cloud.ml.v1beta1.ParameterSpec params = 2;</code>
     */
    public com.google.cloud.ml.api.v1beta1.ParameterSpec.Builder addParamsBuilder() {
      return getParamsFieldBuilder().addBuilder(
          com.google.cloud.ml.api.v1beta1.ParameterSpec.getDefaultInstance());
    }
    /**
     * <pre>
     * Required. The set of parameters to tune.
     * </pre>
     *
     * <code>repeated .google.cloud.ml.v1beta1.ParameterSpec params = 2;</code>
     */
    public com.google.cloud.ml.api.v1beta1.ParameterSpec.Builder addParamsBuilder(
        int index) {
      return getParamsFieldBuilder().addBuilder(
          index, com.google.cloud.ml.api.v1beta1.ParameterSpec.getDefaultInstance());
    }
    /**
     * <pre>
     * Required. The set of parameters to tune.
     * </pre>
     *
     * <code>repeated .google.cloud.ml.v1beta1.ParameterSpec params = 2;</code>
     */
    public java.util.List<com.google.cloud.ml.api.v1beta1.ParameterSpec.Builder> 
         getParamsBuilderList() {
      return getParamsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.cloud.ml.api.v1beta1.ParameterSpec, com.google.cloud.ml.api.v1beta1.ParameterSpec.Builder, com.google.cloud.ml.api.v1beta1.ParameterSpecOrBuilder> 
        getParamsFieldBuilder() {
      if (paramsBuilder_ == null) {
        paramsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.ml.api.v1beta1.ParameterSpec, com.google.cloud.ml.api.v1beta1.ParameterSpec.Builder, com.google.cloud.ml.api.v1beta1.ParameterSpecOrBuilder>(
                params_,
                ((bitField0_ & 0x00000002) == 0x00000002),
                getParentForChildren(),
                isClean());
        params_ = null;
      }
      return paramsBuilder_;
    }

    private int maxTrials_ ;
    /**
     * <pre>
     * Optional. How many training trials should be attempted to optimize
     * the specified hyperparameters.
     * Defaults to one.
     * </pre>
     *
     * <code>int32 max_trials = 3;</code>
     */
    public int getMaxTrials() {
      return maxTrials_;
    }
    /**
     * <pre>
     * Optional. How many training trials should be attempted to optimize
     * the specified hyperparameters.
     * Defaults to one.
     * </pre>
     *
     * <code>int32 max_trials = 3;</code>
     */
    public Builder setMaxTrials(int value) {
      
      maxTrials_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional. How many training trials should be attempted to optimize
     * the specified hyperparameters.
     * Defaults to one.
     * </pre>
     *
     * <code>int32 max_trials = 3;</code>
     */
    public Builder clearMaxTrials() {
      
      maxTrials_ = 0;
      onChanged();
      return this;
    }

    private int maxParallelTrials_ ;
    /**
     * <pre>
     * Optional. The number of training trials to run concurrently.
     * You can reduce the time it takes to perform hyperparameter tuning by adding
     * trials in parallel. However, each trail only benefits from the information
     * gained in completed trials. That means that a trial does not get access to
     * the results of trials running at the same time, which could reduce the
     * quality of the overall optimization.
     * Each trial will use the same scale tier and machine types.
     * Defaults to one.
     * </pre>
     *
     * <code>int32 max_parallel_trials = 4;</code>
     */
    public int getMaxParallelTrials() {
      return maxParallelTrials_;
    }
    /**
     * <pre>
     * Optional. The number of training trials to run concurrently.
     * You can reduce the time it takes to perform hyperparameter tuning by adding
     * trials in parallel. However, each trail only benefits from the information
     * gained in completed trials. That means that a trial does not get access to
     * the results of trials running at the same time, which could reduce the
     * quality of the overall optimization.
     * Each trial will use the same scale tier and machine types.
     * Defaults to one.
     * </pre>
     *
     * <code>int32 max_parallel_trials = 4;</code>
     */
    public Builder setMaxParallelTrials(int value) {
      
      maxParallelTrials_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional. The number of training trials to run concurrently.
     * You can reduce the time it takes to perform hyperparameter tuning by adding
     * trials in parallel. However, each trail only benefits from the information
     * gained in completed trials. That means that a trial does not get access to
     * the results of trials running at the same time, which could reduce the
     * quality of the overall optimization.
     * Each trial will use the same scale tier and machine types.
     * Defaults to one.
     * </pre>
     *
     * <code>int32 max_parallel_trials = 4;</code>
     */
    public Builder clearMaxParallelTrials() {
      
      maxParallelTrials_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object hyperparameterMetricTag_ = "";
    /**
     * <pre>
     * Optional. The Tensorflow summary tag name to use for optimizing trials. For
     * current versions of Tensorflow, this tag name should exactly match what is
     * shown in Tensorboard, including all scopes.  For versions of Tensorflow
     * prior to 0.12, this should be only the tag passed to tf.Summary.
     * By default, "training/hptuning/metric" will be used.
     * </pre>
     *
     * <code>string hyperparameter_metric_tag = 5;</code>
     */
    public java.lang.String getHyperparameterMetricTag() {
      java.lang.Object ref = hyperparameterMetricTag_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        hyperparameterMetricTag_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Optional. The Tensorflow summary tag name to use for optimizing trials. For
     * current versions of Tensorflow, this tag name should exactly match what is
     * shown in Tensorboard, including all scopes.  For versions of Tensorflow
     * prior to 0.12, this should be only the tag passed to tf.Summary.
     * By default, "training/hptuning/metric" will be used.
     * </pre>
     *
     * <code>string hyperparameter_metric_tag = 5;</code>
     */
    public com.google.protobuf.ByteString
        getHyperparameterMetricTagBytes() {
      java.lang.Object ref = hyperparameterMetricTag_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        hyperparameterMetricTag_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Optional. The Tensorflow summary tag name to use for optimizing trials. For
     * current versions of Tensorflow, this tag name should exactly match what is
     * shown in Tensorboard, including all scopes.  For versions of Tensorflow
     * prior to 0.12, this should be only the tag passed to tf.Summary.
     * By default, "training/hptuning/metric" will be used.
     * </pre>
     *
     * <code>string hyperparameter_metric_tag = 5;</code>
     */
    public Builder setHyperparameterMetricTag(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      hyperparameterMetricTag_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional. The Tensorflow summary tag name to use for optimizing trials. For
     * current versions of Tensorflow, this tag name should exactly match what is
     * shown in Tensorboard, including all scopes.  For versions of Tensorflow
     * prior to 0.12, this should be only the tag passed to tf.Summary.
     * By default, "training/hptuning/metric" will be used.
     * </pre>
     *
     * <code>string hyperparameter_metric_tag = 5;</code>
     */
    public Builder clearHyperparameterMetricTag() {
      
      hyperparameterMetricTag_ = getDefaultInstance().getHyperparameterMetricTag();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional. The Tensorflow summary tag name to use for optimizing trials. For
     * current versions of Tensorflow, this tag name should exactly match what is
     * shown in Tensorboard, including all scopes.  For versions of Tensorflow
     * prior to 0.12, this should be only the tag passed to tf.Summary.
     * By default, "training/hptuning/metric" will be used.
     * </pre>
     *
     * <code>string hyperparameter_metric_tag = 5;</code>
     */
    public Builder setHyperparameterMetricTagBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      hyperparameterMetricTag_ = value;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:google.cloud.ml.v1beta1.HyperparameterSpec)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.ml.v1beta1.HyperparameterSpec)
  private static final com.google.cloud.ml.api.v1beta1.HyperparameterSpec DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.cloud.ml.api.v1beta1.HyperparameterSpec();
  }

  public static com.google.cloud.ml.api.v1beta1.HyperparameterSpec getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<HyperparameterSpec>
      PARSER = new com.google.protobuf.AbstractParser<HyperparameterSpec>() {
    public HyperparameterSpec parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new HyperparameterSpec(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<HyperparameterSpec> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<HyperparameterSpec> getParserForType() {
    return PARSER;
  }

  public com.google.cloud.ml.api.v1beta1.HyperparameterSpec getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

