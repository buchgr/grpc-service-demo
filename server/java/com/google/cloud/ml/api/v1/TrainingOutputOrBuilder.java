// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/ml/v1/job_service.proto

package com.google.cloud.ml.api.v1;

public interface TrainingOutputOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.cloud.ml.v1.TrainingOutput)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The number of hyperparameter tuning trials that completed successfully.
   * Only set for hyperparameter tuning jobs.
   * </pre>
   *
   * <code>int64 completed_trial_count = 1;</code>
   */
  long getCompletedTrialCount();

  /**
   * <pre>
   * Results for individual Hyperparameter trials.
   * Only set for hyperparameter tuning jobs.
   * </pre>
   *
   * <code>repeated .google.cloud.ml.v1.HyperparameterOutput trials = 2;</code>
   */
  java.util.List<com.google.cloud.ml.api.v1.HyperparameterOutput> 
      getTrialsList();
  /**
   * <pre>
   * Results for individual Hyperparameter trials.
   * Only set for hyperparameter tuning jobs.
   * </pre>
   *
   * <code>repeated .google.cloud.ml.v1.HyperparameterOutput trials = 2;</code>
   */
  com.google.cloud.ml.api.v1.HyperparameterOutput getTrials(int index);
  /**
   * <pre>
   * Results for individual Hyperparameter trials.
   * Only set for hyperparameter tuning jobs.
   * </pre>
   *
   * <code>repeated .google.cloud.ml.v1.HyperparameterOutput trials = 2;</code>
   */
  int getTrialsCount();
  /**
   * <pre>
   * Results for individual Hyperparameter trials.
   * Only set for hyperparameter tuning jobs.
   * </pre>
   *
   * <code>repeated .google.cloud.ml.v1.HyperparameterOutput trials = 2;</code>
   */
  java.util.List<? extends com.google.cloud.ml.api.v1.HyperparameterOutputOrBuilder> 
      getTrialsOrBuilderList();
  /**
   * <pre>
   * Results for individual Hyperparameter trials.
   * Only set for hyperparameter tuning jobs.
   * </pre>
   *
   * <code>repeated .google.cloud.ml.v1.HyperparameterOutput trials = 2;</code>
   */
  com.google.cloud.ml.api.v1.HyperparameterOutputOrBuilder getTrialsOrBuilder(
      int index);

  /**
   * <pre>
   * The amount of ML units consumed by the job.
   * </pre>
   *
   * <code>double consumed_ml_units = 3;</code>
   */
  double getConsumedMlUnits();

  /**
   * <pre>
   * Whether this job is a hyperparameter tuning job.
   * </pre>
   *
   * <code>bool is_hyperparameter_tuning_job = 4;</code>
   */
  boolean getIsHyperparameterTuningJob();
}
