// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/functions/v1beta2/functions.proto

package com.google.cloud.functions.v1beta2;

/**
 * <pre>
 * Describes EventTrigger, used to request events be sent from another
 * service.
 * </pre>
 *
 * Protobuf type {@code google.cloud.functions.v1beta2.EventTrigger}
 */
public  final class EventTrigger extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.cloud.functions.v1beta2.EventTrigger)
    EventTriggerOrBuilder {
  // Use EventTrigger.newBuilder() to construct.
  private EventTrigger(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private EventTrigger() {
    eventType_ = "";
    resource_ = "";
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private EventTrigger(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            eventType_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            resource_ = s;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.cloud.functions.v1beta2.FunctionsProto.internal_static_google_cloud_functions_v1beta2_EventTrigger_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.functions.v1beta2.FunctionsProto.internal_static_google_cloud_functions_v1beta2_EventTrigger_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.functions.v1beta2.EventTrigger.class, com.google.cloud.functions.v1beta2.EventTrigger.Builder.class);
  }

  public static final int EVENT_TYPE_FIELD_NUMBER = 1;
  private volatile java.lang.Object eventType_;
  /**
   * <pre>
   * `event_type` names contain the service that is sending an event and the
   * kind of event that was fired. Must be of the form
   * `providers/&#42;&#47;eventTypes/&#42;` e.g. Directly handle a Message published to
   * Google Cloud Pub/Sub `providers/cloud.pubsub/eventTypes/topic.publish`
   *      Handle an object changing in Google Cloud Storage
   *      `providers/cloud.storage/eventTypes/object.change`
   *      Handle a write to the Firebase Realtime Database
   *      `providers/firebase.database/eventTypes/data.write`
   * </pre>
   *
   * <code>string event_type = 1;</code>
   */
  public java.lang.String getEventType() {
    java.lang.Object ref = eventType_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      eventType_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * `event_type` names contain the service that is sending an event and the
   * kind of event that was fired. Must be of the form
   * `providers/&#42;&#47;eventTypes/&#42;` e.g. Directly handle a Message published to
   * Google Cloud Pub/Sub `providers/cloud.pubsub/eventTypes/topic.publish`
   *      Handle an object changing in Google Cloud Storage
   *      `providers/cloud.storage/eventTypes/object.change`
   *      Handle a write to the Firebase Realtime Database
   *      `providers/firebase.database/eventTypes/data.write`
   * </pre>
   *
   * <code>string event_type = 1;</code>
   */
  public com.google.protobuf.ByteString
      getEventTypeBytes() {
    java.lang.Object ref = eventType_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      eventType_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int RESOURCE_FIELD_NUMBER = 2;
  private volatile java.lang.Object resource_;
  /**
   * <pre>
   * Which instance of the source's service should send events. E.g. for Pub/Sub
   * this would be a Pub/Sub topic at `projects/&#42;&#47;topics/&#42;`. For Google Cloud
   * Storage this would be a bucket at `projects/&#42;&#47;buckets/&#42;`. For any source
   * that only supports one instance per-project, this should be the name of the
   * project (`projects/&#42;`)
   * </pre>
   *
   * <code>string resource = 2;</code>
   */
  public java.lang.String getResource() {
    java.lang.Object ref = resource_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      resource_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Which instance of the source's service should send events. E.g. for Pub/Sub
   * this would be a Pub/Sub topic at `projects/&#42;&#47;topics/&#42;`. For Google Cloud
   * Storage this would be a bucket at `projects/&#42;&#47;buckets/&#42;`. For any source
   * that only supports one instance per-project, this should be the name of the
   * project (`projects/&#42;`)
   * </pre>
   *
   * <code>string resource = 2;</code>
   */
  public com.google.protobuf.ByteString
      getResourceBytes() {
    java.lang.Object ref = resource_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      resource_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getEventTypeBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, eventType_);
    }
    if (!getResourceBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, resource_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getEventTypeBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, eventType_);
    }
    if (!getResourceBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, resource_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.cloud.functions.v1beta2.EventTrigger)) {
      return super.equals(obj);
    }
    com.google.cloud.functions.v1beta2.EventTrigger other = (com.google.cloud.functions.v1beta2.EventTrigger) obj;

    boolean result = true;
    result = result && getEventType()
        .equals(other.getEventType());
    result = result && getResource()
        .equals(other.getResource());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + EVENT_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + getEventType().hashCode();
    hash = (37 * hash) + RESOURCE_FIELD_NUMBER;
    hash = (53 * hash) + getResource().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.functions.v1beta2.EventTrigger parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.functions.v1beta2.EventTrigger parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.functions.v1beta2.EventTrigger parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.functions.v1beta2.EventTrigger parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.functions.v1beta2.EventTrigger parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.functions.v1beta2.EventTrigger parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.functions.v1beta2.EventTrigger parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.cloud.functions.v1beta2.EventTrigger parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.functions.v1beta2.EventTrigger parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.functions.v1beta2.EventTrigger parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.cloud.functions.v1beta2.EventTrigger prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Describes EventTrigger, used to request events be sent from another
   * service.
   * </pre>
   *
   * Protobuf type {@code google.cloud.functions.v1beta2.EventTrigger}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.cloud.functions.v1beta2.EventTrigger)
      com.google.cloud.functions.v1beta2.EventTriggerOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.functions.v1beta2.FunctionsProto.internal_static_google_cloud_functions_v1beta2_EventTrigger_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.functions.v1beta2.FunctionsProto.internal_static_google_cloud_functions_v1beta2_EventTrigger_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.functions.v1beta2.EventTrigger.class, com.google.cloud.functions.v1beta2.EventTrigger.Builder.class);
    }

    // Construct using com.google.cloud.functions.v1beta2.EventTrigger.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      eventType_ = "";

      resource_ = "";

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.cloud.functions.v1beta2.FunctionsProto.internal_static_google_cloud_functions_v1beta2_EventTrigger_descriptor;
    }

    public com.google.cloud.functions.v1beta2.EventTrigger getDefaultInstanceForType() {
      return com.google.cloud.functions.v1beta2.EventTrigger.getDefaultInstance();
    }

    public com.google.cloud.functions.v1beta2.EventTrigger build() {
      com.google.cloud.functions.v1beta2.EventTrigger result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.google.cloud.functions.v1beta2.EventTrigger buildPartial() {
      com.google.cloud.functions.v1beta2.EventTrigger result = new com.google.cloud.functions.v1beta2.EventTrigger(this);
      result.eventType_ = eventType_;
      result.resource_ = resource_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.functions.v1beta2.EventTrigger) {
        return mergeFrom((com.google.cloud.functions.v1beta2.EventTrigger)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.functions.v1beta2.EventTrigger other) {
      if (other == com.google.cloud.functions.v1beta2.EventTrigger.getDefaultInstance()) return this;
      if (!other.getEventType().isEmpty()) {
        eventType_ = other.eventType_;
        onChanged();
      }
      if (!other.getResource().isEmpty()) {
        resource_ = other.resource_;
        onChanged();
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.cloud.functions.v1beta2.EventTrigger parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.cloud.functions.v1beta2.EventTrigger) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object eventType_ = "";
    /**
     * <pre>
     * `event_type` names contain the service that is sending an event and the
     * kind of event that was fired. Must be of the form
     * `providers/&#42;&#47;eventTypes/&#42;` e.g. Directly handle a Message published to
     * Google Cloud Pub/Sub `providers/cloud.pubsub/eventTypes/topic.publish`
     *      Handle an object changing in Google Cloud Storage
     *      `providers/cloud.storage/eventTypes/object.change`
     *      Handle a write to the Firebase Realtime Database
     *      `providers/firebase.database/eventTypes/data.write`
     * </pre>
     *
     * <code>string event_type = 1;</code>
     */
    public java.lang.String getEventType() {
      java.lang.Object ref = eventType_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        eventType_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * `event_type` names contain the service that is sending an event and the
     * kind of event that was fired. Must be of the form
     * `providers/&#42;&#47;eventTypes/&#42;` e.g. Directly handle a Message published to
     * Google Cloud Pub/Sub `providers/cloud.pubsub/eventTypes/topic.publish`
     *      Handle an object changing in Google Cloud Storage
     *      `providers/cloud.storage/eventTypes/object.change`
     *      Handle a write to the Firebase Realtime Database
     *      `providers/firebase.database/eventTypes/data.write`
     * </pre>
     *
     * <code>string event_type = 1;</code>
     */
    public com.google.protobuf.ByteString
        getEventTypeBytes() {
      java.lang.Object ref = eventType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        eventType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * `event_type` names contain the service that is sending an event and the
     * kind of event that was fired. Must be of the form
     * `providers/&#42;&#47;eventTypes/&#42;` e.g. Directly handle a Message published to
     * Google Cloud Pub/Sub `providers/cloud.pubsub/eventTypes/topic.publish`
     *      Handle an object changing in Google Cloud Storage
     *      `providers/cloud.storage/eventTypes/object.change`
     *      Handle a write to the Firebase Realtime Database
     *      `providers/firebase.database/eventTypes/data.write`
     * </pre>
     *
     * <code>string event_type = 1;</code>
     */
    public Builder setEventType(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      eventType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * `event_type` names contain the service that is sending an event and the
     * kind of event that was fired. Must be of the form
     * `providers/&#42;&#47;eventTypes/&#42;` e.g. Directly handle a Message published to
     * Google Cloud Pub/Sub `providers/cloud.pubsub/eventTypes/topic.publish`
     *      Handle an object changing in Google Cloud Storage
     *      `providers/cloud.storage/eventTypes/object.change`
     *      Handle a write to the Firebase Realtime Database
     *      `providers/firebase.database/eventTypes/data.write`
     * </pre>
     *
     * <code>string event_type = 1;</code>
     */
    public Builder clearEventType() {
      
      eventType_ = getDefaultInstance().getEventType();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * `event_type` names contain the service that is sending an event and the
     * kind of event that was fired. Must be of the form
     * `providers/&#42;&#47;eventTypes/&#42;` e.g. Directly handle a Message published to
     * Google Cloud Pub/Sub `providers/cloud.pubsub/eventTypes/topic.publish`
     *      Handle an object changing in Google Cloud Storage
     *      `providers/cloud.storage/eventTypes/object.change`
     *      Handle a write to the Firebase Realtime Database
     *      `providers/firebase.database/eventTypes/data.write`
     * </pre>
     *
     * <code>string event_type = 1;</code>
     */
    public Builder setEventTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      eventType_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object resource_ = "";
    /**
     * <pre>
     * Which instance of the source's service should send events. E.g. for Pub/Sub
     * this would be a Pub/Sub topic at `projects/&#42;&#47;topics/&#42;`. For Google Cloud
     * Storage this would be a bucket at `projects/&#42;&#47;buckets/&#42;`. For any source
     * that only supports one instance per-project, this should be the name of the
     * project (`projects/&#42;`)
     * </pre>
     *
     * <code>string resource = 2;</code>
     */
    public java.lang.String getResource() {
      java.lang.Object ref = resource_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        resource_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Which instance of the source's service should send events. E.g. for Pub/Sub
     * this would be a Pub/Sub topic at `projects/&#42;&#47;topics/&#42;`. For Google Cloud
     * Storage this would be a bucket at `projects/&#42;&#47;buckets/&#42;`. For any source
     * that only supports one instance per-project, this should be the name of the
     * project (`projects/&#42;`)
     * </pre>
     *
     * <code>string resource = 2;</code>
     */
    public com.google.protobuf.ByteString
        getResourceBytes() {
      java.lang.Object ref = resource_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        resource_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Which instance of the source's service should send events. E.g. for Pub/Sub
     * this would be a Pub/Sub topic at `projects/&#42;&#47;topics/&#42;`. For Google Cloud
     * Storage this would be a bucket at `projects/&#42;&#47;buckets/&#42;`. For any source
     * that only supports one instance per-project, this should be the name of the
     * project (`projects/&#42;`)
     * </pre>
     *
     * <code>string resource = 2;</code>
     */
    public Builder setResource(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      resource_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Which instance of the source's service should send events. E.g. for Pub/Sub
     * this would be a Pub/Sub topic at `projects/&#42;&#47;topics/&#42;`. For Google Cloud
     * Storage this would be a bucket at `projects/&#42;&#47;buckets/&#42;`. For any source
     * that only supports one instance per-project, this should be the name of the
     * project (`projects/&#42;`)
     * </pre>
     *
     * <code>string resource = 2;</code>
     */
    public Builder clearResource() {
      
      resource_ = getDefaultInstance().getResource();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Which instance of the source's service should send events. E.g. for Pub/Sub
     * this would be a Pub/Sub topic at `projects/&#42;&#47;topics/&#42;`. For Google Cloud
     * Storage this would be a bucket at `projects/&#42;&#47;buckets/&#42;`. For any source
     * that only supports one instance per-project, this should be the name of the
     * project (`projects/&#42;`)
     * </pre>
     *
     * <code>string resource = 2;</code>
     */
    public Builder setResourceBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      resource_ = value;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:google.cloud.functions.v1beta2.EventTrigger)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.functions.v1beta2.EventTrigger)
  private static final com.google.cloud.functions.v1beta2.EventTrigger DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.cloud.functions.v1beta2.EventTrigger();
  }

  public static com.google.cloud.functions.v1beta2.EventTrigger getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<EventTrigger>
      PARSER = new com.google.protobuf.AbstractParser<EventTrigger>() {
    public EventTrigger parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new EventTrigger(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<EventTrigger> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<EventTrigger> getParserForType() {
    return PARSER;
  }

  public com.google.cloud.functions.v1beta2.EventTrigger getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

