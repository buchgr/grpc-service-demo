// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/functions/v1beta2/functions.proto

package com.google.cloud.functions.v1beta2;

/**
 * <pre>
 * Describes the location of the function source in a remote repository.
 * </pre>
 *
 * Protobuf type {@code google.cloud.functions.v1beta2.SourceRepository}
 */
public  final class SourceRepository extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.cloud.functions.v1beta2.SourceRepository)
    SourceRepositoryOrBuilder {
  // Use SourceRepository.newBuilder() to construct.
  private SourceRepository(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SourceRepository() {
    repositoryUrl_ = "";
    sourcePath_ = "";
    deployedRevision_ = "";
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private SourceRepository(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            repositoryUrl_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            sourcePath_ = s;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();
            versionCase_ = 3;
            version_ = s;
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();
            versionCase_ = 4;
            version_ = s;
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();
            versionCase_ = 5;
            version_ = s;
            break;
          }
          case 50: {
            java.lang.String s = input.readStringRequireUtf8();

            deployedRevision_ = s;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.cloud.functions.v1beta2.FunctionsProto.internal_static_google_cloud_functions_v1beta2_SourceRepository_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.functions.v1beta2.FunctionsProto.internal_static_google_cloud_functions_v1beta2_SourceRepository_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.functions.v1beta2.SourceRepository.class, com.google.cloud.functions.v1beta2.SourceRepository.Builder.class);
  }

  private int versionCase_ = 0;
  private java.lang.Object version_;
  public enum VersionCase
      implements com.google.protobuf.Internal.EnumLite {
    BRANCH(3),
    TAG(4),
    REVISION(5),
    VERSION_NOT_SET(0);
    private final int value;
    private VersionCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static VersionCase valueOf(int value) {
      return forNumber(value);
    }

    public static VersionCase forNumber(int value) {
      switch (value) {
        case 3: return BRANCH;
        case 4: return TAG;
        case 5: return REVISION;
        case 0: return VERSION_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public VersionCase
  getVersionCase() {
    return VersionCase.forNumber(
        versionCase_);
  }

  public static final int REPOSITORY_URL_FIELD_NUMBER = 1;
  private volatile java.lang.Object repositoryUrl_;
  /**
   * <pre>
   * URL to the hosted repository where the function is defined. Only paths in
   * https://source.developers.google.com domain are supported. The path should
   * contain the name of the repository.
   * </pre>
   *
   * <code>string repository_url = 1;</code>
   */
  public java.lang.String getRepositoryUrl() {
    java.lang.Object ref = repositoryUrl_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      repositoryUrl_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * URL to the hosted repository where the function is defined. Only paths in
   * https://source.developers.google.com domain are supported. The path should
   * contain the name of the repository.
   * </pre>
   *
   * <code>string repository_url = 1;</code>
   */
  public com.google.protobuf.ByteString
      getRepositoryUrlBytes() {
    java.lang.Object ref = repositoryUrl_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      repositoryUrl_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SOURCE_PATH_FIELD_NUMBER = 2;
  private volatile java.lang.Object sourcePath_;
  /**
   * <pre>
   * The path within the repository where the function is defined. The path
   * should point to the directory where Cloud Functions files are located. Use
   * "/" if the function is defined directly in the root directory of a
   * repository.
   * </pre>
   *
   * <code>string source_path = 2;</code>
   */
  public java.lang.String getSourcePath() {
    java.lang.Object ref = sourcePath_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      sourcePath_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The path within the repository where the function is defined. The path
   * should point to the directory where Cloud Functions files are located. Use
   * "/" if the function is defined directly in the root directory of a
   * repository.
   * </pre>
   *
   * <code>string source_path = 2;</code>
   */
  public com.google.protobuf.ByteString
      getSourcePathBytes() {
    java.lang.Object ref = sourcePath_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      sourcePath_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int BRANCH_FIELD_NUMBER = 3;
  /**
   * <pre>
   * The name of the branch from which the function should be fetched.
   * </pre>
   *
   * <code>string branch = 3;</code>
   */
  public java.lang.String getBranch() {
    java.lang.Object ref = "";
    if (versionCase_ == 3) {
      ref = version_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (versionCase_ == 3) {
        version_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * The name of the branch from which the function should be fetched.
   * </pre>
   *
   * <code>string branch = 3;</code>
   */
  public com.google.protobuf.ByteString
      getBranchBytes() {
    java.lang.Object ref = "";
    if (versionCase_ == 3) {
      ref = version_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      if (versionCase_ == 3) {
        version_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TAG_FIELD_NUMBER = 4;
  /**
   * <pre>
   * The name of the tag that captures the state of the repository from
   * which the function should be fetched.
   * </pre>
   *
   * <code>string tag = 4;</code>
   */
  public java.lang.String getTag() {
    java.lang.Object ref = "";
    if (versionCase_ == 4) {
      ref = version_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (versionCase_ == 4) {
        version_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * The name of the tag that captures the state of the repository from
   * which the function should be fetched.
   * </pre>
   *
   * <code>string tag = 4;</code>
   */
  public com.google.protobuf.ByteString
      getTagBytes() {
    java.lang.Object ref = "";
    if (versionCase_ == 4) {
      ref = version_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      if (versionCase_ == 4) {
        version_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int REVISION_FIELD_NUMBER = 5;
  /**
   * <pre>
   * The id of the revision that captures the state of the repository from
   * which the function should be fetched.
   * </pre>
   *
   * <code>string revision = 5;</code>
   */
  public java.lang.String getRevision() {
    java.lang.Object ref = "";
    if (versionCase_ == 5) {
      ref = version_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (versionCase_ == 5) {
        version_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * The id of the revision that captures the state of the repository from
   * which the function should be fetched.
   * </pre>
   *
   * <code>string revision = 5;</code>
   */
  public com.google.protobuf.ByteString
      getRevisionBytes() {
    java.lang.Object ref = "";
    if (versionCase_ == 5) {
      ref = version_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      if (versionCase_ == 5) {
        version_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DEPLOYED_REVISION_FIELD_NUMBER = 6;
  private volatile java.lang.Object deployedRevision_;
  /**
   * <pre>
   * Output only. The id of the revision that was resolved at the moment of
   * function creation or update. For example when a user deployed from a
   * branch, it will be the revision id of the latest change on this branch at
   * that time. If user deployed from revision then this value will be always
   * equal to the revision specified by the user.
   * </pre>
   *
   * <code>string deployed_revision = 6;</code>
   */
  public java.lang.String getDeployedRevision() {
    java.lang.Object ref = deployedRevision_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      deployedRevision_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Output only. The id of the revision that was resolved at the moment of
   * function creation or update. For example when a user deployed from a
   * branch, it will be the revision id of the latest change on this branch at
   * that time. If user deployed from revision then this value will be always
   * equal to the revision specified by the user.
   * </pre>
   *
   * <code>string deployed_revision = 6;</code>
   */
  public com.google.protobuf.ByteString
      getDeployedRevisionBytes() {
    java.lang.Object ref = deployedRevision_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      deployedRevision_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getRepositoryUrlBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, repositoryUrl_);
    }
    if (!getSourcePathBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, sourcePath_);
    }
    if (versionCase_ == 3) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, version_);
    }
    if (versionCase_ == 4) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, version_);
    }
    if (versionCase_ == 5) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, version_);
    }
    if (!getDeployedRevisionBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, deployedRevision_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getRepositoryUrlBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, repositoryUrl_);
    }
    if (!getSourcePathBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, sourcePath_);
    }
    if (versionCase_ == 3) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, version_);
    }
    if (versionCase_ == 4) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, version_);
    }
    if (versionCase_ == 5) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, version_);
    }
    if (!getDeployedRevisionBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, deployedRevision_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.cloud.functions.v1beta2.SourceRepository)) {
      return super.equals(obj);
    }
    com.google.cloud.functions.v1beta2.SourceRepository other = (com.google.cloud.functions.v1beta2.SourceRepository) obj;

    boolean result = true;
    result = result && getRepositoryUrl()
        .equals(other.getRepositoryUrl());
    result = result && getSourcePath()
        .equals(other.getSourcePath());
    result = result && getDeployedRevision()
        .equals(other.getDeployedRevision());
    result = result && getVersionCase().equals(
        other.getVersionCase());
    if (!result) return false;
    switch (versionCase_) {
      case 3:
        result = result && getBranch()
            .equals(other.getBranch());
        break;
      case 4:
        result = result && getTag()
            .equals(other.getTag());
        break;
      case 5:
        result = result && getRevision()
            .equals(other.getRevision());
        break;
      case 0:
      default:
    }
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + REPOSITORY_URL_FIELD_NUMBER;
    hash = (53 * hash) + getRepositoryUrl().hashCode();
    hash = (37 * hash) + SOURCE_PATH_FIELD_NUMBER;
    hash = (53 * hash) + getSourcePath().hashCode();
    hash = (37 * hash) + DEPLOYED_REVISION_FIELD_NUMBER;
    hash = (53 * hash) + getDeployedRevision().hashCode();
    switch (versionCase_) {
      case 3:
        hash = (37 * hash) + BRANCH_FIELD_NUMBER;
        hash = (53 * hash) + getBranch().hashCode();
        break;
      case 4:
        hash = (37 * hash) + TAG_FIELD_NUMBER;
        hash = (53 * hash) + getTag().hashCode();
        break;
      case 5:
        hash = (37 * hash) + REVISION_FIELD_NUMBER;
        hash = (53 * hash) + getRevision().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.functions.v1beta2.SourceRepository parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.functions.v1beta2.SourceRepository parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.functions.v1beta2.SourceRepository parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.functions.v1beta2.SourceRepository parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.functions.v1beta2.SourceRepository parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.functions.v1beta2.SourceRepository parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.functions.v1beta2.SourceRepository parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.cloud.functions.v1beta2.SourceRepository parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.functions.v1beta2.SourceRepository parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.functions.v1beta2.SourceRepository parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.cloud.functions.v1beta2.SourceRepository prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Describes the location of the function source in a remote repository.
   * </pre>
   *
   * Protobuf type {@code google.cloud.functions.v1beta2.SourceRepository}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.cloud.functions.v1beta2.SourceRepository)
      com.google.cloud.functions.v1beta2.SourceRepositoryOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.functions.v1beta2.FunctionsProto.internal_static_google_cloud_functions_v1beta2_SourceRepository_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.functions.v1beta2.FunctionsProto.internal_static_google_cloud_functions_v1beta2_SourceRepository_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.functions.v1beta2.SourceRepository.class, com.google.cloud.functions.v1beta2.SourceRepository.Builder.class);
    }

    // Construct using com.google.cloud.functions.v1beta2.SourceRepository.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      repositoryUrl_ = "";

      sourcePath_ = "";

      deployedRevision_ = "";

      versionCase_ = 0;
      version_ = null;
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.cloud.functions.v1beta2.FunctionsProto.internal_static_google_cloud_functions_v1beta2_SourceRepository_descriptor;
    }

    public com.google.cloud.functions.v1beta2.SourceRepository getDefaultInstanceForType() {
      return com.google.cloud.functions.v1beta2.SourceRepository.getDefaultInstance();
    }

    public com.google.cloud.functions.v1beta2.SourceRepository build() {
      com.google.cloud.functions.v1beta2.SourceRepository result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.google.cloud.functions.v1beta2.SourceRepository buildPartial() {
      com.google.cloud.functions.v1beta2.SourceRepository result = new com.google.cloud.functions.v1beta2.SourceRepository(this);
      result.repositoryUrl_ = repositoryUrl_;
      result.sourcePath_ = sourcePath_;
      if (versionCase_ == 3) {
        result.version_ = version_;
      }
      if (versionCase_ == 4) {
        result.version_ = version_;
      }
      if (versionCase_ == 5) {
        result.version_ = version_;
      }
      result.deployedRevision_ = deployedRevision_;
      result.versionCase_ = versionCase_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.functions.v1beta2.SourceRepository) {
        return mergeFrom((com.google.cloud.functions.v1beta2.SourceRepository)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.functions.v1beta2.SourceRepository other) {
      if (other == com.google.cloud.functions.v1beta2.SourceRepository.getDefaultInstance()) return this;
      if (!other.getRepositoryUrl().isEmpty()) {
        repositoryUrl_ = other.repositoryUrl_;
        onChanged();
      }
      if (!other.getSourcePath().isEmpty()) {
        sourcePath_ = other.sourcePath_;
        onChanged();
      }
      if (!other.getDeployedRevision().isEmpty()) {
        deployedRevision_ = other.deployedRevision_;
        onChanged();
      }
      switch (other.getVersionCase()) {
        case BRANCH: {
          versionCase_ = 3;
          version_ = other.version_;
          onChanged();
          break;
        }
        case TAG: {
          versionCase_ = 4;
          version_ = other.version_;
          onChanged();
          break;
        }
        case REVISION: {
          versionCase_ = 5;
          version_ = other.version_;
          onChanged();
          break;
        }
        case VERSION_NOT_SET: {
          break;
        }
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.cloud.functions.v1beta2.SourceRepository parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.cloud.functions.v1beta2.SourceRepository) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int versionCase_ = 0;
    private java.lang.Object version_;
    public VersionCase
        getVersionCase() {
      return VersionCase.forNumber(
          versionCase_);
    }

    public Builder clearVersion() {
      versionCase_ = 0;
      version_ = null;
      onChanged();
      return this;
    }


    private java.lang.Object repositoryUrl_ = "";
    /**
     * <pre>
     * URL to the hosted repository where the function is defined. Only paths in
     * https://source.developers.google.com domain are supported. The path should
     * contain the name of the repository.
     * </pre>
     *
     * <code>string repository_url = 1;</code>
     */
    public java.lang.String getRepositoryUrl() {
      java.lang.Object ref = repositoryUrl_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        repositoryUrl_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * URL to the hosted repository where the function is defined. Only paths in
     * https://source.developers.google.com domain are supported. The path should
     * contain the name of the repository.
     * </pre>
     *
     * <code>string repository_url = 1;</code>
     */
    public com.google.protobuf.ByteString
        getRepositoryUrlBytes() {
      java.lang.Object ref = repositoryUrl_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        repositoryUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * URL to the hosted repository where the function is defined. Only paths in
     * https://source.developers.google.com domain are supported. The path should
     * contain the name of the repository.
     * </pre>
     *
     * <code>string repository_url = 1;</code>
     */
    public Builder setRepositoryUrl(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      repositoryUrl_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * URL to the hosted repository where the function is defined. Only paths in
     * https://source.developers.google.com domain are supported. The path should
     * contain the name of the repository.
     * </pre>
     *
     * <code>string repository_url = 1;</code>
     */
    public Builder clearRepositoryUrl() {
      
      repositoryUrl_ = getDefaultInstance().getRepositoryUrl();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * URL to the hosted repository where the function is defined. Only paths in
     * https://source.developers.google.com domain are supported. The path should
     * contain the name of the repository.
     * </pre>
     *
     * <code>string repository_url = 1;</code>
     */
    public Builder setRepositoryUrlBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      repositoryUrl_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object sourcePath_ = "";
    /**
     * <pre>
     * The path within the repository where the function is defined. The path
     * should point to the directory where Cloud Functions files are located. Use
     * "/" if the function is defined directly in the root directory of a
     * repository.
     * </pre>
     *
     * <code>string source_path = 2;</code>
     */
    public java.lang.String getSourcePath() {
      java.lang.Object ref = sourcePath_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sourcePath_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The path within the repository where the function is defined. The path
     * should point to the directory where Cloud Functions files are located. Use
     * "/" if the function is defined directly in the root directory of a
     * repository.
     * </pre>
     *
     * <code>string source_path = 2;</code>
     */
    public com.google.protobuf.ByteString
        getSourcePathBytes() {
      java.lang.Object ref = sourcePath_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sourcePath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The path within the repository where the function is defined. The path
     * should point to the directory where Cloud Functions files are located. Use
     * "/" if the function is defined directly in the root directory of a
     * repository.
     * </pre>
     *
     * <code>string source_path = 2;</code>
     */
    public Builder setSourcePath(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      sourcePath_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The path within the repository where the function is defined. The path
     * should point to the directory where Cloud Functions files are located. Use
     * "/" if the function is defined directly in the root directory of a
     * repository.
     * </pre>
     *
     * <code>string source_path = 2;</code>
     */
    public Builder clearSourcePath() {
      
      sourcePath_ = getDefaultInstance().getSourcePath();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The path within the repository where the function is defined. The path
     * should point to the directory where Cloud Functions files are located. Use
     * "/" if the function is defined directly in the root directory of a
     * repository.
     * </pre>
     *
     * <code>string source_path = 2;</code>
     */
    public Builder setSourcePathBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      sourcePath_ = value;
      onChanged();
      return this;
    }

    /**
     * <pre>
     * The name of the branch from which the function should be fetched.
     * </pre>
     *
     * <code>string branch = 3;</code>
     */
    public java.lang.String getBranch() {
      java.lang.Object ref = "";
      if (versionCase_ == 3) {
        ref = version_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (versionCase_ == 3) {
          version_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The name of the branch from which the function should be fetched.
     * </pre>
     *
     * <code>string branch = 3;</code>
     */
    public com.google.protobuf.ByteString
        getBranchBytes() {
      java.lang.Object ref = "";
      if (versionCase_ == 3) {
        ref = version_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (versionCase_ == 3) {
          version_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The name of the branch from which the function should be fetched.
     * </pre>
     *
     * <code>string branch = 3;</code>
     */
    public Builder setBranch(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  versionCase_ = 3;
      version_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the branch from which the function should be fetched.
     * </pre>
     *
     * <code>string branch = 3;</code>
     */
    public Builder clearBranch() {
      if (versionCase_ == 3) {
        versionCase_ = 0;
        version_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * The name of the branch from which the function should be fetched.
     * </pre>
     *
     * <code>string branch = 3;</code>
     */
    public Builder setBranchBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      versionCase_ = 3;
      version_ = value;
      onChanged();
      return this;
    }

    /**
     * <pre>
     * The name of the tag that captures the state of the repository from
     * which the function should be fetched.
     * </pre>
     *
     * <code>string tag = 4;</code>
     */
    public java.lang.String getTag() {
      java.lang.Object ref = "";
      if (versionCase_ == 4) {
        ref = version_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (versionCase_ == 4) {
          version_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The name of the tag that captures the state of the repository from
     * which the function should be fetched.
     * </pre>
     *
     * <code>string tag = 4;</code>
     */
    public com.google.protobuf.ByteString
        getTagBytes() {
      java.lang.Object ref = "";
      if (versionCase_ == 4) {
        ref = version_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (versionCase_ == 4) {
          version_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The name of the tag that captures the state of the repository from
     * which the function should be fetched.
     * </pre>
     *
     * <code>string tag = 4;</code>
     */
    public Builder setTag(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  versionCase_ = 4;
      version_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the tag that captures the state of the repository from
     * which the function should be fetched.
     * </pre>
     *
     * <code>string tag = 4;</code>
     */
    public Builder clearTag() {
      if (versionCase_ == 4) {
        versionCase_ = 0;
        version_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * The name of the tag that captures the state of the repository from
     * which the function should be fetched.
     * </pre>
     *
     * <code>string tag = 4;</code>
     */
    public Builder setTagBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      versionCase_ = 4;
      version_ = value;
      onChanged();
      return this;
    }

    /**
     * <pre>
     * The id of the revision that captures the state of the repository from
     * which the function should be fetched.
     * </pre>
     *
     * <code>string revision = 5;</code>
     */
    public java.lang.String getRevision() {
      java.lang.Object ref = "";
      if (versionCase_ == 5) {
        ref = version_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (versionCase_ == 5) {
          version_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The id of the revision that captures the state of the repository from
     * which the function should be fetched.
     * </pre>
     *
     * <code>string revision = 5;</code>
     */
    public com.google.protobuf.ByteString
        getRevisionBytes() {
      java.lang.Object ref = "";
      if (versionCase_ == 5) {
        ref = version_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (versionCase_ == 5) {
          version_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The id of the revision that captures the state of the repository from
     * which the function should be fetched.
     * </pre>
     *
     * <code>string revision = 5;</code>
     */
    public Builder setRevision(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  versionCase_ = 5;
      version_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The id of the revision that captures the state of the repository from
     * which the function should be fetched.
     * </pre>
     *
     * <code>string revision = 5;</code>
     */
    public Builder clearRevision() {
      if (versionCase_ == 5) {
        versionCase_ = 0;
        version_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * The id of the revision that captures the state of the repository from
     * which the function should be fetched.
     * </pre>
     *
     * <code>string revision = 5;</code>
     */
    public Builder setRevisionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      versionCase_ = 5;
      version_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object deployedRevision_ = "";
    /**
     * <pre>
     * Output only. The id of the revision that was resolved at the moment of
     * function creation or update. For example when a user deployed from a
     * branch, it will be the revision id of the latest change on this branch at
     * that time. If user deployed from revision then this value will be always
     * equal to the revision specified by the user.
     * </pre>
     *
     * <code>string deployed_revision = 6;</code>
     */
    public java.lang.String getDeployedRevision() {
      java.lang.Object ref = deployedRevision_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        deployedRevision_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Output only. The id of the revision that was resolved at the moment of
     * function creation or update. For example when a user deployed from a
     * branch, it will be the revision id of the latest change on this branch at
     * that time. If user deployed from revision then this value will be always
     * equal to the revision specified by the user.
     * </pre>
     *
     * <code>string deployed_revision = 6;</code>
     */
    public com.google.protobuf.ByteString
        getDeployedRevisionBytes() {
      java.lang.Object ref = deployedRevision_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        deployedRevision_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Output only. The id of the revision that was resolved at the moment of
     * function creation or update. For example when a user deployed from a
     * branch, it will be the revision id of the latest change on this branch at
     * that time. If user deployed from revision then this value will be always
     * equal to the revision specified by the user.
     * </pre>
     *
     * <code>string deployed_revision = 6;</code>
     */
    public Builder setDeployedRevision(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      deployedRevision_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Output only. The id of the revision that was resolved at the moment of
     * function creation or update. For example when a user deployed from a
     * branch, it will be the revision id of the latest change on this branch at
     * that time. If user deployed from revision then this value will be always
     * equal to the revision specified by the user.
     * </pre>
     *
     * <code>string deployed_revision = 6;</code>
     */
    public Builder clearDeployedRevision() {
      
      deployedRevision_ = getDefaultInstance().getDeployedRevision();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Output only. The id of the revision that was resolved at the moment of
     * function creation or update. For example when a user deployed from a
     * branch, it will be the revision id of the latest change on this branch at
     * that time. If user deployed from revision then this value will be always
     * equal to the revision specified by the user.
     * </pre>
     *
     * <code>string deployed_revision = 6;</code>
     */
    public Builder setDeployedRevisionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      deployedRevision_ = value;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:google.cloud.functions.v1beta2.SourceRepository)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.functions.v1beta2.SourceRepository)
  private static final com.google.cloud.functions.v1beta2.SourceRepository DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.cloud.functions.v1beta2.SourceRepository();
  }

  public static com.google.cloud.functions.v1beta2.SourceRepository getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SourceRepository>
      PARSER = new com.google.protobuf.AbstractParser<SourceRepository>() {
    public SourceRepository parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new SourceRepository(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<SourceRepository> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SourceRepository> getParserForType() {
    return PARSER;
  }

  public com.google.cloud.functions.v1beta2.SourceRepository getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

