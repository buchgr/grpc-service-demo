// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/genomics/v1/variants.proto

package com.google.genomics.v1;

/**
 * <pre>
 * The stream variants request.
 * </pre>
 *
 * Protobuf type {@code google.genomics.v1.StreamVariantsRequest}
 */
public  final class StreamVariantsRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.genomics.v1.StreamVariantsRequest)
    StreamVariantsRequestOrBuilder {
  // Use StreamVariantsRequest.newBuilder() to construct.
  private StreamVariantsRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private StreamVariantsRequest() {
    projectId_ = "";
    variantSetId_ = "";
    callSetIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    referenceName_ = "";
    start_ = 0L;
    end_ = 0L;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private StreamVariantsRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            projectId_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            variantSetId_ = s;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              callSetIds_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000004;
            }
            callSetIds_.add(s);
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();

            referenceName_ = s;
            break;
          }
          case 40: {

            start_ = input.readInt64();
            break;
          }
          case 48: {

            end_ = input.readInt64();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
        callSetIds_ = callSetIds_.getUnmodifiableView();
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.genomics.v1.VariantsProto.internal_static_google_genomics_v1_StreamVariantsRequest_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.genomics.v1.VariantsProto.internal_static_google_genomics_v1_StreamVariantsRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.genomics.v1.StreamVariantsRequest.class, com.google.genomics.v1.StreamVariantsRequest.Builder.class);
  }

  private int bitField0_;
  public static final int PROJECT_ID_FIELD_NUMBER = 1;
  private volatile java.lang.Object projectId_;
  /**
   * <pre>
   * The Google Cloud project ID which will be billed
   * for this access. The caller must have WRITE access to this project.
   * Required.
   * </pre>
   *
   * <code>string project_id = 1;</code>
   */
  public java.lang.String getProjectId() {
    java.lang.Object ref = projectId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      projectId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The Google Cloud project ID which will be billed
   * for this access. The caller must have WRITE access to this project.
   * Required.
   * </pre>
   *
   * <code>string project_id = 1;</code>
   */
  public com.google.protobuf.ByteString
      getProjectIdBytes() {
    java.lang.Object ref = projectId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      projectId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int VARIANT_SET_ID_FIELD_NUMBER = 2;
  private volatile java.lang.Object variantSetId_;
  /**
   * <pre>
   * The variant set ID from which to stream variants.
   * </pre>
   *
   * <code>string variant_set_id = 2;</code>
   */
  public java.lang.String getVariantSetId() {
    java.lang.Object ref = variantSetId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      variantSetId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The variant set ID from which to stream variants.
   * </pre>
   *
   * <code>string variant_set_id = 2;</code>
   */
  public com.google.protobuf.ByteString
      getVariantSetIdBytes() {
    java.lang.Object ref = variantSetId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      variantSetId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CALL_SET_IDS_FIELD_NUMBER = 3;
  private com.google.protobuf.LazyStringList callSetIds_;
  /**
   * <pre>
   * Only return variant calls which belong to call sets with these IDs.
   * Leaving this blank returns all variant calls.
   * </pre>
   *
   * <code>repeated string call_set_ids = 3;</code>
   */
  public com.google.protobuf.ProtocolStringList
      getCallSetIdsList() {
    return callSetIds_;
  }
  /**
   * <pre>
   * Only return variant calls which belong to call sets with these IDs.
   * Leaving this blank returns all variant calls.
   * </pre>
   *
   * <code>repeated string call_set_ids = 3;</code>
   */
  public int getCallSetIdsCount() {
    return callSetIds_.size();
  }
  /**
   * <pre>
   * Only return variant calls which belong to call sets with these IDs.
   * Leaving this blank returns all variant calls.
   * </pre>
   *
   * <code>repeated string call_set_ids = 3;</code>
   */
  public java.lang.String getCallSetIds(int index) {
    return callSetIds_.get(index);
  }
  /**
   * <pre>
   * Only return variant calls which belong to call sets with these IDs.
   * Leaving this blank returns all variant calls.
   * </pre>
   *
   * <code>repeated string call_set_ids = 3;</code>
   */
  public com.google.protobuf.ByteString
      getCallSetIdsBytes(int index) {
    return callSetIds_.getByteString(index);
  }

  public static final int REFERENCE_NAME_FIELD_NUMBER = 4;
  private volatile java.lang.Object referenceName_;
  /**
   * <pre>
   * Required. Only return variants in this reference sequence.
   * </pre>
   *
   * <code>string reference_name = 4;</code>
   */
  public java.lang.String getReferenceName() {
    java.lang.Object ref = referenceName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      referenceName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Required. Only return variants in this reference sequence.
   * </pre>
   *
   * <code>string reference_name = 4;</code>
   */
  public com.google.protobuf.ByteString
      getReferenceNameBytes() {
    java.lang.Object ref = referenceName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      referenceName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int START_FIELD_NUMBER = 5;
  private long start_;
  /**
   * <pre>
   * The beginning of the window (0-based, inclusive) for which
   * overlapping variants should be returned.
   * </pre>
   *
   * <code>int64 start = 5;</code>
   */
  public long getStart() {
    return start_;
  }

  public static final int END_FIELD_NUMBER = 6;
  private long end_;
  /**
   * <pre>
   * The end of the window (0-based, exclusive) for which overlapping
   * variants should be returned.
   * </pre>
   *
   * <code>int64 end = 6;</code>
   */
  public long getEnd() {
    return end_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getProjectIdBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, projectId_);
    }
    if (!getVariantSetIdBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, variantSetId_);
    }
    for (int i = 0; i < callSetIds_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, callSetIds_.getRaw(i));
    }
    if (!getReferenceNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, referenceName_);
    }
    if (start_ != 0L) {
      output.writeInt64(5, start_);
    }
    if (end_ != 0L) {
      output.writeInt64(6, end_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getProjectIdBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, projectId_);
    }
    if (!getVariantSetIdBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, variantSetId_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < callSetIds_.size(); i++) {
        dataSize += computeStringSizeNoTag(callSetIds_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getCallSetIdsList().size();
    }
    if (!getReferenceNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, referenceName_);
    }
    if (start_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(5, start_);
    }
    if (end_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(6, end_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.genomics.v1.StreamVariantsRequest)) {
      return super.equals(obj);
    }
    com.google.genomics.v1.StreamVariantsRequest other = (com.google.genomics.v1.StreamVariantsRequest) obj;

    boolean result = true;
    result = result && getProjectId()
        .equals(other.getProjectId());
    result = result && getVariantSetId()
        .equals(other.getVariantSetId());
    result = result && getCallSetIdsList()
        .equals(other.getCallSetIdsList());
    result = result && getReferenceName()
        .equals(other.getReferenceName());
    result = result && (getStart()
        == other.getStart());
    result = result && (getEnd()
        == other.getEnd());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + PROJECT_ID_FIELD_NUMBER;
    hash = (53 * hash) + getProjectId().hashCode();
    hash = (37 * hash) + VARIANT_SET_ID_FIELD_NUMBER;
    hash = (53 * hash) + getVariantSetId().hashCode();
    if (getCallSetIdsCount() > 0) {
      hash = (37 * hash) + CALL_SET_IDS_FIELD_NUMBER;
      hash = (53 * hash) + getCallSetIdsList().hashCode();
    }
    hash = (37 * hash) + REFERENCE_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getReferenceName().hashCode();
    hash = (37 * hash) + START_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getStart());
    hash = (37 * hash) + END_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getEnd());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.genomics.v1.StreamVariantsRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.genomics.v1.StreamVariantsRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.genomics.v1.StreamVariantsRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.genomics.v1.StreamVariantsRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.genomics.v1.StreamVariantsRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.genomics.v1.StreamVariantsRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.genomics.v1.StreamVariantsRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.genomics.v1.StreamVariantsRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.genomics.v1.StreamVariantsRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.genomics.v1.StreamVariantsRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.genomics.v1.StreamVariantsRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * The stream variants request.
   * </pre>
   *
   * Protobuf type {@code google.genomics.v1.StreamVariantsRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.genomics.v1.StreamVariantsRequest)
      com.google.genomics.v1.StreamVariantsRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.genomics.v1.VariantsProto.internal_static_google_genomics_v1_StreamVariantsRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.genomics.v1.VariantsProto.internal_static_google_genomics_v1_StreamVariantsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.genomics.v1.StreamVariantsRequest.class, com.google.genomics.v1.StreamVariantsRequest.Builder.class);
    }

    // Construct using com.google.genomics.v1.StreamVariantsRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      projectId_ = "";

      variantSetId_ = "";

      callSetIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000004);
      referenceName_ = "";

      start_ = 0L;

      end_ = 0L;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.genomics.v1.VariantsProto.internal_static_google_genomics_v1_StreamVariantsRequest_descriptor;
    }

    public com.google.genomics.v1.StreamVariantsRequest getDefaultInstanceForType() {
      return com.google.genomics.v1.StreamVariantsRequest.getDefaultInstance();
    }

    public com.google.genomics.v1.StreamVariantsRequest build() {
      com.google.genomics.v1.StreamVariantsRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.google.genomics.v1.StreamVariantsRequest buildPartial() {
      com.google.genomics.v1.StreamVariantsRequest result = new com.google.genomics.v1.StreamVariantsRequest(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.projectId_ = projectId_;
      result.variantSetId_ = variantSetId_;
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        callSetIds_ = callSetIds_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000004);
      }
      result.callSetIds_ = callSetIds_;
      result.referenceName_ = referenceName_;
      result.start_ = start_;
      result.end_ = end_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.genomics.v1.StreamVariantsRequest) {
        return mergeFrom((com.google.genomics.v1.StreamVariantsRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.genomics.v1.StreamVariantsRequest other) {
      if (other == com.google.genomics.v1.StreamVariantsRequest.getDefaultInstance()) return this;
      if (!other.getProjectId().isEmpty()) {
        projectId_ = other.projectId_;
        onChanged();
      }
      if (!other.getVariantSetId().isEmpty()) {
        variantSetId_ = other.variantSetId_;
        onChanged();
      }
      if (!other.callSetIds_.isEmpty()) {
        if (callSetIds_.isEmpty()) {
          callSetIds_ = other.callSetIds_;
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          ensureCallSetIdsIsMutable();
          callSetIds_.addAll(other.callSetIds_);
        }
        onChanged();
      }
      if (!other.getReferenceName().isEmpty()) {
        referenceName_ = other.referenceName_;
        onChanged();
      }
      if (other.getStart() != 0L) {
        setStart(other.getStart());
      }
      if (other.getEnd() != 0L) {
        setEnd(other.getEnd());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.genomics.v1.StreamVariantsRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.genomics.v1.StreamVariantsRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object projectId_ = "";
    /**
     * <pre>
     * The Google Cloud project ID which will be billed
     * for this access. The caller must have WRITE access to this project.
     * Required.
     * </pre>
     *
     * <code>string project_id = 1;</code>
     */
    public java.lang.String getProjectId() {
      java.lang.Object ref = projectId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        projectId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The Google Cloud project ID which will be billed
     * for this access. The caller must have WRITE access to this project.
     * Required.
     * </pre>
     *
     * <code>string project_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getProjectIdBytes() {
      java.lang.Object ref = projectId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        projectId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The Google Cloud project ID which will be billed
     * for this access. The caller must have WRITE access to this project.
     * Required.
     * </pre>
     *
     * <code>string project_id = 1;</code>
     */
    public Builder setProjectId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      projectId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The Google Cloud project ID which will be billed
     * for this access. The caller must have WRITE access to this project.
     * Required.
     * </pre>
     *
     * <code>string project_id = 1;</code>
     */
    public Builder clearProjectId() {
      
      projectId_ = getDefaultInstance().getProjectId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The Google Cloud project ID which will be billed
     * for this access. The caller must have WRITE access to this project.
     * Required.
     * </pre>
     *
     * <code>string project_id = 1;</code>
     */
    public Builder setProjectIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      projectId_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object variantSetId_ = "";
    /**
     * <pre>
     * The variant set ID from which to stream variants.
     * </pre>
     *
     * <code>string variant_set_id = 2;</code>
     */
    public java.lang.String getVariantSetId() {
      java.lang.Object ref = variantSetId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        variantSetId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The variant set ID from which to stream variants.
     * </pre>
     *
     * <code>string variant_set_id = 2;</code>
     */
    public com.google.protobuf.ByteString
        getVariantSetIdBytes() {
      java.lang.Object ref = variantSetId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        variantSetId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The variant set ID from which to stream variants.
     * </pre>
     *
     * <code>string variant_set_id = 2;</code>
     */
    public Builder setVariantSetId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      variantSetId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The variant set ID from which to stream variants.
     * </pre>
     *
     * <code>string variant_set_id = 2;</code>
     */
    public Builder clearVariantSetId() {
      
      variantSetId_ = getDefaultInstance().getVariantSetId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The variant set ID from which to stream variants.
     * </pre>
     *
     * <code>string variant_set_id = 2;</code>
     */
    public Builder setVariantSetIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      variantSetId_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList callSetIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureCallSetIdsIsMutable() {
      if (!((bitField0_ & 0x00000004) == 0x00000004)) {
        callSetIds_ = new com.google.protobuf.LazyStringArrayList(callSetIds_);
        bitField0_ |= 0x00000004;
       }
    }
    /**
     * <pre>
     * Only return variant calls which belong to call sets with these IDs.
     * Leaving this blank returns all variant calls.
     * </pre>
     *
     * <code>repeated string call_set_ids = 3;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getCallSetIdsList() {
      return callSetIds_.getUnmodifiableView();
    }
    /**
     * <pre>
     * Only return variant calls which belong to call sets with these IDs.
     * Leaving this blank returns all variant calls.
     * </pre>
     *
     * <code>repeated string call_set_ids = 3;</code>
     */
    public int getCallSetIdsCount() {
      return callSetIds_.size();
    }
    /**
     * <pre>
     * Only return variant calls which belong to call sets with these IDs.
     * Leaving this blank returns all variant calls.
     * </pre>
     *
     * <code>repeated string call_set_ids = 3;</code>
     */
    public java.lang.String getCallSetIds(int index) {
      return callSetIds_.get(index);
    }
    /**
     * <pre>
     * Only return variant calls which belong to call sets with these IDs.
     * Leaving this blank returns all variant calls.
     * </pre>
     *
     * <code>repeated string call_set_ids = 3;</code>
     */
    public com.google.protobuf.ByteString
        getCallSetIdsBytes(int index) {
      return callSetIds_.getByteString(index);
    }
    /**
     * <pre>
     * Only return variant calls which belong to call sets with these IDs.
     * Leaving this blank returns all variant calls.
     * </pre>
     *
     * <code>repeated string call_set_ids = 3;</code>
     */
    public Builder setCallSetIds(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureCallSetIdsIsMutable();
      callSetIds_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Only return variant calls which belong to call sets with these IDs.
     * Leaving this blank returns all variant calls.
     * </pre>
     *
     * <code>repeated string call_set_ids = 3;</code>
     */
    public Builder addCallSetIds(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureCallSetIdsIsMutable();
      callSetIds_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Only return variant calls which belong to call sets with these IDs.
     * Leaving this blank returns all variant calls.
     * </pre>
     *
     * <code>repeated string call_set_ids = 3;</code>
     */
    public Builder addAllCallSetIds(
        java.lang.Iterable<java.lang.String> values) {
      ensureCallSetIdsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, callSetIds_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Only return variant calls which belong to call sets with these IDs.
     * Leaving this blank returns all variant calls.
     * </pre>
     *
     * <code>repeated string call_set_ids = 3;</code>
     */
    public Builder clearCallSetIds() {
      callSetIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Only return variant calls which belong to call sets with these IDs.
     * Leaving this blank returns all variant calls.
     * </pre>
     *
     * <code>repeated string call_set_ids = 3;</code>
     */
    public Builder addCallSetIdsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureCallSetIdsIsMutable();
      callSetIds_.add(value);
      onChanged();
      return this;
    }

    private java.lang.Object referenceName_ = "";
    /**
     * <pre>
     * Required. Only return variants in this reference sequence.
     * </pre>
     *
     * <code>string reference_name = 4;</code>
     */
    public java.lang.String getReferenceName() {
      java.lang.Object ref = referenceName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        referenceName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Required. Only return variants in this reference sequence.
     * </pre>
     *
     * <code>string reference_name = 4;</code>
     */
    public com.google.protobuf.ByteString
        getReferenceNameBytes() {
      java.lang.Object ref = referenceName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        referenceName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Required. Only return variants in this reference sequence.
     * </pre>
     *
     * <code>string reference_name = 4;</code>
     */
    public Builder setReferenceName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      referenceName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. Only return variants in this reference sequence.
     * </pre>
     *
     * <code>string reference_name = 4;</code>
     */
    public Builder clearReferenceName() {
      
      referenceName_ = getDefaultInstance().getReferenceName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. Only return variants in this reference sequence.
     * </pre>
     *
     * <code>string reference_name = 4;</code>
     */
    public Builder setReferenceNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      referenceName_ = value;
      onChanged();
      return this;
    }

    private long start_ ;
    /**
     * <pre>
     * The beginning of the window (0-based, inclusive) for which
     * overlapping variants should be returned.
     * </pre>
     *
     * <code>int64 start = 5;</code>
     */
    public long getStart() {
      return start_;
    }
    /**
     * <pre>
     * The beginning of the window (0-based, inclusive) for which
     * overlapping variants should be returned.
     * </pre>
     *
     * <code>int64 start = 5;</code>
     */
    public Builder setStart(long value) {
      
      start_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The beginning of the window (0-based, inclusive) for which
     * overlapping variants should be returned.
     * </pre>
     *
     * <code>int64 start = 5;</code>
     */
    public Builder clearStart() {
      
      start_ = 0L;
      onChanged();
      return this;
    }

    private long end_ ;
    /**
     * <pre>
     * The end of the window (0-based, exclusive) for which overlapping
     * variants should be returned.
     * </pre>
     *
     * <code>int64 end = 6;</code>
     */
    public long getEnd() {
      return end_;
    }
    /**
     * <pre>
     * The end of the window (0-based, exclusive) for which overlapping
     * variants should be returned.
     * </pre>
     *
     * <code>int64 end = 6;</code>
     */
    public Builder setEnd(long value) {
      
      end_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The end of the window (0-based, exclusive) for which overlapping
     * variants should be returned.
     * </pre>
     *
     * <code>int64 end = 6;</code>
     */
    public Builder clearEnd() {
      
      end_ = 0L;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:google.genomics.v1.StreamVariantsRequest)
  }

  // @@protoc_insertion_point(class_scope:google.genomics.v1.StreamVariantsRequest)
  private static final com.google.genomics.v1.StreamVariantsRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.genomics.v1.StreamVariantsRequest();
  }

  public static com.google.genomics.v1.StreamVariantsRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<StreamVariantsRequest>
      PARSER = new com.google.protobuf.AbstractParser<StreamVariantsRequest>() {
    public StreamVariantsRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new StreamVariantsRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<StreamVariantsRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<StreamVariantsRequest> getParserForType() {
    return PARSER;
  }

  public com.google.genomics.v1.StreamVariantsRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

