// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/tracing/trace.proto

package com.google.tracing.v1;

/**
 * <pre>
 * A span represents a single operation within a trace. Spans can be nested
 * and form a trace tree. Often, a trace contains a root span that describes the
 * end-to-end latency and, optionally, one or more subspans for
 * its sub-operations. Spans do not need to be contiguous. There may be gaps
 * between spans in a trace.
 * </pre>
 *
 * Protobuf type {@code google.tracing.v1.Span}
 */
public  final class Span extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.tracing.v1.Span)
    SpanOrBuilder {
  // Use Span.newBuilder() to construct.
  private Span(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Span() {
    id_ = 0L;
    name_ = "";
    parentId_ = 0L;
    timeEvents_ = java.util.Collections.emptyList();
    links_ = java.util.Collections.emptyList();
    hasRemoteParent_ = false;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private Span(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 9: {

            id_ = input.readFixed64();
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            name_ = s;
            break;
          }
          case 25: {

            parentId_ = input.readFixed64();
            break;
          }
          case 34: {
            com.google.protobuf.Timestamp.Builder subBuilder = null;
            if (localStartTime_ != null) {
              subBuilder = localStartTime_.toBuilder();
            }
            localStartTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(localStartTime_);
              localStartTime_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            com.google.protobuf.Timestamp.Builder subBuilder = null;
            if (localEndTime_ != null) {
              subBuilder = localEndTime_.toBuilder();
            }
            localEndTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(localEndTime_);
              localEndTime_ = subBuilder.buildPartial();
            }

            break;
          }
          case 50: {
            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
              labels_ = com.google.protobuf.MapField.newMapField(
                  LabelsDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000020;
            }
            com.google.protobuf.MapEntry<java.lang.String, com.google.tracing.v1.LabelValue>
            labels__ = input.readMessage(
                LabelsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            labels_.getMutableMap().put(
                labels__.getKey(), labels__.getValue());
            break;
          }
          case 58: {
            com.google.tracing.v1.StackTrace.Builder subBuilder = null;
            if (stackTrace_ != null) {
              subBuilder = stackTrace_.toBuilder();
            }
            stackTrace_ = input.readMessage(com.google.tracing.v1.StackTrace.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(stackTrace_);
              stackTrace_ = subBuilder.buildPartial();
            }

            break;
          }
          case 66: {
            if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
              timeEvents_ = new java.util.ArrayList<com.google.tracing.v1.Span.TimeEvent>();
              mutable_bitField0_ |= 0x00000080;
            }
            timeEvents_.add(
                input.readMessage(com.google.tracing.v1.Span.TimeEvent.parser(), extensionRegistry));
            break;
          }
          case 74: {
            if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
              links_ = new java.util.ArrayList<com.google.tracing.v1.Span.Link>();
              mutable_bitField0_ |= 0x00000100;
            }
            links_.add(
                input.readMessage(com.google.tracing.v1.Span.Link.parser(), extensionRegistry));
            break;
          }
          case 82: {
            com.google.rpc.Status.Builder subBuilder = null;
            if (status_ != null) {
              subBuilder = status_.toBuilder();
            }
            status_ = input.readMessage(com.google.rpc.Status.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(status_);
              status_ = subBuilder.buildPartial();
            }

            break;
          }
          case 88: {

            hasRemoteParent_ = input.readBool();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
        timeEvents_ = java.util.Collections.unmodifiableList(timeEvents_);
      }
      if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
        links_ = java.util.Collections.unmodifiableList(links_);
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.tracing.v1.TraceProto.internal_static_google_tracing_v1_Span_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 6:
        return internalGetLabels();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.tracing.v1.TraceProto.internal_static_google_tracing_v1_Span_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.tracing.v1.Span.class, com.google.tracing.v1.Span.Builder.class);
  }

  public interface TimeEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.tracing.v1.Span.TimeEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The local machine absolute timestamp when this event happened.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp local_time = 1;</code>
     */
    boolean hasLocalTime();
    /**
     * <pre>
     * The local machine absolute timestamp when this event happened.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp local_time = 1;</code>
     */
    com.google.protobuf.Timestamp getLocalTime();
    /**
     * <pre>
     * The local machine absolute timestamp when this event happened.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp local_time = 1;</code>
     */
    com.google.protobuf.TimestampOrBuilder getLocalTimeOrBuilder();

    /**
     * <pre>
     * Optional field for user supplied &lt;string, LabelValue&gt; map
     * </pre>
     *
     * <code>.google.tracing.v1.Span.TimeEvent.Annotation annotation = 2;</code>
     */
    com.google.tracing.v1.Span.TimeEvent.Annotation getAnnotation();
    /**
     * <pre>
     * Optional field for user supplied &lt;string, LabelValue&gt; map
     * </pre>
     *
     * <code>.google.tracing.v1.Span.TimeEvent.Annotation annotation = 2;</code>
     */
    com.google.tracing.v1.Span.TimeEvent.AnnotationOrBuilder getAnnotationOrBuilder();

    /**
     * <pre>
     * Optional field that can be used only for network events.
     * </pre>
     *
     * <code>.google.tracing.v1.Span.TimeEvent.NetworkEvent network_event = 3;</code>
     */
    com.google.tracing.v1.Span.TimeEvent.NetworkEvent getNetworkEvent();
    /**
     * <pre>
     * Optional field that can be used only for network events.
     * </pre>
     *
     * <code>.google.tracing.v1.Span.TimeEvent.NetworkEvent network_event = 3;</code>
     */
    com.google.tracing.v1.Span.TimeEvent.NetworkEventOrBuilder getNetworkEventOrBuilder();

    public com.google.tracing.v1.Span.TimeEvent.ValueCase getValueCase();
  }
  /**
   * <pre>
   * A time-stamped annotation in the Span.
   * </pre>
   *
   * Protobuf type {@code google.tracing.v1.Span.TimeEvent}
   */
  public  static final class TimeEvent extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.tracing.v1.Span.TimeEvent)
      TimeEventOrBuilder {
    // Use TimeEvent.newBuilder() to construct.
    private TimeEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TimeEvent() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TimeEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (localTime_ != null) {
                subBuilder = localTime_.toBuilder();
              }
              localTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(localTime_);
                localTime_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              com.google.tracing.v1.Span.TimeEvent.Annotation.Builder subBuilder = null;
              if (valueCase_ == 2) {
                subBuilder = ((com.google.tracing.v1.Span.TimeEvent.Annotation) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.google.tracing.v1.Span.TimeEvent.Annotation.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.google.tracing.v1.Span.TimeEvent.Annotation) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 2;
              break;
            }
            case 26: {
              com.google.tracing.v1.Span.TimeEvent.NetworkEvent.Builder subBuilder = null;
              if (valueCase_ == 3) {
                subBuilder = ((com.google.tracing.v1.Span.TimeEvent.NetworkEvent) value_).toBuilder();
              }
              value_ =
                  input.readMessage(com.google.tracing.v1.Span.TimeEvent.NetworkEvent.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.google.tracing.v1.Span.TimeEvent.NetworkEvent) value_);
                value_ = subBuilder.buildPartial();
              }
              valueCase_ = 3;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.tracing.v1.TraceProto.internal_static_google_tracing_v1_Span_TimeEvent_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.tracing.v1.TraceProto.internal_static_google_tracing_v1_Span_TimeEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.tracing.v1.Span.TimeEvent.class, com.google.tracing.v1.Span.TimeEvent.Builder.class);
    }

    public interface AnnotationOrBuilder extends
        // @@protoc_insertion_point(interface_extends:google.tracing.v1.Span.TimeEvent.Annotation)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * A user-supplied message describing the event.
       * </pre>
       *
       * <code>string description = 1;</code>
       */
      java.lang.String getDescription();
      /**
       * <pre>
       * A user-supplied message describing the event.
       * </pre>
       *
       * <code>string description = 1;</code>
       */
      com.google.protobuf.ByteString
          getDescriptionBytes();

      /**
       * <pre>
       * A set of labels on the annotation.
       * </pre>
       *
       * <code>map&lt;string, .google.tracing.v1.LabelValue&gt; labels = 2;</code>
       */
      int getLabelsCount();
      /**
       * <pre>
       * A set of labels on the annotation.
       * </pre>
       *
       * <code>map&lt;string, .google.tracing.v1.LabelValue&gt; labels = 2;</code>
       */
      boolean containsLabels(
          java.lang.String key);
      /**
       * Use {@link #getLabelsMap()} instead.
       */
      @java.lang.Deprecated
      java.util.Map<java.lang.String, com.google.tracing.v1.LabelValue>
      getLabels();
      /**
       * <pre>
       * A set of labels on the annotation.
       * </pre>
       *
       * <code>map&lt;string, .google.tracing.v1.LabelValue&gt; labels = 2;</code>
       */
      java.util.Map<java.lang.String, com.google.tracing.v1.LabelValue>
      getLabelsMap();
      /**
       * <pre>
       * A set of labels on the annotation.
       * </pre>
       *
       * <code>map&lt;string, .google.tracing.v1.LabelValue&gt; labels = 2;</code>
       */

      com.google.tracing.v1.LabelValue getLabelsOrDefault(
          java.lang.String key,
          com.google.tracing.v1.LabelValue defaultValue);
      /**
       * <pre>
       * A set of labels on the annotation.
       * </pre>
       *
       * <code>map&lt;string, .google.tracing.v1.LabelValue&gt; labels = 2;</code>
       */

      com.google.tracing.v1.LabelValue getLabelsOrThrow(
          java.lang.String key);
    }
    /**
     * <pre>
     * Text annotation with a set of labels.
     * </pre>
     *
     * Protobuf type {@code google.tracing.v1.Span.TimeEvent.Annotation}
     */
    public  static final class Annotation extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:google.tracing.v1.Span.TimeEvent.Annotation)
        AnnotationOrBuilder {
      // Use Annotation.newBuilder() to construct.
      private Annotation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Annotation() {
        description_ = "";
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Annotation(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                description_ = s;
                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  labels_ = com.google.protobuf.MapField.newMapField(
                      LabelsDefaultEntryHolder.defaultEntry);
                  mutable_bitField0_ |= 0x00000002;
                }
                com.google.protobuf.MapEntry<java.lang.String, com.google.tracing.v1.LabelValue>
                labels__ = input.readMessage(
                    LabelsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                labels_.getMutableMap().put(
                    labels__.getKey(), labels__.getValue());
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.tracing.v1.TraceProto.internal_static_google_tracing_v1_Span_TimeEvent_Annotation_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetLabels();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.tracing.v1.TraceProto.internal_static_google_tracing_v1_Span_TimeEvent_Annotation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.tracing.v1.Span.TimeEvent.Annotation.class, com.google.tracing.v1.Span.TimeEvent.Annotation.Builder.class);
      }

      private int bitField0_;
      public static final int DESCRIPTION_FIELD_NUMBER = 1;
      private volatile java.lang.Object description_;
      /**
       * <pre>
       * A user-supplied message describing the event.
       * </pre>
       *
       * <code>string description = 1;</code>
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * A user-supplied message describing the event.
       * </pre>
       *
       * <code>string description = 1;</code>
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int LABELS_FIELD_NUMBER = 2;
      private static final class LabelsDefaultEntryHolder {
        static final com.google.protobuf.MapEntry<
            java.lang.String, com.google.tracing.v1.LabelValue> defaultEntry =
                com.google.protobuf.MapEntry
                .<java.lang.String, com.google.tracing.v1.LabelValue>newDefaultInstance(
                    com.google.tracing.v1.TraceProto.internal_static_google_tracing_v1_Span_TimeEvent_Annotation_LabelsEntry_descriptor, 
                    com.google.protobuf.WireFormat.FieldType.STRING,
                    "",
                    com.google.protobuf.WireFormat.FieldType.MESSAGE,
                    com.google.tracing.v1.LabelValue.getDefaultInstance());
      }
      private com.google.protobuf.MapField<
          java.lang.String, com.google.tracing.v1.LabelValue> labels_;
      private com.google.protobuf.MapField<java.lang.String, com.google.tracing.v1.LabelValue>
      internalGetLabels() {
        if (labels_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              LabelsDefaultEntryHolder.defaultEntry);
        }
        return labels_;
      }

      public int getLabelsCount() {
        return internalGetLabels().getMap().size();
      }
      /**
       * <pre>
       * A set of labels on the annotation.
       * </pre>
       *
       * <code>map&lt;string, .google.tracing.v1.LabelValue&gt; labels = 2;</code>
       */

      public boolean containsLabels(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetLabels().getMap().containsKey(key);
      }
      /**
       * Use {@link #getLabelsMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.google.tracing.v1.LabelValue> getLabels() {
        return getLabelsMap();
      }
      /**
       * <pre>
       * A set of labels on the annotation.
       * </pre>
       *
       * <code>map&lt;string, .google.tracing.v1.LabelValue&gt; labels = 2;</code>
       */

      public java.util.Map<java.lang.String, com.google.tracing.v1.LabelValue> getLabelsMap() {
        return internalGetLabels().getMap();
      }
      /**
       * <pre>
       * A set of labels on the annotation.
       * </pre>
       *
       * <code>map&lt;string, .google.tracing.v1.LabelValue&gt; labels = 2;</code>
       */

      public com.google.tracing.v1.LabelValue getLabelsOrDefault(
          java.lang.String key,
          com.google.tracing.v1.LabelValue defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, com.google.tracing.v1.LabelValue> map =
            internalGetLabels().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * A set of labels on the annotation.
       * </pre>
       *
       * <code>map&lt;string, .google.tracing.v1.LabelValue&gt; labels = 2;</code>
       */

      public com.google.tracing.v1.LabelValue getLabelsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, com.google.tracing.v1.LabelValue> map =
            internalGetLabels().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!getDescriptionBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, description_);
        }
        com.google.protobuf.GeneratedMessageV3
          .serializeStringMapTo(
            output,
            internalGetLabels(),
            LabelsDefaultEntryHolder.defaultEntry,
            2);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!getDescriptionBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, description_);
        }
        for (java.util.Map.Entry<java.lang.String, com.google.tracing.v1.LabelValue> entry
             : internalGetLabels().getMap().entrySet()) {
          com.google.protobuf.MapEntry<java.lang.String, com.google.tracing.v1.LabelValue>
          labels__ = LabelsDefaultEntryHolder.defaultEntry.newBuilderForType()
              .setKey(entry.getKey())
              .setValue(entry.getValue())
              .build();
          size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(2, labels__);
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.google.tracing.v1.Span.TimeEvent.Annotation)) {
          return super.equals(obj);
        }
        com.google.tracing.v1.Span.TimeEvent.Annotation other = (com.google.tracing.v1.Span.TimeEvent.Annotation) obj;

        boolean result = true;
        result = result && getDescription()
            .equals(other.getDescription());
        result = result && internalGetLabels().equals(
            other.internalGetLabels());
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
        hash = (53 * hash) + getDescription().hashCode();
        if (!internalGetLabels().getMap().isEmpty()) {
          hash = (37 * hash) + LABELS_FIELD_NUMBER;
          hash = (53 * hash) + internalGetLabels().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.google.tracing.v1.Span.TimeEvent.Annotation parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.google.tracing.v1.Span.TimeEvent.Annotation parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.google.tracing.v1.Span.TimeEvent.Annotation parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.google.tracing.v1.Span.TimeEvent.Annotation parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.google.tracing.v1.Span.TimeEvent.Annotation parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.google.tracing.v1.Span.TimeEvent.Annotation parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.google.tracing.v1.Span.TimeEvent.Annotation parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.google.tracing.v1.Span.TimeEvent.Annotation parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.google.tracing.v1.Span.TimeEvent.Annotation parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.google.tracing.v1.Span.TimeEvent.Annotation parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.google.tracing.v1.Span.TimeEvent.Annotation prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Text annotation with a set of labels.
       * </pre>
       *
       * Protobuf type {@code google.tracing.v1.Span.TimeEvent.Annotation}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:google.tracing.v1.Span.TimeEvent.Annotation)
          com.google.tracing.v1.Span.TimeEvent.AnnotationOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.google.tracing.v1.TraceProto.internal_static_google_tracing_v1_Span_TimeEvent_Annotation_descriptor;
        }

        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMapField(
            int number) {
          switch (number) {
            case 2:
              return internalGetLabels();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMutableMapField(
            int number) {
          switch (number) {
            case 2:
              return internalGetMutableLabels();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.google.tracing.v1.TraceProto.internal_static_google_tracing_v1_Span_TimeEvent_Annotation_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.google.tracing.v1.Span.TimeEvent.Annotation.class, com.google.tracing.v1.Span.TimeEvent.Annotation.Builder.class);
        }

        // Construct using com.google.tracing.v1.Span.TimeEvent.Annotation.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          description_ = "";

          internalGetMutableLabels().clear();
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.google.tracing.v1.TraceProto.internal_static_google_tracing_v1_Span_TimeEvent_Annotation_descriptor;
        }

        public com.google.tracing.v1.Span.TimeEvent.Annotation getDefaultInstanceForType() {
          return com.google.tracing.v1.Span.TimeEvent.Annotation.getDefaultInstance();
        }

        public com.google.tracing.v1.Span.TimeEvent.Annotation build() {
          com.google.tracing.v1.Span.TimeEvent.Annotation result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.google.tracing.v1.Span.TimeEvent.Annotation buildPartial() {
          com.google.tracing.v1.Span.TimeEvent.Annotation result = new com.google.tracing.v1.Span.TimeEvent.Annotation(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          result.description_ = description_;
          result.labels_ = internalGetLabels();
          result.labels_.makeImmutable();
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.google.tracing.v1.Span.TimeEvent.Annotation) {
            return mergeFrom((com.google.tracing.v1.Span.TimeEvent.Annotation)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.google.tracing.v1.Span.TimeEvent.Annotation other) {
          if (other == com.google.tracing.v1.Span.TimeEvent.Annotation.getDefaultInstance()) return this;
          if (!other.getDescription().isEmpty()) {
            description_ = other.description_;
            onChanged();
          }
          internalGetMutableLabels().mergeFrom(
              other.internalGetLabels());
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.tracing.v1.Span.TimeEvent.Annotation parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.google.tracing.v1.Span.TimeEvent.Annotation) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object description_ = "";
        /**
         * <pre>
         * A user-supplied message describing the event.
         * </pre>
         *
         * <code>string description = 1;</code>
         */
        public java.lang.String getDescription() {
          java.lang.Object ref = description_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            description_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * A user-supplied message describing the event.
         * </pre>
         *
         * <code>string description = 1;</code>
         */
        public com.google.protobuf.ByteString
            getDescriptionBytes() {
          java.lang.Object ref = description_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            description_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * A user-supplied message describing the event.
         * </pre>
         *
         * <code>string description = 1;</code>
         */
        public Builder setDescription(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          description_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * A user-supplied message describing the event.
         * </pre>
         *
         * <code>string description = 1;</code>
         */
        public Builder clearDescription() {
          
          description_ = getDefaultInstance().getDescription();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * A user-supplied message describing the event.
         * </pre>
         *
         * <code>string description = 1;</code>
         */
        public Builder setDescriptionBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          description_ = value;
          onChanged();
          return this;
        }

        private com.google.protobuf.MapField<
            java.lang.String, com.google.tracing.v1.LabelValue> labels_;
        private com.google.protobuf.MapField<java.lang.String, com.google.tracing.v1.LabelValue>
        internalGetLabels() {
          if (labels_ == null) {
            return com.google.protobuf.MapField.emptyMapField(
                LabelsDefaultEntryHolder.defaultEntry);
          }
          return labels_;
        }
        private com.google.protobuf.MapField<java.lang.String, com.google.tracing.v1.LabelValue>
        internalGetMutableLabels() {
          onChanged();;
          if (labels_ == null) {
            labels_ = com.google.protobuf.MapField.newMapField(
                LabelsDefaultEntryHolder.defaultEntry);
          }
          if (!labels_.isMutable()) {
            labels_ = labels_.copy();
          }
          return labels_;
        }

        public int getLabelsCount() {
          return internalGetLabels().getMap().size();
        }
        /**
         * <pre>
         * A set of labels on the annotation.
         * </pre>
         *
         * <code>map&lt;string, .google.tracing.v1.LabelValue&gt; labels = 2;</code>
         */

        public boolean containsLabels(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          return internalGetLabels().getMap().containsKey(key);
        }
        /**
         * Use {@link #getLabelsMap()} instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, com.google.tracing.v1.LabelValue> getLabels() {
          return getLabelsMap();
        }
        /**
         * <pre>
         * A set of labels on the annotation.
         * </pre>
         *
         * <code>map&lt;string, .google.tracing.v1.LabelValue&gt; labels = 2;</code>
         */

        public java.util.Map<java.lang.String, com.google.tracing.v1.LabelValue> getLabelsMap() {
          return internalGetLabels().getMap();
        }
        /**
         * <pre>
         * A set of labels on the annotation.
         * </pre>
         *
         * <code>map&lt;string, .google.tracing.v1.LabelValue&gt; labels = 2;</code>
         */

        public com.google.tracing.v1.LabelValue getLabelsOrDefault(
            java.lang.String key,
            com.google.tracing.v1.LabelValue defaultValue) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, com.google.tracing.v1.LabelValue> map =
              internalGetLabels().getMap();
          return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <pre>
         * A set of labels on the annotation.
         * </pre>
         *
         * <code>map&lt;string, .google.tracing.v1.LabelValue&gt; labels = 2;</code>
         */

        public com.google.tracing.v1.LabelValue getLabelsOrThrow(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, com.google.tracing.v1.LabelValue> map =
              internalGetLabels().getMap();
          if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
          }
          return map.get(key);
        }

        public Builder clearLabels() {
          internalGetMutableLabels().getMutableMap()
              .clear();
          return this;
        }
        /**
         * <pre>
         * A set of labels on the annotation.
         * </pre>
         *
         * <code>map&lt;string, .google.tracing.v1.LabelValue&gt; labels = 2;</code>
         */

        public Builder removeLabels(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          internalGetMutableLabels().getMutableMap()
              .remove(key);
          return this;
        }
        /**
         * Use alternate mutation accessors instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, com.google.tracing.v1.LabelValue>
        getMutableLabels() {
          return internalGetMutableLabels().getMutableMap();
        }
        /**
         * <pre>
         * A set of labels on the annotation.
         * </pre>
         *
         * <code>map&lt;string, .google.tracing.v1.LabelValue&gt; labels = 2;</code>
         */
        public Builder putLabels(
            java.lang.String key,
            com.google.tracing.v1.LabelValue value) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          if (value == null) { throw new java.lang.NullPointerException(); }
          internalGetMutableLabels().getMutableMap()
              .put(key, value);
          return this;
        }
        /**
         * <pre>
         * A set of labels on the annotation.
         * </pre>
         *
         * <code>map&lt;string, .google.tracing.v1.LabelValue&gt; labels = 2;</code>
         */

        public Builder putAllLabels(
            java.util.Map<java.lang.String, com.google.tracing.v1.LabelValue> values) {
          internalGetMutableLabels().getMutableMap()
              .putAll(values);
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:google.tracing.v1.Span.TimeEvent.Annotation)
      }

      // @@protoc_insertion_point(class_scope:google.tracing.v1.Span.TimeEvent.Annotation)
      private static final com.google.tracing.v1.Span.TimeEvent.Annotation DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.google.tracing.v1.Span.TimeEvent.Annotation();
      }

      public static com.google.tracing.v1.Span.TimeEvent.Annotation getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Annotation>
          PARSER = new com.google.protobuf.AbstractParser<Annotation>() {
        public Annotation parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Annotation(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Annotation> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Annotation> getParserForType() {
        return PARSER;
      }

      public com.google.tracing.v1.Span.TimeEvent.Annotation getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface NetworkEventOrBuilder extends
        // @@protoc_insertion_point(interface_extends:google.tracing.v1.Span.TimeEvent.NetworkEvent)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * If available, this is the kernel time:
       * For sent messages, this is the time at which the first bit was sent.
       * For received messages, this is the time at which the last bit was
       * received.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp kernel_time = 1;</code>
       */
      boolean hasKernelTime();
      /**
       * <pre>
       * If available, this is the kernel time:
       * For sent messages, this is the time at which the first bit was sent.
       * For received messages, this is the time at which the last bit was
       * received.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp kernel_time = 1;</code>
       */
      com.google.protobuf.Timestamp getKernelTime();
      /**
       * <pre>
       * If available, this is the kernel time:
       * For sent messages, this is the time at which the first bit was sent.
       * For received messages, this is the time at which the last bit was
       * received.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp kernel_time = 1;</code>
       */
      com.google.protobuf.TimestampOrBuilder getKernelTimeOrBuilder();

      /**
       * <code>.google.tracing.v1.Span.TimeEvent.NetworkEvent.Type type = 2;</code>
       */
      int getTypeValue();
      /**
       * <code>.google.tracing.v1.Span.TimeEvent.NetworkEvent.Type type = 2;</code>
       */
      com.google.tracing.v1.Span.TimeEvent.NetworkEvent.Type getType();

      /**
       * <pre>
       * Every message has an identifier, that must be different from all the
       * network messages in this span.
       * This is very important when the request/response are streamed.
       * </pre>
       *
       * <code>uint64 message_id = 3;</code>
       */
      long getMessageId();

      /**
       * <pre>
       * Number of bytes send/receive.
       * </pre>
       *
       * <code>uint64 message_size = 4;</code>
       */
      long getMessageSize();
    }
    /**
     * <pre>
     * An event describing an RPC message sent/received on the network.
     * </pre>
     *
     * Protobuf type {@code google.tracing.v1.Span.TimeEvent.NetworkEvent}
     */
    public  static final class NetworkEvent extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:google.tracing.v1.Span.TimeEvent.NetworkEvent)
        NetworkEventOrBuilder {
      // Use NetworkEvent.newBuilder() to construct.
      private NetworkEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private NetworkEvent() {
        type_ = 0;
        messageId_ = 0L;
        messageSize_ = 0L;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private NetworkEvent(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                com.google.protobuf.Timestamp.Builder subBuilder = null;
                if (kernelTime_ != null) {
                  subBuilder = kernelTime_.toBuilder();
                }
                kernelTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(kernelTime_);
                  kernelTime_ = subBuilder.buildPartial();
                }

                break;
              }
              case 16: {
                int rawValue = input.readEnum();

                type_ = rawValue;
                break;
              }
              case 24: {

                messageId_ = input.readUInt64();
                break;
              }
              case 32: {

                messageSize_ = input.readUInt64();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.tracing.v1.TraceProto.internal_static_google_tracing_v1_Span_TimeEvent_NetworkEvent_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.tracing.v1.TraceProto.internal_static_google_tracing_v1_Span_TimeEvent_NetworkEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.tracing.v1.Span.TimeEvent.NetworkEvent.class, com.google.tracing.v1.Span.TimeEvent.NetworkEvent.Builder.class);
      }

      /**
       * <pre>
       * The type of the network event. SENT or RECV event.
       * </pre>
       *
       * Protobuf enum {@code google.tracing.v1.Span.TimeEvent.NetworkEvent.Type}
       */
      public enum Type
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>UNSPECIFIED = 0;</code>
         */
        UNSPECIFIED(0),
        /**
         * <code>SENT = 1;</code>
         */
        SENT(1),
        /**
         * <code>RECV = 2;</code>
         */
        RECV(2),
        UNRECOGNIZED(-1),
        ;

        /**
         * <code>UNSPECIFIED = 0;</code>
         */
        public static final int UNSPECIFIED_VALUE = 0;
        /**
         * <code>SENT = 1;</code>
         */
        public static final int SENT_VALUE = 1;
        /**
         * <code>RECV = 2;</code>
         */
        public static final int RECV_VALUE = 2;


        public final int getNumber() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException(
                "Can't get the number of an unknown enum value.");
          }
          return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static Type valueOf(int value) {
          return forNumber(value);
        }

        public static Type forNumber(int value) {
          switch (value) {
            case 0: return UNSPECIFIED;
            case 1: return SENT;
            case 2: return RECV;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<Type>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            Type> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<Type>() {
                public Type findValueByNumber(int number) {
                  return Type.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return com.google.tracing.v1.Span.TimeEvent.NetworkEvent.getDescriptor().getEnumTypes().get(0);
        }

        private static final Type[] VALUES = values();

        public static Type valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private Type(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:google.tracing.v1.Span.TimeEvent.NetworkEvent.Type)
      }

      public static final int KERNEL_TIME_FIELD_NUMBER = 1;
      private com.google.protobuf.Timestamp kernelTime_;
      /**
       * <pre>
       * If available, this is the kernel time:
       * For sent messages, this is the time at which the first bit was sent.
       * For received messages, this is the time at which the last bit was
       * received.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp kernel_time = 1;</code>
       */
      public boolean hasKernelTime() {
        return kernelTime_ != null;
      }
      /**
       * <pre>
       * If available, this is the kernel time:
       * For sent messages, this is the time at which the first bit was sent.
       * For received messages, this is the time at which the last bit was
       * received.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp kernel_time = 1;</code>
       */
      public com.google.protobuf.Timestamp getKernelTime() {
        return kernelTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : kernelTime_;
      }
      /**
       * <pre>
       * If available, this is the kernel time:
       * For sent messages, this is the time at which the first bit was sent.
       * For received messages, this is the time at which the last bit was
       * received.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp kernel_time = 1;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getKernelTimeOrBuilder() {
        return getKernelTime();
      }

      public static final int TYPE_FIELD_NUMBER = 2;
      private int type_;
      /**
       * <code>.google.tracing.v1.Span.TimeEvent.NetworkEvent.Type type = 2;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.google.tracing.v1.Span.TimeEvent.NetworkEvent.Type type = 2;</code>
       */
      public com.google.tracing.v1.Span.TimeEvent.NetworkEvent.Type getType() {
        com.google.tracing.v1.Span.TimeEvent.NetworkEvent.Type result = com.google.tracing.v1.Span.TimeEvent.NetworkEvent.Type.valueOf(type_);
        return result == null ? com.google.tracing.v1.Span.TimeEvent.NetworkEvent.Type.UNRECOGNIZED : result;
      }

      public static final int MESSAGE_ID_FIELD_NUMBER = 3;
      private long messageId_;
      /**
       * <pre>
       * Every message has an identifier, that must be different from all the
       * network messages in this span.
       * This is very important when the request/response are streamed.
       * </pre>
       *
       * <code>uint64 message_id = 3;</code>
       */
      public long getMessageId() {
        return messageId_;
      }

      public static final int MESSAGE_SIZE_FIELD_NUMBER = 4;
      private long messageSize_;
      /**
       * <pre>
       * Number of bytes send/receive.
       * </pre>
       *
       * <code>uint64 message_size = 4;</code>
       */
      public long getMessageSize() {
        return messageSize_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (kernelTime_ != null) {
          output.writeMessage(1, getKernelTime());
        }
        if (type_ != com.google.tracing.v1.Span.TimeEvent.NetworkEvent.Type.UNSPECIFIED.getNumber()) {
          output.writeEnum(2, type_);
        }
        if (messageId_ != 0L) {
          output.writeUInt64(3, messageId_);
        }
        if (messageSize_ != 0L) {
          output.writeUInt64(4, messageSize_);
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (kernelTime_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getKernelTime());
        }
        if (type_ != com.google.tracing.v1.Span.TimeEvent.NetworkEvent.Type.UNSPECIFIED.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, type_);
        }
        if (messageId_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(3, messageId_);
        }
        if (messageSize_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(4, messageSize_);
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.google.tracing.v1.Span.TimeEvent.NetworkEvent)) {
          return super.equals(obj);
        }
        com.google.tracing.v1.Span.TimeEvent.NetworkEvent other = (com.google.tracing.v1.Span.TimeEvent.NetworkEvent) obj;

        boolean result = true;
        result = result && (hasKernelTime() == other.hasKernelTime());
        if (hasKernelTime()) {
          result = result && getKernelTime()
              .equals(other.getKernelTime());
        }
        result = result && type_ == other.type_;
        result = result && (getMessageId()
            == other.getMessageId());
        result = result && (getMessageSize()
            == other.getMessageSize());
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasKernelTime()) {
          hash = (37 * hash) + KERNEL_TIME_FIELD_NUMBER;
          hash = (53 * hash) + getKernelTime().hashCode();
        }
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
        hash = (37 * hash) + MESSAGE_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getMessageId());
        hash = (37 * hash) + MESSAGE_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getMessageSize());
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.google.tracing.v1.Span.TimeEvent.NetworkEvent parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.google.tracing.v1.Span.TimeEvent.NetworkEvent parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.google.tracing.v1.Span.TimeEvent.NetworkEvent parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.google.tracing.v1.Span.TimeEvent.NetworkEvent parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.google.tracing.v1.Span.TimeEvent.NetworkEvent parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.google.tracing.v1.Span.TimeEvent.NetworkEvent parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.google.tracing.v1.Span.TimeEvent.NetworkEvent parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.google.tracing.v1.Span.TimeEvent.NetworkEvent parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.google.tracing.v1.Span.TimeEvent.NetworkEvent parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.google.tracing.v1.Span.TimeEvent.NetworkEvent parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.google.tracing.v1.Span.TimeEvent.NetworkEvent prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * An event describing an RPC message sent/received on the network.
       * </pre>
       *
       * Protobuf type {@code google.tracing.v1.Span.TimeEvent.NetworkEvent}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:google.tracing.v1.Span.TimeEvent.NetworkEvent)
          com.google.tracing.v1.Span.TimeEvent.NetworkEventOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.google.tracing.v1.TraceProto.internal_static_google_tracing_v1_Span_TimeEvent_NetworkEvent_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.google.tracing.v1.TraceProto.internal_static_google_tracing_v1_Span_TimeEvent_NetworkEvent_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.google.tracing.v1.Span.TimeEvent.NetworkEvent.class, com.google.tracing.v1.Span.TimeEvent.NetworkEvent.Builder.class);
        }

        // Construct using com.google.tracing.v1.Span.TimeEvent.NetworkEvent.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          if (kernelTimeBuilder_ == null) {
            kernelTime_ = null;
          } else {
            kernelTime_ = null;
            kernelTimeBuilder_ = null;
          }
          type_ = 0;

          messageId_ = 0L;

          messageSize_ = 0L;

          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.google.tracing.v1.TraceProto.internal_static_google_tracing_v1_Span_TimeEvent_NetworkEvent_descriptor;
        }

        public com.google.tracing.v1.Span.TimeEvent.NetworkEvent getDefaultInstanceForType() {
          return com.google.tracing.v1.Span.TimeEvent.NetworkEvent.getDefaultInstance();
        }

        public com.google.tracing.v1.Span.TimeEvent.NetworkEvent build() {
          com.google.tracing.v1.Span.TimeEvent.NetworkEvent result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.google.tracing.v1.Span.TimeEvent.NetworkEvent buildPartial() {
          com.google.tracing.v1.Span.TimeEvent.NetworkEvent result = new com.google.tracing.v1.Span.TimeEvent.NetworkEvent(this);
          if (kernelTimeBuilder_ == null) {
            result.kernelTime_ = kernelTime_;
          } else {
            result.kernelTime_ = kernelTimeBuilder_.build();
          }
          result.type_ = type_;
          result.messageId_ = messageId_;
          result.messageSize_ = messageSize_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.google.tracing.v1.Span.TimeEvent.NetworkEvent) {
            return mergeFrom((com.google.tracing.v1.Span.TimeEvent.NetworkEvent)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.google.tracing.v1.Span.TimeEvent.NetworkEvent other) {
          if (other == com.google.tracing.v1.Span.TimeEvent.NetworkEvent.getDefaultInstance()) return this;
          if (other.hasKernelTime()) {
            mergeKernelTime(other.getKernelTime());
          }
          if (other.type_ != 0) {
            setTypeValue(other.getTypeValue());
          }
          if (other.getMessageId() != 0L) {
            setMessageId(other.getMessageId());
          }
          if (other.getMessageSize() != 0L) {
            setMessageSize(other.getMessageSize());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.tracing.v1.Span.TimeEvent.NetworkEvent parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.google.tracing.v1.Span.TimeEvent.NetworkEvent) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private com.google.protobuf.Timestamp kernelTime_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> kernelTimeBuilder_;
        /**
         * <pre>
         * If available, this is the kernel time:
         * For sent messages, this is the time at which the first bit was sent.
         * For received messages, this is the time at which the last bit was
         * received.
         * </pre>
         *
         * <code>.google.protobuf.Timestamp kernel_time = 1;</code>
         */
        public boolean hasKernelTime() {
          return kernelTimeBuilder_ != null || kernelTime_ != null;
        }
        /**
         * <pre>
         * If available, this is the kernel time:
         * For sent messages, this is the time at which the first bit was sent.
         * For received messages, this is the time at which the last bit was
         * received.
         * </pre>
         *
         * <code>.google.protobuf.Timestamp kernel_time = 1;</code>
         */
        public com.google.protobuf.Timestamp getKernelTime() {
          if (kernelTimeBuilder_ == null) {
            return kernelTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : kernelTime_;
          } else {
            return kernelTimeBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * If available, this is the kernel time:
         * For sent messages, this is the time at which the first bit was sent.
         * For received messages, this is the time at which the last bit was
         * received.
         * </pre>
         *
         * <code>.google.protobuf.Timestamp kernel_time = 1;</code>
         */
        public Builder setKernelTime(com.google.protobuf.Timestamp value) {
          if (kernelTimeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            kernelTime_ = value;
            onChanged();
          } else {
            kernelTimeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * If available, this is the kernel time:
         * For sent messages, this is the time at which the first bit was sent.
         * For received messages, this is the time at which the last bit was
         * received.
         * </pre>
         *
         * <code>.google.protobuf.Timestamp kernel_time = 1;</code>
         */
        public Builder setKernelTime(
            com.google.protobuf.Timestamp.Builder builderForValue) {
          if (kernelTimeBuilder_ == null) {
            kernelTime_ = builderForValue.build();
            onChanged();
          } else {
            kernelTimeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * If available, this is the kernel time:
         * For sent messages, this is the time at which the first bit was sent.
         * For received messages, this is the time at which the last bit was
         * received.
         * </pre>
         *
         * <code>.google.protobuf.Timestamp kernel_time = 1;</code>
         */
        public Builder mergeKernelTime(com.google.protobuf.Timestamp value) {
          if (kernelTimeBuilder_ == null) {
            if (kernelTime_ != null) {
              kernelTime_ =
                com.google.protobuf.Timestamp.newBuilder(kernelTime_).mergeFrom(value).buildPartial();
            } else {
              kernelTime_ = value;
            }
            onChanged();
          } else {
            kernelTimeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * If available, this is the kernel time:
         * For sent messages, this is the time at which the first bit was sent.
         * For received messages, this is the time at which the last bit was
         * received.
         * </pre>
         *
         * <code>.google.protobuf.Timestamp kernel_time = 1;</code>
         */
        public Builder clearKernelTime() {
          if (kernelTimeBuilder_ == null) {
            kernelTime_ = null;
            onChanged();
          } else {
            kernelTime_ = null;
            kernelTimeBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * If available, this is the kernel time:
         * For sent messages, this is the time at which the first bit was sent.
         * For received messages, this is the time at which the last bit was
         * received.
         * </pre>
         *
         * <code>.google.protobuf.Timestamp kernel_time = 1;</code>
         */
        public com.google.protobuf.Timestamp.Builder getKernelTimeBuilder() {
          
          onChanged();
          return getKernelTimeFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * If available, this is the kernel time:
         * For sent messages, this is the time at which the first bit was sent.
         * For received messages, this is the time at which the last bit was
         * received.
         * </pre>
         *
         * <code>.google.protobuf.Timestamp kernel_time = 1;</code>
         */
        public com.google.protobuf.TimestampOrBuilder getKernelTimeOrBuilder() {
          if (kernelTimeBuilder_ != null) {
            return kernelTimeBuilder_.getMessageOrBuilder();
          } else {
            return kernelTime_ == null ?
                com.google.protobuf.Timestamp.getDefaultInstance() : kernelTime_;
          }
        }
        /**
         * <pre>
         * If available, this is the kernel time:
         * For sent messages, this is the time at which the first bit was sent.
         * For received messages, this is the time at which the last bit was
         * received.
         * </pre>
         *
         * <code>.google.protobuf.Timestamp kernel_time = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
            getKernelTimeFieldBuilder() {
          if (kernelTimeBuilder_ == null) {
            kernelTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                    getKernelTime(),
                    getParentForChildren(),
                    isClean());
            kernelTime_ = null;
          }
          return kernelTimeBuilder_;
        }

        private int type_ = 0;
        /**
         * <code>.google.tracing.v1.Span.TimeEvent.NetworkEvent.Type type = 2;</code>
         */
        public int getTypeValue() {
          return type_;
        }
        /**
         * <code>.google.tracing.v1.Span.TimeEvent.NetworkEvent.Type type = 2;</code>
         */
        public Builder setTypeValue(int value) {
          type_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>.google.tracing.v1.Span.TimeEvent.NetworkEvent.Type type = 2;</code>
         */
        public com.google.tracing.v1.Span.TimeEvent.NetworkEvent.Type getType() {
          com.google.tracing.v1.Span.TimeEvent.NetworkEvent.Type result = com.google.tracing.v1.Span.TimeEvent.NetworkEvent.Type.valueOf(type_);
          return result == null ? com.google.tracing.v1.Span.TimeEvent.NetworkEvent.Type.UNRECOGNIZED : result;
        }
        /**
         * <code>.google.tracing.v1.Span.TimeEvent.NetworkEvent.Type type = 2;</code>
         */
        public Builder setType(com.google.tracing.v1.Span.TimeEvent.NetworkEvent.Type value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          type_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.google.tracing.v1.Span.TimeEvent.NetworkEvent.Type type = 2;</code>
         */
        public Builder clearType() {
          
          type_ = 0;
          onChanged();
          return this;
        }

        private long messageId_ ;
        /**
         * <pre>
         * Every message has an identifier, that must be different from all the
         * network messages in this span.
         * This is very important when the request/response are streamed.
         * </pre>
         *
         * <code>uint64 message_id = 3;</code>
         */
        public long getMessageId() {
          return messageId_;
        }
        /**
         * <pre>
         * Every message has an identifier, that must be different from all the
         * network messages in this span.
         * This is very important when the request/response are streamed.
         * </pre>
         *
         * <code>uint64 message_id = 3;</code>
         */
        public Builder setMessageId(long value) {
          
          messageId_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Every message has an identifier, that must be different from all the
         * network messages in this span.
         * This is very important when the request/response are streamed.
         * </pre>
         *
         * <code>uint64 message_id = 3;</code>
         */
        public Builder clearMessageId() {
          
          messageId_ = 0L;
          onChanged();
          return this;
        }

        private long messageSize_ ;
        /**
         * <pre>
         * Number of bytes send/receive.
         * </pre>
         *
         * <code>uint64 message_size = 4;</code>
         */
        public long getMessageSize() {
          return messageSize_;
        }
        /**
         * <pre>
         * Number of bytes send/receive.
         * </pre>
         *
         * <code>uint64 message_size = 4;</code>
         */
        public Builder setMessageSize(long value) {
          
          messageSize_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Number of bytes send/receive.
         * </pre>
         *
         * <code>uint64 message_size = 4;</code>
         */
        public Builder clearMessageSize() {
          
          messageSize_ = 0L;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:google.tracing.v1.Span.TimeEvent.NetworkEvent)
      }

      // @@protoc_insertion_point(class_scope:google.tracing.v1.Span.TimeEvent.NetworkEvent)
      private static final com.google.tracing.v1.Span.TimeEvent.NetworkEvent DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.google.tracing.v1.Span.TimeEvent.NetworkEvent();
      }

      public static com.google.tracing.v1.Span.TimeEvent.NetworkEvent getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<NetworkEvent>
          PARSER = new com.google.protobuf.AbstractParser<NetworkEvent>() {
        public NetworkEvent parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new NetworkEvent(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<NetworkEvent> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<NetworkEvent> getParserForType() {
        return PARSER;
      }

      public com.google.tracing.v1.Span.TimeEvent.NetworkEvent getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int valueCase_ = 0;
    private java.lang.Object value_;
    public enum ValueCase
        implements com.google.protobuf.Internal.EnumLite {
      ANNOTATION(2),
      NETWORK_EVENT(3),
      VALUE_NOT_SET(0);
      private final int value;
      private ValueCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ValueCase valueOf(int value) {
        return forNumber(value);
      }

      public static ValueCase forNumber(int value) {
        switch (value) {
          case 2: return ANNOTATION;
          case 3: return NETWORK_EVENT;
          case 0: return VALUE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ValueCase
    getValueCase() {
      return ValueCase.forNumber(
          valueCase_);
    }

    public static final int LOCAL_TIME_FIELD_NUMBER = 1;
    private com.google.protobuf.Timestamp localTime_;
    /**
     * <pre>
     * The local machine absolute timestamp when this event happened.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp local_time = 1;</code>
     */
    public boolean hasLocalTime() {
      return localTime_ != null;
    }
    /**
     * <pre>
     * The local machine absolute timestamp when this event happened.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp local_time = 1;</code>
     */
    public com.google.protobuf.Timestamp getLocalTime() {
      return localTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : localTime_;
    }
    /**
     * <pre>
     * The local machine absolute timestamp when this event happened.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp local_time = 1;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getLocalTimeOrBuilder() {
      return getLocalTime();
    }

    public static final int ANNOTATION_FIELD_NUMBER = 2;
    /**
     * <pre>
     * Optional field for user supplied &lt;string, LabelValue&gt; map
     * </pre>
     *
     * <code>.google.tracing.v1.Span.TimeEvent.Annotation annotation = 2;</code>
     */
    public com.google.tracing.v1.Span.TimeEvent.Annotation getAnnotation() {
      if (valueCase_ == 2) {
         return (com.google.tracing.v1.Span.TimeEvent.Annotation) value_;
      }
      return com.google.tracing.v1.Span.TimeEvent.Annotation.getDefaultInstance();
    }
    /**
     * <pre>
     * Optional field for user supplied &lt;string, LabelValue&gt; map
     * </pre>
     *
     * <code>.google.tracing.v1.Span.TimeEvent.Annotation annotation = 2;</code>
     */
    public com.google.tracing.v1.Span.TimeEvent.AnnotationOrBuilder getAnnotationOrBuilder() {
      if (valueCase_ == 2) {
         return (com.google.tracing.v1.Span.TimeEvent.Annotation) value_;
      }
      return com.google.tracing.v1.Span.TimeEvent.Annotation.getDefaultInstance();
    }

    public static final int NETWORK_EVENT_FIELD_NUMBER = 3;
    /**
     * <pre>
     * Optional field that can be used only for network events.
     * </pre>
     *
     * <code>.google.tracing.v1.Span.TimeEvent.NetworkEvent network_event = 3;</code>
     */
    public com.google.tracing.v1.Span.TimeEvent.NetworkEvent getNetworkEvent() {
      if (valueCase_ == 3) {
         return (com.google.tracing.v1.Span.TimeEvent.NetworkEvent) value_;
      }
      return com.google.tracing.v1.Span.TimeEvent.NetworkEvent.getDefaultInstance();
    }
    /**
     * <pre>
     * Optional field that can be used only for network events.
     * </pre>
     *
     * <code>.google.tracing.v1.Span.TimeEvent.NetworkEvent network_event = 3;</code>
     */
    public com.google.tracing.v1.Span.TimeEvent.NetworkEventOrBuilder getNetworkEventOrBuilder() {
      if (valueCase_ == 3) {
         return (com.google.tracing.v1.Span.TimeEvent.NetworkEvent) value_;
      }
      return com.google.tracing.v1.Span.TimeEvent.NetworkEvent.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (localTime_ != null) {
        output.writeMessage(1, getLocalTime());
      }
      if (valueCase_ == 2) {
        output.writeMessage(2, (com.google.tracing.v1.Span.TimeEvent.Annotation) value_);
      }
      if (valueCase_ == 3) {
        output.writeMessage(3, (com.google.tracing.v1.Span.TimeEvent.NetworkEvent) value_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (localTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getLocalTime());
      }
      if (valueCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (com.google.tracing.v1.Span.TimeEvent.Annotation) value_);
      }
      if (valueCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (com.google.tracing.v1.Span.TimeEvent.NetworkEvent) value_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.tracing.v1.Span.TimeEvent)) {
        return super.equals(obj);
      }
      com.google.tracing.v1.Span.TimeEvent other = (com.google.tracing.v1.Span.TimeEvent) obj;

      boolean result = true;
      result = result && (hasLocalTime() == other.hasLocalTime());
      if (hasLocalTime()) {
        result = result && getLocalTime()
            .equals(other.getLocalTime());
      }
      result = result && getValueCase().equals(
          other.getValueCase());
      if (!result) return false;
      switch (valueCase_) {
        case 2:
          result = result && getAnnotation()
              .equals(other.getAnnotation());
          break;
        case 3:
          result = result && getNetworkEvent()
              .equals(other.getNetworkEvent());
          break;
        case 0:
        default:
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasLocalTime()) {
        hash = (37 * hash) + LOCAL_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getLocalTime().hashCode();
      }
      switch (valueCase_) {
        case 2:
          hash = (37 * hash) + ANNOTATION_FIELD_NUMBER;
          hash = (53 * hash) + getAnnotation().hashCode();
          break;
        case 3:
          hash = (37 * hash) + NETWORK_EVENT_FIELD_NUMBER;
          hash = (53 * hash) + getNetworkEvent().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.tracing.v1.Span.TimeEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.tracing.v1.Span.TimeEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.tracing.v1.Span.TimeEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.tracing.v1.Span.TimeEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.tracing.v1.Span.TimeEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.tracing.v1.Span.TimeEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.tracing.v1.Span.TimeEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.tracing.v1.Span.TimeEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.tracing.v1.Span.TimeEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.tracing.v1.Span.TimeEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.tracing.v1.Span.TimeEvent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A time-stamped annotation in the Span.
     * </pre>
     *
     * Protobuf type {@code google.tracing.v1.Span.TimeEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.tracing.v1.Span.TimeEvent)
        com.google.tracing.v1.Span.TimeEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.tracing.v1.TraceProto.internal_static_google_tracing_v1_Span_TimeEvent_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.tracing.v1.TraceProto.internal_static_google_tracing_v1_Span_TimeEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.tracing.v1.Span.TimeEvent.class, com.google.tracing.v1.Span.TimeEvent.Builder.class);
      }

      // Construct using com.google.tracing.v1.Span.TimeEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (localTimeBuilder_ == null) {
          localTime_ = null;
        } else {
          localTime_ = null;
          localTimeBuilder_ = null;
        }
        valueCase_ = 0;
        value_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.tracing.v1.TraceProto.internal_static_google_tracing_v1_Span_TimeEvent_descriptor;
      }

      public com.google.tracing.v1.Span.TimeEvent getDefaultInstanceForType() {
        return com.google.tracing.v1.Span.TimeEvent.getDefaultInstance();
      }

      public com.google.tracing.v1.Span.TimeEvent build() {
        com.google.tracing.v1.Span.TimeEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.google.tracing.v1.Span.TimeEvent buildPartial() {
        com.google.tracing.v1.Span.TimeEvent result = new com.google.tracing.v1.Span.TimeEvent(this);
        if (localTimeBuilder_ == null) {
          result.localTime_ = localTime_;
        } else {
          result.localTime_ = localTimeBuilder_.build();
        }
        if (valueCase_ == 2) {
          if (annotationBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = annotationBuilder_.build();
          }
        }
        if (valueCase_ == 3) {
          if (networkEventBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = networkEventBuilder_.build();
          }
        }
        result.valueCase_ = valueCase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.tracing.v1.Span.TimeEvent) {
          return mergeFrom((com.google.tracing.v1.Span.TimeEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.tracing.v1.Span.TimeEvent other) {
        if (other == com.google.tracing.v1.Span.TimeEvent.getDefaultInstance()) return this;
        if (other.hasLocalTime()) {
          mergeLocalTime(other.getLocalTime());
        }
        switch (other.getValueCase()) {
          case ANNOTATION: {
            mergeAnnotation(other.getAnnotation());
            break;
          }
          case NETWORK_EVENT: {
            mergeNetworkEvent(other.getNetworkEvent());
            break;
          }
          case VALUE_NOT_SET: {
            break;
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.tracing.v1.Span.TimeEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.tracing.v1.Span.TimeEvent) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int valueCase_ = 0;
      private java.lang.Object value_;
      public ValueCase
          getValueCase() {
        return ValueCase.forNumber(
            valueCase_);
      }

      public Builder clearValue() {
        valueCase_ = 0;
        value_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.Timestamp localTime_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> localTimeBuilder_;
      /**
       * <pre>
       * The local machine absolute timestamp when this event happened.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp local_time = 1;</code>
       */
      public boolean hasLocalTime() {
        return localTimeBuilder_ != null || localTime_ != null;
      }
      /**
       * <pre>
       * The local machine absolute timestamp when this event happened.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp local_time = 1;</code>
       */
      public com.google.protobuf.Timestamp getLocalTime() {
        if (localTimeBuilder_ == null) {
          return localTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : localTime_;
        } else {
          return localTimeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The local machine absolute timestamp when this event happened.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp local_time = 1;</code>
       */
      public Builder setLocalTime(com.google.protobuf.Timestamp value) {
        if (localTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          localTime_ = value;
          onChanged();
        } else {
          localTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The local machine absolute timestamp when this event happened.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp local_time = 1;</code>
       */
      public Builder setLocalTime(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (localTimeBuilder_ == null) {
          localTime_ = builderForValue.build();
          onChanged();
        } else {
          localTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The local machine absolute timestamp when this event happened.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp local_time = 1;</code>
       */
      public Builder mergeLocalTime(com.google.protobuf.Timestamp value) {
        if (localTimeBuilder_ == null) {
          if (localTime_ != null) {
            localTime_ =
              com.google.protobuf.Timestamp.newBuilder(localTime_).mergeFrom(value).buildPartial();
          } else {
            localTime_ = value;
          }
          onChanged();
        } else {
          localTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The local machine absolute timestamp when this event happened.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp local_time = 1;</code>
       */
      public Builder clearLocalTime() {
        if (localTimeBuilder_ == null) {
          localTime_ = null;
          onChanged();
        } else {
          localTime_ = null;
          localTimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The local machine absolute timestamp when this event happened.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp local_time = 1;</code>
       */
      public com.google.protobuf.Timestamp.Builder getLocalTimeBuilder() {
        
        onChanged();
        return getLocalTimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The local machine absolute timestamp when this event happened.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp local_time = 1;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getLocalTimeOrBuilder() {
        if (localTimeBuilder_ != null) {
          return localTimeBuilder_.getMessageOrBuilder();
        } else {
          return localTime_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : localTime_;
        }
      }
      /**
       * <pre>
       * The local machine absolute timestamp when this event happened.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp local_time = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getLocalTimeFieldBuilder() {
        if (localTimeBuilder_ == null) {
          localTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getLocalTime(),
                  getParentForChildren(),
                  isClean());
          localTime_ = null;
        }
        return localTimeBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.tracing.v1.Span.TimeEvent.Annotation, com.google.tracing.v1.Span.TimeEvent.Annotation.Builder, com.google.tracing.v1.Span.TimeEvent.AnnotationOrBuilder> annotationBuilder_;
      /**
       * <pre>
       * Optional field for user supplied &lt;string, LabelValue&gt; map
       * </pre>
       *
       * <code>.google.tracing.v1.Span.TimeEvent.Annotation annotation = 2;</code>
       */
      public com.google.tracing.v1.Span.TimeEvent.Annotation getAnnotation() {
        if (annotationBuilder_ == null) {
          if (valueCase_ == 2) {
            return (com.google.tracing.v1.Span.TimeEvent.Annotation) value_;
          }
          return com.google.tracing.v1.Span.TimeEvent.Annotation.getDefaultInstance();
        } else {
          if (valueCase_ == 2) {
            return annotationBuilder_.getMessage();
          }
          return com.google.tracing.v1.Span.TimeEvent.Annotation.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Optional field for user supplied &lt;string, LabelValue&gt; map
       * </pre>
       *
       * <code>.google.tracing.v1.Span.TimeEvent.Annotation annotation = 2;</code>
       */
      public Builder setAnnotation(com.google.tracing.v1.Span.TimeEvent.Annotation value) {
        if (annotationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          annotationBuilder_.setMessage(value);
        }
        valueCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Optional field for user supplied &lt;string, LabelValue&gt; map
       * </pre>
       *
       * <code>.google.tracing.v1.Span.TimeEvent.Annotation annotation = 2;</code>
       */
      public Builder setAnnotation(
          com.google.tracing.v1.Span.TimeEvent.Annotation.Builder builderForValue) {
        if (annotationBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          annotationBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Optional field for user supplied &lt;string, LabelValue&gt; map
       * </pre>
       *
       * <code>.google.tracing.v1.Span.TimeEvent.Annotation annotation = 2;</code>
       */
      public Builder mergeAnnotation(com.google.tracing.v1.Span.TimeEvent.Annotation value) {
        if (annotationBuilder_ == null) {
          if (valueCase_ == 2 &&
              value_ != com.google.tracing.v1.Span.TimeEvent.Annotation.getDefaultInstance()) {
            value_ = com.google.tracing.v1.Span.TimeEvent.Annotation.newBuilder((com.google.tracing.v1.Span.TimeEvent.Annotation) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 2) {
            annotationBuilder_.mergeFrom(value);
          }
          annotationBuilder_.setMessage(value);
        }
        valueCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Optional field for user supplied &lt;string, LabelValue&gt; map
       * </pre>
       *
       * <code>.google.tracing.v1.Span.TimeEvent.Annotation annotation = 2;</code>
       */
      public Builder clearAnnotation() {
        if (annotationBuilder_ == null) {
          if (valueCase_ == 2) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 2) {
            valueCase_ = 0;
            value_ = null;
          }
          annotationBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Optional field for user supplied &lt;string, LabelValue&gt; map
       * </pre>
       *
       * <code>.google.tracing.v1.Span.TimeEvent.Annotation annotation = 2;</code>
       */
      public com.google.tracing.v1.Span.TimeEvent.Annotation.Builder getAnnotationBuilder() {
        return getAnnotationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Optional field for user supplied &lt;string, LabelValue&gt; map
       * </pre>
       *
       * <code>.google.tracing.v1.Span.TimeEvent.Annotation annotation = 2;</code>
       */
      public com.google.tracing.v1.Span.TimeEvent.AnnotationOrBuilder getAnnotationOrBuilder() {
        if ((valueCase_ == 2) && (annotationBuilder_ != null)) {
          return annotationBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 2) {
            return (com.google.tracing.v1.Span.TimeEvent.Annotation) value_;
          }
          return com.google.tracing.v1.Span.TimeEvent.Annotation.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Optional field for user supplied &lt;string, LabelValue&gt; map
       * </pre>
       *
       * <code>.google.tracing.v1.Span.TimeEvent.Annotation annotation = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.tracing.v1.Span.TimeEvent.Annotation, com.google.tracing.v1.Span.TimeEvent.Annotation.Builder, com.google.tracing.v1.Span.TimeEvent.AnnotationOrBuilder> 
          getAnnotationFieldBuilder() {
        if (annotationBuilder_ == null) {
          if (!(valueCase_ == 2)) {
            value_ = com.google.tracing.v1.Span.TimeEvent.Annotation.getDefaultInstance();
          }
          annotationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.tracing.v1.Span.TimeEvent.Annotation, com.google.tracing.v1.Span.TimeEvent.Annotation.Builder, com.google.tracing.v1.Span.TimeEvent.AnnotationOrBuilder>(
                  (com.google.tracing.v1.Span.TimeEvent.Annotation) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 2;
        onChanged();;
        return annotationBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.tracing.v1.Span.TimeEvent.NetworkEvent, com.google.tracing.v1.Span.TimeEvent.NetworkEvent.Builder, com.google.tracing.v1.Span.TimeEvent.NetworkEventOrBuilder> networkEventBuilder_;
      /**
       * <pre>
       * Optional field that can be used only for network events.
       * </pre>
       *
       * <code>.google.tracing.v1.Span.TimeEvent.NetworkEvent network_event = 3;</code>
       */
      public com.google.tracing.v1.Span.TimeEvent.NetworkEvent getNetworkEvent() {
        if (networkEventBuilder_ == null) {
          if (valueCase_ == 3) {
            return (com.google.tracing.v1.Span.TimeEvent.NetworkEvent) value_;
          }
          return com.google.tracing.v1.Span.TimeEvent.NetworkEvent.getDefaultInstance();
        } else {
          if (valueCase_ == 3) {
            return networkEventBuilder_.getMessage();
          }
          return com.google.tracing.v1.Span.TimeEvent.NetworkEvent.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Optional field that can be used only for network events.
       * </pre>
       *
       * <code>.google.tracing.v1.Span.TimeEvent.NetworkEvent network_event = 3;</code>
       */
      public Builder setNetworkEvent(com.google.tracing.v1.Span.TimeEvent.NetworkEvent value) {
        if (networkEventBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          networkEventBuilder_.setMessage(value);
        }
        valueCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * Optional field that can be used only for network events.
       * </pre>
       *
       * <code>.google.tracing.v1.Span.TimeEvent.NetworkEvent network_event = 3;</code>
       */
      public Builder setNetworkEvent(
          com.google.tracing.v1.Span.TimeEvent.NetworkEvent.Builder builderForValue) {
        if (networkEventBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          networkEventBuilder_.setMessage(builderForValue.build());
        }
        valueCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * Optional field that can be used only for network events.
       * </pre>
       *
       * <code>.google.tracing.v1.Span.TimeEvent.NetworkEvent network_event = 3;</code>
       */
      public Builder mergeNetworkEvent(com.google.tracing.v1.Span.TimeEvent.NetworkEvent value) {
        if (networkEventBuilder_ == null) {
          if (valueCase_ == 3 &&
              value_ != com.google.tracing.v1.Span.TimeEvent.NetworkEvent.getDefaultInstance()) {
            value_ = com.google.tracing.v1.Span.TimeEvent.NetworkEvent.newBuilder((com.google.tracing.v1.Span.TimeEvent.NetworkEvent) value_)
                .mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          if (valueCase_ == 3) {
            networkEventBuilder_.mergeFrom(value);
          }
          networkEventBuilder_.setMessage(value);
        }
        valueCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * Optional field that can be used only for network events.
       * </pre>
       *
       * <code>.google.tracing.v1.Span.TimeEvent.NetworkEvent network_event = 3;</code>
       */
      public Builder clearNetworkEvent() {
        if (networkEventBuilder_ == null) {
          if (valueCase_ == 3) {
            valueCase_ = 0;
            value_ = null;
            onChanged();
          }
        } else {
          if (valueCase_ == 3) {
            valueCase_ = 0;
            value_ = null;
          }
          networkEventBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Optional field that can be used only for network events.
       * </pre>
       *
       * <code>.google.tracing.v1.Span.TimeEvent.NetworkEvent network_event = 3;</code>
       */
      public com.google.tracing.v1.Span.TimeEvent.NetworkEvent.Builder getNetworkEventBuilder() {
        return getNetworkEventFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Optional field that can be used only for network events.
       * </pre>
       *
       * <code>.google.tracing.v1.Span.TimeEvent.NetworkEvent network_event = 3;</code>
       */
      public com.google.tracing.v1.Span.TimeEvent.NetworkEventOrBuilder getNetworkEventOrBuilder() {
        if ((valueCase_ == 3) && (networkEventBuilder_ != null)) {
          return networkEventBuilder_.getMessageOrBuilder();
        } else {
          if (valueCase_ == 3) {
            return (com.google.tracing.v1.Span.TimeEvent.NetworkEvent) value_;
          }
          return com.google.tracing.v1.Span.TimeEvent.NetworkEvent.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Optional field that can be used only for network events.
       * </pre>
       *
       * <code>.google.tracing.v1.Span.TimeEvent.NetworkEvent network_event = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.tracing.v1.Span.TimeEvent.NetworkEvent, com.google.tracing.v1.Span.TimeEvent.NetworkEvent.Builder, com.google.tracing.v1.Span.TimeEvent.NetworkEventOrBuilder> 
          getNetworkEventFieldBuilder() {
        if (networkEventBuilder_ == null) {
          if (!(valueCase_ == 3)) {
            value_ = com.google.tracing.v1.Span.TimeEvent.NetworkEvent.getDefaultInstance();
          }
          networkEventBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.tracing.v1.Span.TimeEvent.NetworkEvent, com.google.tracing.v1.Span.TimeEvent.NetworkEvent.Builder, com.google.tracing.v1.Span.TimeEvent.NetworkEventOrBuilder>(
                  (com.google.tracing.v1.Span.TimeEvent.NetworkEvent) value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        valueCase_ = 3;
        onChanged();;
        return networkEventBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:google.tracing.v1.Span.TimeEvent)
    }

    // @@protoc_insertion_point(class_scope:google.tracing.v1.Span.TimeEvent)
    private static final com.google.tracing.v1.Span.TimeEvent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.tracing.v1.Span.TimeEvent();
    }

    public static com.google.tracing.v1.Span.TimeEvent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TimeEvent>
        PARSER = new com.google.protobuf.AbstractParser<TimeEvent>() {
      public TimeEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TimeEvent(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TimeEvent> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TimeEvent> getParserForType() {
      return PARSER;
    }

    public com.google.tracing.v1.Span.TimeEvent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LinkOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.tracing.v1.Span.Link)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The trace and span identifier of the linked span.
     * </pre>
     *
     * <code>.google.tracing.v1.TraceId trace_id = 1;</code>
     */
    boolean hasTraceId();
    /**
     * <pre>
     * The trace and span identifier of the linked span.
     * </pre>
     *
     * <code>.google.tracing.v1.TraceId trace_id = 1;</code>
     */
    com.google.tracing.v1.TraceId getTraceId();
    /**
     * <pre>
     * The trace and span identifier of the linked span.
     * </pre>
     *
     * <code>.google.tracing.v1.TraceId trace_id = 1;</code>
     */
    com.google.tracing.v1.TraceIdOrBuilder getTraceIdOrBuilder();

    /**
     * <code>fixed64 span_id = 2;</code>
     */
    long getSpanId();

    /**
     * <code>.google.tracing.v1.Span.Link.Type type = 3;</code>
     */
    int getTypeValue();
    /**
     * <code>.google.tracing.v1.Span.Link.Type type = 3;</code>
     */
    com.google.tracing.v1.Span.Link.Type getType();
  }
  /**
   * <pre>
   * Link one span with another which may be in a different Trace. Used (for
   * example) in batching operations, where a single batch handler processes
   * multiple requests from different traces.
   * </pre>
   *
   * Protobuf type {@code google.tracing.v1.Span.Link}
   */
  public  static final class Link extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.tracing.v1.Span.Link)
      LinkOrBuilder {
    // Use Link.newBuilder() to construct.
    private Link(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Link() {
      spanId_ = 0L;
      type_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Link(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.tracing.v1.TraceId.Builder subBuilder = null;
              if (traceId_ != null) {
                subBuilder = traceId_.toBuilder();
              }
              traceId_ = input.readMessage(com.google.tracing.v1.TraceId.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(traceId_);
                traceId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 17: {

              spanId_ = input.readFixed64();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.tracing.v1.TraceProto.internal_static_google_tracing_v1_Span_Link_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.tracing.v1.TraceProto.internal_static_google_tracing_v1_Span_Link_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.tracing.v1.Span.Link.class, com.google.tracing.v1.Span.Link.Builder.class);
    }

    /**
     * <pre>
     * The type of the link.
     * </pre>
     *
     * Protobuf enum {@code google.tracing.v1.Span.Link.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNSPECIFIED = 0;</code>
       */
      UNSPECIFIED(0),
      /**
       * <code>CHILD = 1;</code>
       */
      CHILD(1),
      /**
       * <code>PARENT = 2;</code>
       */
      PARENT(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>UNSPECIFIED = 0;</code>
       */
      public static final int UNSPECIFIED_VALUE = 0;
      /**
       * <code>CHILD = 1;</code>
       */
      public static final int CHILD_VALUE = 1;
      /**
       * <code>PARENT = 2;</code>
       */
      public static final int PARENT_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Type valueOf(int value) {
        return forNumber(value);
      }

      public static Type forNumber(int value) {
        switch (value) {
          case 0: return UNSPECIFIED;
          case 1: return CHILD;
          case 2: return PARENT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Type> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.google.tracing.v1.Span.Link.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Type(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:google.tracing.v1.Span.Link.Type)
    }

    public static final int TRACE_ID_FIELD_NUMBER = 1;
    private com.google.tracing.v1.TraceId traceId_;
    /**
     * <pre>
     * The trace and span identifier of the linked span.
     * </pre>
     *
     * <code>.google.tracing.v1.TraceId trace_id = 1;</code>
     */
    public boolean hasTraceId() {
      return traceId_ != null;
    }
    /**
     * <pre>
     * The trace and span identifier of the linked span.
     * </pre>
     *
     * <code>.google.tracing.v1.TraceId trace_id = 1;</code>
     */
    public com.google.tracing.v1.TraceId getTraceId() {
      return traceId_ == null ? com.google.tracing.v1.TraceId.getDefaultInstance() : traceId_;
    }
    /**
     * <pre>
     * The trace and span identifier of the linked span.
     * </pre>
     *
     * <code>.google.tracing.v1.TraceId trace_id = 1;</code>
     */
    public com.google.tracing.v1.TraceIdOrBuilder getTraceIdOrBuilder() {
      return getTraceId();
    }

    public static final int SPAN_ID_FIELD_NUMBER = 2;
    private long spanId_;
    /**
     * <code>fixed64 span_id = 2;</code>
     */
    public long getSpanId() {
      return spanId_;
    }

    public static final int TYPE_FIELD_NUMBER = 3;
    private int type_;
    /**
     * <code>.google.tracing.v1.Span.Link.Type type = 3;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.google.tracing.v1.Span.Link.Type type = 3;</code>
     */
    public com.google.tracing.v1.Span.Link.Type getType() {
      com.google.tracing.v1.Span.Link.Type result = com.google.tracing.v1.Span.Link.Type.valueOf(type_);
      return result == null ? com.google.tracing.v1.Span.Link.Type.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (traceId_ != null) {
        output.writeMessage(1, getTraceId());
      }
      if (spanId_ != 0L) {
        output.writeFixed64(2, spanId_);
      }
      if (type_ != com.google.tracing.v1.Span.Link.Type.UNSPECIFIED.getNumber()) {
        output.writeEnum(3, type_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (traceId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTraceId());
      }
      if (spanId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, spanId_);
      }
      if (type_ != com.google.tracing.v1.Span.Link.Type.UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, type_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.tracing.v1.Span.Link)) {
        return super.equals(obj);
      }
      com.google.tracing.v1.Span.Link other = (com.google.tracing.v1.Span.Link) obj;

      boolean result = true;
      result = result && (hasTraceId() == other.hasTraceId());
      if (hasTraceId()) {
        result = result && getTraceId()
            .equals(other.getTraceId());
      }
      result = result && (getSpanId()
          == other.getSpanId());
      result = result && type_ == other.type_;
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTraceId()) {
        hash = (37 * hash) + TRACE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getTraceId().hashCode();
      }
      hash = (37 * hash) + SPAN_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSpanId());
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.tracing.v1.Span.Link parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.tracing.v1.Span.Link parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.tracing.v1.Span.Link parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.tracing.v1.Span.Link parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.tracing.v1.Span.Link parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.tracing.v1.Span.Link parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.tracing.v1.Span.Link parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.tracing.v1.Span.Link parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.tracing.v1.Span.Link parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.tracing.v1.Span.Link parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.tracing.v1.Span.Link prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Link one span with another which may be in a different Trace. Used (for
     * example) in batching operations, where a single batch handler processes
     * multiple requests from different traces.
     * </pre>
     *
     * Protobuf type {@code google.tracing.v1.Span.Link}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.tracing.v1.Span.Link)
        com.google.tracing.v1.Span.LinkOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.tracing.v1.TraceProto.internal_static_google_tracing_v1_Span_Link_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.tracing.v1.TraceProto.internal_static_google_tracing_v1_Span_Link_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.tracing.v1.Span.Link.class, com.google.tracing.v1.Span.Link.Builder.class);
      }

      // Construct using com.google.tracing.v1.Span.Link.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (traceIdBuilder_ == null) {
          traceId_ = null;
        } else {
          traceId_ = null;
          traceIdBuilder_ = null;
        }
        spanId_ = 0L;

        type_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.tracing.v1.TraceProto.internal_static_google_tracing_v1_Span_Link_descriptor;
      }

      public com.google.tracing.v1.Span.Link getDefaultInstanceForType() {
        return com.google.tracing.v1.Span.Link.getDefaultInstance();
      }

      public com.google.tracing.v1.Span.Link build() {
        com.google.tracing.v1.Span.Link result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.google.tracing.v1.Span.Link buildPartial() {
        com.google.tracing.v1.Span.Link result = new com.google.tracing.v1.Span.Link(this);
        if (traceIdBuilder_ == null) {
          result.traceId_ = traceId_;
        } else {
          result.traceId_ = traceIdBuilder_.build();
        }
        result.spanId_ = spanId_;
        result.type_ = type_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.tracing.v1.Span.Link) {
          return mergeFrom((com.google.tracing.v1.Span.Link)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.tracing.v1.Span.Link other) {
        if (other == com.google.tracing.v1.Span.Link.getDefaultInstance()) return this;
        if (other.hasTraceId()) {
          mergeTraceId(other.getTraceId());
        }
        if (other.getSpanId() != 0L) {
          setSpanId(other.getSpanId());
        }
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.tracing.v1.Span.Link parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.tracing.v1.Span.Link) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.tracing.v1.TraceId traceId_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.tracing.v1.TraceId, com.google.tracing.v1.TraceId.Builder, com.google.tracing.v1.TraceIdOrBuilder> traceIdBuilder_;
      /**
       * <pre>
       * The trace and span identifier of the linked span.
       * </pre>
       *
       * <code>.google.tracing.v1.TraceId trace_id = 1;</code>
       */
      public boolean hasTraceId() {
        return traceIdBuilder_ != null || traceId_ != null;
      }
      /**
       * <pre>
       * The trace and span identifier of the linked span.
       * </pre>
       *
       * <code>.google.tracing.v1.TraceId trace_id = 1;</code>
       */
      public com.google.tracing.v1.TraceId getTraceId() {
        if (traceIdBuilder_ == null) {
          return traceId_ == null ? com.google.tracing.v1.TraceId.getDefaultInstance() : traceId_;
        } else {
          return traceIdBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The trace and span identifier of the linked span.
       * </pre>
       *
       * <code>.google.tracing.v1.TraceId trace_id = 1;</code>
       */
      public Builder setTraceId(com.google.tracing.v1.TraceId value) {
        if (traceIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          traceId_ = value;
          onChanged();
        } else {
          traceIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The trace and span identifier of the linked span.
       * </pre>
       *
       * <code>.google.tracing.v1.TraceId trace_id = 1;</code>
       */
      public Builder setTraceId(
          com.google.tracing.v1.TraceId.Builder builderForValue) {
        if (traceIdBuilder_ == null) {
          traceId_ = builderForValue.build();
          onChanged();
        } else {
          traceIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The trace and span identifier of the linked span.
       * </pre>
       *
       * <code>.google.tracing.v1.TraceId trace_id = 1;</code>
       */
      public Builder mergeTraceId(com.google.tracing.v1.TraceId value) {
        if (traceIdBuilder_ == null) {
          if (traceId_ != null) {
            traceId_ =
              com.google.tracing.v1.TraceId.newBuilder(traceId_).mergeFrom(value).buildPartial();
          } else {
            traceId_ = value;
          }
          onChanged();
        } else {
          traceIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The trace and span identifier of the linked span.
       * </pre>
       *
       * <code>.google.tracing.v1.TraceId trace_id = 1;</code>
       */
      public Builder clearTraceId() {
        if (traceIdBuilder_ == null) {
          traceId_ = null;
          onChanged();
        } else {
          traceId_ = null;
          traceIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The trace and span identifier of the linked span.
       * </pre>
       *
       * <code>.google.tracing.v1.TraceId trace_id = 1;</code>
       */
      public com.google.tracing.v1.TraceId.Builder getTraceIdBuilder() {
        
        onChanged();
        return getTraceIdFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The trace and span identifier of the linked span.
       * </pre>
       *
       * <code>.google.tracing.v1.TraceId trace_id = 1;</code>
       */
      public com.google.tracing.v1.TraceIdOrBuilder getTraceIdOrBuilder() {
        if (traceIdBuilder_ != null) {
          return traceIdBuilder_.getMessageOrBuilder();
        } else {
          return traceId_ == null ?
              com.google.tracing.v1.TraceId.getDefaultInstance() : traceId_;
        }
      }
      /**
       * <pre>
       * The trace and span identifier of the linked span.
       * </pre>
       *
       * <code>.google.tracing.v1.TraceId trace_id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.tracing.v1.TraceId, com.google.tracing.v1.TraceId.Builder, com.google.tracing.v1.TraceIdOrBuilder> 
          getTraceIdFieldBuilder() {
        if (traceIdBuilder_ == null) {
          traceIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.tracing.v1.TraceId, com.google.tracing.v1.TraceId.Builder, com.google.tracing.v1.TraceIdOrBuilder>(
                  getTraceId(),
                  getParentForChildren(),
                  isClean());
          traceId_ = null;
        }
        return traceIdBuilder_;
      }

      private long spanId_ ;
      /**
       * <code>fixed64 span_id = 2;</code>
       */
      public long getSpanId() {
        return spanId_;
      }
      /**
       * <code>fixed64 span_id = 2;</code>
       */
      public Builder setSpanId(long value) {
        
        spanId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>fixed64 span_id = 2;</code>
       */
      public Builder clearSpanId() {
        
        spanId_ = 0L;
        onChanged();
        return this;
      }

      private int type_ = 0;
      /**
       * <code>.google.tracing.v1.Span.Link.Type type = 3;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.google.tracing.v1.Span.Link.Type type = 3;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.google.tracing.v1.Span.Link.Type type = 3;</code>
       */
      public com.google.tracing.v1.Span.Link.Type getType() {
        com.google.tracing.v1.Span.Link.Type result = com.google.tracing.v1.Span.Link.Type.valueOf(type_);
        return result == null ? com.google.tracing.v1.Span.Link.Type.UNRECOGNIZED : result;
      }
      /**
       * <code>.google.tracing.v1.Span.Link.Type type = 3;</code>
       */
      public Builder setType(com.google.tracing.v1.Span.Link.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.google.tracing.v1.Span.Link.Type type = 3;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:google.tracing.v1.Span.Link)
    }

    // @@protoc_insertion_point(class_scope:google.tracing.v1.Span.Link)
    private static final com.google.tracing.v1.Span.Link DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.tracing.v1.Span.Link();
    }

    public static com.google.tracing.v1.Span.Link getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Link>
        PARSER = new com.google.protobuf.AbstractParser<Link>() {
      public Link parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Link(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Link> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Link> getParserForType() {
      return PARSER;
    }

    public com.google.tracing.v1.Span.Link getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int bitField0_;
  public static final int ID_FIELD_NUMBER = 1;
  private long id_;
  /**
   * <pre>
   * Identifier for the span. Must be a 64-bit integer other than 0 and
   * unique within a trace.
   * </pre>
   *
   * <code>fixed64 id = 1;</code>
   */
  public long getId() {
    return id_;
  }

  public static final int NAME_FIELD_NUMBER = 2;
  private volatile java.lang.Object name_;
  /**
   * <pre>
   * Name of the span. The span name is sanitized and displayed in the
   * Stackdriver Trace tool in the {% dynamic print site_values.console_name %}.
   * The name may be a method name or some other per-call site name.
   * For the same executable and the same call point, a best practice is
   * to use a consistent name, which makes it easier to correlate
   * cross-trace spans.
   * </pre>
   *
   * <code>string name = 2;</code>
   */
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Name of the span. The span name is sanitized and displayed in the
   * Stackdriver Trace tool in the {% dynamic print site_values.console_name %}.
   * The name may be a method name or some other per-call site name.
   * For the same executable and the same call point, a best practice is
   * to use a consistent name, which makes it easier to correlate
   * cross-trace spans.
   * </pre>
   *
   * <code>string name = 2;</code>
   */
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PARENT_ID_FIELD_NUMBER = 3;
  private long parentId_;
  /**
   * <pre>
   * ID of parent span. 0 or missing if this is a root span.
   * </pre>
   *
   * <code>fixed64 parent_id = 3;</code>
   */
  public long getParentId() {
    return parentId_;
  }

  public static final int LOCAL_START_TIME_FIELD_NUMBER = 4;
  private com.google.protobuf.Timestamp localStartTime_;
  /**
   * <pre>
   * Local machine clock in nanoseconds from the UNIX epoch,
   * at which span execution started.
   * On the server side these are the times when the server application
   * handler starts running.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp local_start_time = 4;</code>
   */
  public boolean hasLocalStartTime() {
    return localStartTime_ != null;
  }
  /**
   * <pre>
   * Local machine clock in nanoseconds from the UNIX epoch,
   * at which span execution started.
   * On the server side these are the times when the server application
   * handler starts running.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp local_start_time = 4;</code>
   */
  public com.google.protobuf.Timestamp getLocalStartTime() {
    return localStartTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : localStartTime_;
  }
  /**
   * <pre>
   * Local machine clock in nanoseconds from the UNIX epoch,
   * at which span execution started.
   * On the server side these are the times when the server application
   * handler starts running.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp local_start_time = 4;</code>
   */
  public com.google.protobuf.TimestampOrBuilder getLocalStartTimeOrBuilder() {
    return getLocalStartTime();
  }

  public static final int LOCAL_END_TIME_FIELD_NUMBER = 5;
  private com.google.protobuf.Timestamp localEndTime_;
  /**
   * <pre>
   * Local machine clock in nanoseconds from the UNIX epoch,
   * at which span execution ended.
   * On the server side these are the times when the server application
   * handler finishes running.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp local_end_time = 5;</code>
   */
  public boolean hasLocalEndTime() {
    return localEndTime_ != null;
  }
  /**
   * <pre>
   * Local machine clock in nanoseconds from the UNIX epoch,
   * at which span execution ended.
   * On the server side these are the times when the server application
   * handler finishes running.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp local_end_time = 5;</code>
   */
  public com.google.protobuf.Timestamp getLocalEndTime() {
    return localEndTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : localEndTime_;
  }
  /**
   * <pre>
   * Local machine clock in nanoseconds from the UNIX epoch,
   * at which span execution ended.
   * On the server side these are the times when the server application
   * handler finishes running.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp local_end_time = 5;</code>
   */
  public com.google.protobuf.TimestampOrBuilder getLocalEndTimeOrBuilder() {
    return getLocalEndTime();
  }

  public static final int LABELS_FIELD_NUMBER = 6;
  private static final class LabelsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, com.google.tracing.v1.LabelValue> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, com.google.tracing.v1.LabelValue>newDefaultInstance(
                com.google.tracing.v1.TraceProto.internal_static_google_tracing_v1_Span_LabelsEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.google.tracing.v1.LabelValue.getDefaultInstance());
  }
  private com.google.protobuf.MapField<
      java.lang.String, com.google.tracing.v1.LabelValue> labels_;
  private com.google.protobuf.MapField<java.lang.String, com.google.tracing.v1.LabelValue>
  internalGetLabels() {
    if (labels_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          LabelsDefaultEntryHolder.defaultEntry);
    }
    return labels_;
  }

  public int getLabelsCount() {
    return internalGetLabels().getMap().size();
  }
  /**
   * <pre>
   * Properties of a span. Labels at the span level.
   * E.g.
   * "/instance_id": "my-instance"
   * "/zone": "us-central1-a"
   * "/grpc/peer_address": "ip:port" (dns, etc.)
   * "/grpc/deadline": "Duration"
   * "/http/user_agent"
   * "/http/request_bytes": 300
   * "/http/response_bytes": 1200
   * "/http/url": google.com/apis
   * "/pid"
   * "abc.com/mylabel": "my label value"
   * </pre>
   *
   * <code>map&lt;string, .google.tracing.v1.LabelValue&gt; labels = 6;</code>
   */

  public boolean containsLabels(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetLabels().getMap().containsKey(key);
  }
  /**
   * Use {@link #getLabelsMap()} instead.
   */
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, com.google.tracing.v1.LabelValue> getLabels() {
    return getLabelsMap();
  }
  /**
   * <pre>
   * Properties of a span. Labels at the span level.
   * E.g.
   * "/instance_id": "my-instance"
   * "/zone": "us-central1-a"
   * "/grpc/peer_address": "ip:port" (dns, etc.)
   * "/grpc/deadline": "Duration"
   * "/http/user_agent"
   * "/http/request_bytes": 300
   * "/http/response_bytes": 1200
   * "/http/url": google.com/apis
   * "/pid"
   * "abc.com/mylabel": "my label value"
   * </pre>
   *
   * <code>map&lt;string, .google.tracing.v1.LabelValue&gt; labels = 6;</code>
   */

  public java.util.Map<java.lang.String, com.google.tracing.v1.LabelValue> getLabelsMap() {
    return internalGetLabels().getMap();
  }
  /**
   * <pre>
   * Properties of a span. Labels at the span level.
   * E.g.
   * "/instance_id": "my-instance"
   * "/zone": "us-central1-a"
   * "/grpc/peer_address": "ip:port" (dns, etc.)
   * "/grpc/deadline": "Duration"
   * "/http/user_agent"
   * "/http/request_bytes": 300
   * "/http/response_bytes": 1200
   * "/http/url": google.com/apis
   * "/pid"
   * "abc.com/mylabel": "my label value"
   * </pre>
   *
   * <code>map&lt;string, .google.tracing.v1.LabelValue&gt; labels = 6;</code>
   */

  public com.google.tracing.v1.LabelValue getLabelsOrDefault(
      java.lang.String key,
      com.google.tracing.v1.LabelValue defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, com.google.tracing.v1.LabelValue> map =
        internalGetLabels().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Properties of a span. Labels at the span level.
   * E.g.
   * "/instance_id": "my-instance"
   * "/zone": "us-central1-a"
   * "/grpc/peer_address": "ip:port" (dns, etc.)
   * "/grpc/deadline": "Duration"
   * "/http/user_agent"
   * "/http/request_bytes": 300
   * "/http/response_bytes": 1200
   * "/http/url": google.com/apis
   * "/pid"
   * "abc.com/mylabel": "my label value"
   * </pre>
   *
   * <code>map&lt;string, .google.tracing.v1.LabelValue&gt; labels = 6;</code>
   */

  public com.google.tracing.v1.LabelValue getLabelsOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, com.google.tracing.v1.LabelValue> map =
        internalGetLabels().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int STACK_TRACE_FIELD_NUMBER = 7;
  private com.google.tracing.v1.StackTrace stackTrace_;
  /**
   * <pre>
   * Stack trace captured at the start of the span. This is optional.
   * </pre>
   *
   * <code>.google.tracing.v1.StackTrace stack_trace = 7;</code>
   */
  public boolean hasStackTrace() {
    return stackTrace_ != null;
  }
  /**
   * <pre>
   * Stack trace captured at the start of the span. This is optional.
   * </pre>
   *
   * <code>.google.tracing.v1.StackTrace stack_trace = 7;</code>
   */
  public com.google.tracing.v1.StackTrace getStackTrace() {
    return stackTrace_ == null ? com.google.tracing.v1.StackTrace.getDefaultInstance() : stackTrace_;
  }
  /**
   * <pre>
   * Stack trace captured at the start of the span. This is optional.
   * </pre>
   *
   * <code>.google.tracing.v1.StackTrace stack_trace = 7;</code>
   */
  public com.google.tracing.v1.StackTraceOrBuilder getStackTraceOrBuilder() {
    return getStackTrace();
  }

  public static final int TIME_EVENTS_FIELD_NUMBER = 8;
  private java.util.List<com.google.tracing.v1.Span.TimeEvent> timeEvents_;
  /**
   * <pre>
   * A collection of time-stamped events.
   * </pre>
   *
   * <code>repeated .google.tracing.v1.Span.TimeEvent time_events = 8;</code>
   */
  public java.util.List<com.google.tracing.v1.Span.TimeEvent> getTimeEventsList() {
    return timeEvents_;
  }
  /**
   * <pre>
   * A collection of time-stamped events.
   * </pre>
   *
   * <code>repeated .google.tracing.v1.Span.TimeEvent time_events = 8;</code>
   */
  public java.util.List<? extends com.google.tracing.v1.Span.TimeEventOrBuilder> 
      getTimeEventsOrBuilderList() {
    return timeEvents_;
  }
  /**
   * <pre>
   * A collection of time-stamped events.
   * </pre>
   *
   * <code>repeated .google.tracing.v1.Span.TimeEvent time_events = 8;</code>
   */
  public int getTimeEventsCount() {
    return timeEvents_.size();
  }
  /**
   * <pre>
   * A collection of time-stamped events.
   * </pre>
   *
   * <code>repeated .google.tracing.v1.Span.TimeEvent time_events = 8;</code>
   */
  public com.google.tracing.v1.Span.TimeEvent getTimeEvents(int index) {
    return timeEvents_.get(index);
  }
  /**
   * <pre>
   * A collection of time-stamped events.
   * </pre>
   *
   * <code>repeated .google.tracing.v1.Span.TimeEvent time_events = 8;</code>
   */
  public com.google.tracing.v1.Span.TimeEventOrBuilder getTimeEventsOrBuilder(
      int index) {
    return timeEvents_.get(index);
  }

  public static final int LINKS_FIELD_NUMBER = 9;
  private java.util.List<com.google.tracing.v1.Span.Link> links_;
  /**
   * <pre>
   * A collection of links.
   * </pre>
   *
   * <code>repeated .google.tracing.v1.Span.Link links = 9;</code>
   */
  public java.util.List<com.google.tracing.v1.Span.Link> getLinksList() {
    return links_;
  }
  /**
   * <pre>
   * A collection of links.
   * </pre>
   *
   * <code>repeated .google.tracing.v1.Span.Link links = 9;</code>
   */
  public java.util.List<? extends com.google.tracing.v1.Span.LinkOrBuilder> 
      getLinksOrBuilderList() {
    return links_;
  }
  /**
   * <pre>
   * A collection of links.
   * </pre>
   *
   * <code>repeated .google.tracing.v1.Span.Link links = 9;</code>
   */
  public int getLinksCount() {
    return links_.size();
  }
  /**
   * <pre>
   * A collection of links.
   * </pre>
   *
   * <code>repeated .google.tracing.v1.Span.Link links = 9;</code>
   */
  public com.google.tracing.v1.Span.Link getLinks(int index) {
    return links_.get(index);
  }
  /**
   * <pre>
   * A collection of links.
   * </pre>
   *
   * <code>repeated .google.tracing.v1.Span.Link links = 9;</code>
   */
  public com.google.tracing.v1.Span.LinkOrBuilder getLinksOrBuilder(
      int index) {
    return links_.get(index);
  }

  public static final int STATUS_FIELD_NUMBER = 10;
  private com.google.rpc.Status status_;
  /**
   * <pre>
   * The final status of the Span. This is optional.
   * </pre>
   *
   * <code>.google.rpc.Status status = 10;</code>
   */
  public boolean hasStatus() {
    return status_ != null;
  }
  /**
   * <pre>
   * The final status of the Span. This is optional.
   * </pre>
   *
   * <code>.google.rpc.Status status = 10;</code>
   */
  public com.google.rpc.Status getStatus() {
    return status_ == null ? com.google.rpc.Status.getDefaultInstance() : status_;
  }
  /**
   * <pre>
   * The final status of the Span. This is optional.
   * </pre>
   *
   * <code>.google.rpc.Status status = 10;</code>
   */
  public com.google.rpc.StatusOrBuilder getStatusOrBuilder() {
    return getStatus();
  }

  public static final int HAS_REMOTE_PARENT_FIELD_NUMBER = 11;
  private boolean hasRemoteParent_;
  /**
   * <pre>
   * True if this Span has a remote parent (is an RPC server Span).
   * </pre>
   *
   * <code>bool has_remote_parent = 11;</code>
   */
  public boolean getHasRemoteParent() {
    return hasRemoteParent_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (id_ != 0L) {
      output.writeFixed64(1, id_);
    }
    if (!getNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
    }
    if (parentId_ != 0L) {
      output.writeFixed64(3, parentId_);
    }
    if (localStartTime_ != null) {
      output.writeMessage(4, getLocalStartTime());
    }
    if (localEndTime_ != null) {
      output.writeMessage(5, getLocalEndTime());
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetLabels(),
        LabelsDefaultEntryHolder.defaultEntry,
        6);
    if (stackTrace_ != null) {
      output.writeMessage(7, getStackTrace());
    }
    for (int i = 0; i < timeEvents_.size(); i++) {
      output.writeMessage(8, timeEvents_.get(i));
    }
    for (int i = 0; i < links_.size(); i++) {
      output.writeMessage(9, links_.get(i));
    }
    if (status_ != null) {
      output.writeMessage(10, getStatus());
    }
    if (hasRemoteParent_ != false) {
      output.writeBool(11, hasRemoteParent_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (id_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeFixed64Size(1, id_);
    }
    if (!getNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
    }
    if (parentId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeFixed64Size(3, parentId_);
    }
    if (localStartTime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getLocalStartTime());
    }
    if (localEndTime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getLocalEndTime());
    }
    for (java.util.Map.Entry<java.lang.String, com.google.tracing.v1.LabelValue> entry
         : internalGetLabels().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, com.google.tracing.v1.LabelValue>
      labels__ = LabelsDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, labels__);
    }
    if (stackTrace_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, getStackTrace());
    }
    for (int i = 0; i < timeEvents_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, timeEvents_.get(i));
    }
    for (int i = 0; i < links_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, links_.get(i));
    }
    if (status_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, getStatus());
    }
    if (hasRemoteParent_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(11, hasRemoteParent_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.tracing.v1.Span)) {
      return super.equals(obj);
    }
    com.google.tracing.v1.Span other = (com.google.tracing.v1.Span) obj;

    boolean result = true;
    result = result && (getId()
        == other.getId());
    result = result && getName()
        .equals(other.getName());
    result = result && (getParentId()
        == other.getParentId());
    result = result && (hasLocalStartTime() == other.hasLocalStartTime());
    if (hasLocalStartTime()) {
      result = result && getLocalStartTime()
          .equals(other.getLocalStartTime());
    }
    result = result && (hasLocalEndTime() == other.hasLocalEndTime());
    if (hasLocalEndTime()) {
      result = result && getLocalEndTime()
          .equals(other.getLocalEndTime());
    }
    result = result && internalGetLabels().equals(
        other.internalGetLabels());
    result = result && (hasStackTrace() == other.hasStackTrace());
    if (hasStackTrace()) {
      result = result && getStackTrace()
          .equals(other.getStackTrace());
    }
    result = result && getTimeEventsList()
        .equals(other.getTimeEventsList());
    result = result && getLinksList()
        .equals(other.getLinksList());
    result = result && (hasStatus() == other.hasStatus());
    if (hasStatus()) {
      result = result && getStatus()
          .equals(other.getStatus());
    }
    result = result && (getHasRemoteParent()
        == other.getHasRemoteParent());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getId());
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    hash = (37 * hash) + PARENT_ID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getParentId());
    if (hasLocalStartTime()) {
      hash = (37 * hash) + LOCAL_START_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getLocalStartTime().hashCode();
    }
    if (hasLocalEndTime()) {
      hash = (37 * hash) + LOCAL_END_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getLocalEndTime().hashCode();
    }
    if (!internalGetLabels().getMap().isEmpty()) {
      hash = (37 * hash) + LABELS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetLabels().hashCode();
    }
    if (hasStackTrace()) {
      hash = (37 * hash) + STACK_TRACE_FIELD_NUMBER;
      hash = (53 * hash) + getStackTrace().hashCode();
    }
    if (getTimeEventsCount() > 0) {
      hash = (37 * hash) + TIME_EVENTS_FIELD_NUMBER;
      hash = (53 * hash) + getTimeEventsList().hashCode();
    }
    if (getLinksCount() > 0) {
      hash = (37 * hash) + LINKS_FIELD_NUMBER;
      hash = (53 * hash) + getLinksList().hashCode();
    }
    if (hasStatus()) {
      hash = (37 * hash) + STATUS_FIELD_NUMBER;
      hash = (53 * hash) + getStatus().hashCode();
    }
    hash = (37 * hash) + HAS_REMOTE_PARENT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getHasRemoteParent());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.tracing.v1.Span parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.tracing.v1.Span parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.tracing.v1.Span parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.tracing.v1.Span parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.tracing.v1.Span parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.tracing.v1.Span parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.tracing.v1.Span parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.tracing.v1.Span parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.tracing.v1.Span parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.tracing.v1.Span parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.tracing.v1.Span prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A span represents a single operation within a trace. Spans can be nested
   * and form a trace tree. Often, a trace contains a root span that describes the
   * end-to-end latency and, optionally, one or more subspans for
   * its sub-operations. Spans do not need to be contiguous. There may be gaps
   * between spans in a trace.
   * </pre>
   *
   * Protobuf type {@code google.tracing.v1.Span}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.tracing.v1.Span)
      com.google.tracing.v1.SpanOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.tracing.v1.TraceProto.internal_static_google_tracing_v1_Span_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 6:
          return internalGetLabels();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 6:
          return internalGetMutableLabels();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.tracing.v1.TraceProto.internal_static_google_tracing_v1_Span_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.tracing.v1.Span.class, com.google.tracing.v1.Span.Builder.class);
    }

    // Construct using com.google.tracing.v1.Span.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getTimeEventsFieldBuilder();
        getLinksFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      id_ = 0L;

      name_ = "";

      parentId_ = 0L;

      if (localStartTimeBuilder_ == null) {
        localStartTime_ = null;
      } else {
        localStartTime_ = null;
        localStartTimeBuilder_ = null;
      }
      if (localEndTimeBuilder_ == null) {
        localEndTime_ = null;
      } else {
        localEndTime_ = null;
        localEndTimeBuilder_ = null;
      }
      internalGetMutableLabels().clear();
      if (stackTraceBuilder_ == null) {
        stackTrace_ = null;
      } else {
        stackTrace_ = null;
        stackTraceBuilder_ = null;
      }
      if (timeEventsBuilder_ == null) {
        timeEvents_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
      } else {
        timeEventsBuilder_.clear();
      }
      if (linksBuilder_ == null) {
        links_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
      } else {
        linksBuilder_.clear();
      }
      if (statusBuilder_ == null) {
        status_ = null;
      } else {
        status_ = null;
        statusBuilder_ = null;
      }
      hasRemoteParent_ = false;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.tracing.v1.TraceProto.internal_static_google_tracing_v1_Span_descriptor;
    }

    public com.google.tracing.v1.Span getDefaultInstanceForType() {
      return com.google.tracing.v1.Span.getDefaultInstance();
    }

    public com.google.tracing.v1.Span build() {
      com.google.tracing.v1.Span result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.google.tracing.v1.Span buildPartial() {
      com.google.tracing.v1.Span result = new com.google.tracing.v1.Span(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.id_ = id_;
      result.name_ = name_;
      result.parentId_ = parentId_;
      if (localStartTimeBuilder_ == null) {
        result.localStartTime_ = localStartTime_;
      } else {
        result.localStartTime_ = localStartTimeBuilder_.build();
      }
      if (localEndTimeBuilder_ == null) {
        result.localEndTime_ = localEndTime_;
      } else {
        result.localEndTime_ = localEndTimeBuilder_.build();
      }
      result.labels_ = internalGetLabels();
      result.labels_.makeImmutable();
      if (stackTraceBuilder_ == null) {
        result.stackTrace_ = stackTrace_;
      } else {
        result.stackTrace_ = stackTraceBuilder_.build();
      }
      if (timeEventsBuilder_ == null) {
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          timeEvents_ = java.util.Collections.unmodifiableList(timeEvents_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.timeEvents_ = timeEvents_;
      } else {
        result.timeEvents_ = timeEventsBuilder_.build();
      }
      if (linksBuilder_ == null) {
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          links_ = java.util.Collections.unmodifiableList(links_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.links_ = links_;
      } else {
        result.links_ = linksBuilder_.build();
      }
      if (statusBuilder_ == null) {
        result.status_ = status_;
      } else {
        result.status_ = statusBuilder_.build();
      }
      result.hasRemoteParent_ = hasRemoteParent_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.tracing.v1.Span) {
        return mergeFrom((com.google.tracing.v1.Span)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.tracing.v1.Span other) {
      if (other == com.google.tracing.v1.Span.getDefaultInstance()) return this;
      if (other.getId() != 0L) {
        setId(other.getId());
      }
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        onChanged();
      }
      if (other.getParentId() != 0L) {
        setParentId(other.getParentId());
      }
      if (other.hasLocalStartTime()) {
        mergeLocalStartTime(other.getLocalStartTime());
      }
      if (other.hasLocalEndTime()) {
        mergeLocalEndTime(other.getLocalEndTime());
      }
      internalGetMutableLabels().mergeFrom(
          other.internalGetLabels());
      if (other.hasStackTrace()) {
        mergeStackTrace(other.getStackTrace());
      }
      if (timeEventsBuilder_ == null) {
        if (!other.timeEvents_.isEmpty()) {
          if (timeEvents_.isEmpty()) {
            timeEvents_ = other.timeEvents_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureTimeEventsIsMutable();
            timeEvents_.addAll(other.timeEvents_);
          }
          onChanged();
        }
      } else {
        if (!other.timeEvents_.isEmpty()) {
          if (timeEventsBuilder_.isEmpty()) {
            timeEventsBuilder_.dispose();
            timeEventsBuilder_ = null;
            timeEvents_ = other.timeEvents_;
            bitField0_ = (bitField0_ & ~0x00000080);
            timeEventsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getTimeEventsFieldBuilder() : null;
          } else {
            timeEventsBuilder_.addAllMessages(other.timeEvents_);
          }
        }
      }
      if (linksBuilder_ == null) {
        if (!other.links_.isEmpty()) {
          if (links_.isEmpty()) {
            links_ = other.links_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureLinksIsMutable();
            links_.addAll(other.links_);
          }
          onChanged();
        }
      } else {
        if (!other.links_.isEmpty()) {
          if (linksBuilder_.isEmpty()) {
            linksBuilder_.dispose();
            linksBuilder_ = null;
            links_ = other.links_;
            bitField0_ = (bitField0_ & ~0x00000100);
            linksBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getLinksFieldBuilder() : null;
          } else {
            linksBuilder_.addAllMessages(other.links_);
          }
        }
      }
      if (other.hasStatus()) {
        mergeStatus(other.getStatus());
      }
      if (other.getHasRemoteParent() != false) {
        setHasRemoteParent(other.getHasRemoteParent());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.tracing.v1.Span parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.tracing.v1.Span) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private long id_ ;
    /**
     * <pre>
     * Identifier for the span. Must be a 64-bit integer other than 0 and
     * unique within a trace.
     * </pre>
     *
     * <code>fixed64 id = 1;</code>
     */
    public long getId() {
      return id_;
    }
    /**
     * <pre>
     * Identifier for the span. Must be a 64-bit integer other than 0 and
     * unique within a trace.
     * </pre>
     *
     * <code>fixed64 id = 1;</code>
     */
    public Builder setId(long value) {
      
      id_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Identifier for the span. Must be a 64-bit integer other than 0 and
     * unique within a trace.
     * </pre>
     *
     * <code>fixed64 id = 1;</code>
     */
    public Builder clearId() {
      
      id_ = 0L;
      onChanged();
      return this;
    }

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * Name of the span. The span name is sanitized and displayed in the
     * Stackdriver Trace tool in the {% dynamic print site_values.console_name %}.
     * The name may be a method name or some other per-call site name.
     * For the same executable and the same call point, a best practice is
     * to use a consistent name, which makes it easier to correlate
     * cross-trace spans.
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Name of the span. The span name is sanitized and displayed in the
     * Stackdriver Trace tool in the {% dynamic print site_values.console_name %}.
     * The name may be a method name or some other per-call site name.
     * For the same executable and the same call point, a best practice is
     * to use a consistent name, which makes it easier to correlate
     * cross-trace spans.
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Name of the span. The span name is sanitized and displayed in the
     * Stackdriver Trace tool in the {% dynamic print site_values.console_name %}.
     * The name may be a method name or some other per-call site name.
     * For the same executable and the same call point, a best practice is
     * to use a consistent name, which makes it easier to correlate
     * cross-trace spans.
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      name_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Name of the span. The span name is sanitized and displayed in the
     * Stackdriver Trace tool in the {% dynamic print site_values.console_name %}.
     * The name may be a method name or some other per-call site name.
     * For the same executable and the same call point, a best practice is
     * to use a consistent name, which makes it easier to correlate
     * cross-trace spans.
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public Builder clearName() {
      
      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Name of the span. The span name is sanitized and displayed in the
     * Stackdriver Trace tool in the {% dynamic print site_values.console_name %}.
     * The name may be a method name or some other per-call site name.
     * For the same executable and the same call point, a best practice is
     * to use a consistent name, which makes it easier to correlate
     * cross-trace spans.
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      name_ = value;
      onChanged();
      return this;
    }

    private long parentId_ ;
    /**
     * <pre>
     * ID of parent span. 0 or missing if this is a root span.
     * </pre>
     *
     * <code>fixed64 parent_id = 3;</code>
     */
    public long getParentId() {
      return parentId_;
    }
    /**
     * <pre>
     * ID of parent span. 0 or missing if this is a root span.
     * </pre>
     *
     * <code>fixed64 parent_id = 3;</code>
     */
    public Builder setParentId(long value) {
      
      parentId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * ID of parent span. 0 or missing if this is a root span.
     * </pre>
     *
     * <code>fixed64 parent_id = 3;</code>
     */
    public Builder clearParentId() {
      
      parentId_ = 0L;
      onChanged();
      return this;
    }

    private com.google.protobuf.Timestamp localStartTime_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> localStartTimeBuilder_;
    /**
     * <pre>
     * Local machine clock in nanoseconds from the UNIX epoch,
     * at which span execution started.
     * On the server side these are the times when the server application
     * handler starts running.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp local_start_time = 4;</code>
     */
    public boolean hasLocalStartTime() {
      return localStartTimeBuilder_ != null || localStartTime_ != null;
    }
    /**
     * <pre>
     * Local machine clock in nanoseconds from the UNIX epoch,
     * at which span execution started.
     * On the server side these are the times when the server application
     * handler starts running.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp local_start_time = 4;</code>
     */
    public com.google.protobuf.Timestamp getLocalStartTime() {
      if (localStartTimeBuilder_ == null) {
        return localStartTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : localStartTime_;
      } else {
        return localStartTimeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Local machine clock in nanoseconds from the UNIX epoch,
     * at which span execution started.
     * On the server side these are the times when the server application
     * handler starts running.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp local_start_time = 4;</code>
     */
    public Builder setLocalStartTime(com.google.protobuf.Timestamp value) {
      if (localStartTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        localStartTime_ = value;
        onChanged();
      } else {
        localStartTimeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Local machine clock in nanoseconds from the UNIX epoch,
     * at which span execution started.
     * On the server side these are the times when the server application
     * handler starts running.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp local_start_time = 4;</code>
     */
    public Builder setLocalStartTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (localStartTimeBuilder_ == null) {
        localStartTime_ = builderForValue.build();
        onChanged();
      } else {
        localStartTimeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Local machine clock in nanoseconds from the UNIX epoch,
     * at which span execution started.
     * On the server side these are the times when the server application
     * handler starts running.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp local_start_time = 4;</code>
     */
    public Builder mergeLocalStartTime(com.google.protobuf.Timestamp value) {
      if (localStartTimeBuilder_ == null) {
        if (localStartTime_ != null) {
          localStartTime_ =
            com.google.protobuf.Timestamp.newBuilder(localStartTime_).mergeFrom(value).buildPartial();
        } else {
          localStartTime_ = value;
        }
        onChanged();
      } else {
        localStartTimeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Local machine clock in nanoseconds from the UNIX epoch,
     * at which span execution started.
     * On the server side these are the times when the server application
     * handler starts running.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp local_start_time = 4;</code>
     */
    public Builder clearLocalStartTime() {
      if (localStartTimeBuilder_ == null) {
        localStartTime_ = null;
        onChanged();
      } else {
        localStartTime_ = null;
        localStartTimeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Local machine clock in nanoseconds from the UNIX epoch,
     * at which span execution started.
     * On the server side these are the times when the server application
     * handler starts running.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp local_start_time = 4;</code>
     */
    public com.google.protobuf.Timestamp.Builder getLocalStartTimeBuilder() {
      
      onChanged();
      return getLocalStartTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Local machine clock in nanoseconds from the UNIX epoch,
     * at which span execution started.
     * On the server side these are the times when the server application
     * handler starts running.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp local_start_time = 4;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getLocalStartTimeOrBuilder() {
      if (localStartTimeBuilder_ != null) {
        return localStartTimeBuilder_.getMessageOrBuilder();
      } else {
        return localStartTime_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : localStartTime_;
      }
    }
    /**
     * <pre>
     * Local machine clock in nanoseconds from the UNIX epoch,
     * at which span execution started.
     * On the server side these are the times when the server application
     * handler starts running.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp local_start_time = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getLocalStartTimeFieldBuilder() {
      if (localStartTimeBuilder_ == null) {
        localStartTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getLocalStartTime(),
                getParentForChildren(),
                isClean());
        localStartTime_ = null;
      }
      return localStartTimeBuilder_;
    }

    private com.google.protobuf.Timestamp localEndTime_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> localEndTimeBuilder_;
    /**
     * <pre>
     * Local machine clock in nanoseconds from the UNIX epoch,
     * at which span execution ended.
     * On the server side these are the times when the server application
     * handler finishes running.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp local_end_time = 5;</code>
     */
    public boolean hasLocalEndTime() {
      return localEndTimeBuilder_ != null || localEndTime_ != null;
    }
    /**
     * <pre>
     * Local machine clock in nanoseconds from the UNIX epoch,
     * at which span execution ended.
     * On the server side these are the times when the server application
     * handler finishes running.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp local_end_time = 5;</code>
     */
    public com.google.protobuf.Timestamp getLocalEndTime() {
      if (localEndTimeBuilder_ == null) {
        return localEndTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : localEndTime_;
      } else {
        return localEndTimeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Local machine clock in nanoseconds from the UNIX epoch,
     * at which span execution ended.
     * On the server side these are the times when the server application
     * handler finishes running.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp local_end_time = 5;</code>
     */
    public Builder setLocalEndTime(com.google.protobuf.Timestamp value) {
      if (localEndTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        localEndTime_ = value;
        onChanged();
      } else {
        localEndTimeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Local machine clock in nanoseconds from the UNIX epoch,
     * at which span execution ended.
     * On the server side these are the times when the server application
     * handler finishes running.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp local_end_time = 5;</code>
     */
    public Builder setLocalEndTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (localEndTimeBuilder_ == null) {
        localEndTime_ = builderForValue.build();
        onChanged();
      } else {
        localEndTimeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Local machine clock in nanoseconds from the UNIX epoch,
     * at which span execution ended.
     * On the server side these are the times when the server application
     * handler finishes running.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp local_end_time = 5;</code>
     */
    public Builder mergeLocalEndTime(com.google.protobuf.Timestamp value) {
      if (localEndTimeBuilder_ == null) {
        if (localEndTime_ != null) {
          localEndTime_ =
            com.google.protobuf.Timestamp.newBuilder(localEndTime_).mergeFrom(value).buildPartial();
        } else {
          localEndTime_ = value;
        }
        onChanged();
      } else {
        localEndTimeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Local machine clock in nanoseconds from the UNIX epoch,
     * at which span execution ended.
     * On the server side these are the times when the server application
     * handler finishes running.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp local_end_time = 5;</code>
     */
    public Builder clearLocalEndTime() {
      if (localEndTimeBuilder_ == null) {
        localEndTime_ = null;
        onChanged();
      } else {
        localEndTime_ = null;
        localEndTimeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Local machine clock in nanoseconds from the UNIX epoch,
     * at which span execution ended.
     * On the server side these are the times when the server application
     * handler finishes running.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp local_end_time = 5;</code>
     */
    public com.google.protobuf.Timestamp.Builder getLocalEndTimeBuilder() {
      
      onChanged();
      return getLocalEndTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Local machine clock in nanoseconds from the UNIX epoch,
     * at which span execution ended.
     * On the server side these are the times when the server application
     * handler finishes running.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp local_end_time = 5;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getLocalEndTimeOrBuilder() {
      if (localEndTimeBuilder_ != null) {
        return localEndTimeBuilder_.getMessageOrBuilder();
      } else {
        return localEndTime_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : localEndTime_;
      }
    }
    /**
     * <pre>
     * Local machine clock in nanoseconds from the UNIX epoch,
     * at which span execution ended.
     * On the server side these are the times when the server application
     * handler finishes running.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp local_end_time = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getLocalEndTimeFieldBuilder() {
      if (localEndTimeBuilder_ == null) {
        localEndTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getLocalEndTime(),
                getParentForChildren(),
                isClean());
        localEndTime_ = null;
      }
      return localEndTimeBuilder_;
    }

    private com.google.protobuf.MapField<
        java.lang.String, com.google.tracing.v1.LabelValue> labels_;
    private com.google.protobuf.MapField<java.lang.String, com.google.tracing.v1.LabelValue>
    internalGetLabels() {
      if (labels_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            LabelsDefaultEntryHolder.defaultEntry);
      }
      return labels_;
    }
    private com.google.protobuf.MapField<java.lang.String, com.google.tracing.v1.LabelValue>
    internalGetMutableLabels() {
      onChanged();;
      if (labels_ == null) {
        labels_ = com.google.protobuf.MapField.newMapField(
            LabelsDefaultEntryHolder.defaultEntry);
      }
      if (!labels_.isMutable()) {
        labels_ = labels_.copy();
      }
      return labels_;
    }

    public int getLabelsCount() {
      return internalGetLabels().getMap().size();
    }
    /**
     * <pre>
     * Properties of a span. Labels at the span level.
     * E.g.
     * "/instance_id": "my-instance"
     * "/zone": "us-central1-a"
     * "/grpc/peer_address": "ip:port" (dns, etc.)
     * "/grpc/deadline": "Duration"
     * "/http/user_agent"
     * "/http/request_bytes": 300
     * "/http/response_bytes": 1200
     * "/http/url": google.com/apis
     * "/pid"
     * "abc.com/mylabel": "my label value"
     * </pre>
     *
     * <code>map&lt;string, .google.tracing.v1.LabelValue&gt; labels = 6;</code>
     */

    public boolean containsLabels(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetLabels().getMap().containsKey(key);
    }
    /**
     * Use {@link #getLabelsMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.tracing.v1.LabelValue> getLabels() {
      return getLabelsMap();
    }
    /**
     * <pre>
     * Properties of a span. Labels at the span level.
     * E.g.
     * "/instance_id": "my-instance"
     * "/zone": "us-central1-a"
     * "/grpc/peer_address": "ip:port" (dns, etc.)
     * "/grpc/deadline": "Duration"
     * "/http/user_agent"
     * "/http/request_bytes": 300
     * "/http/response_bytes": 1200
     * "/http/url": google.com/apis
     * "/pid"
     * "abc.com/mylabel": "my label value"
     * </pre>
     *
     * <code>map&lt;string, .google.tracing.v1.LabelValue&gt; labels = 6;</code>
     */

    public java.util.Map<java.lang.String, com.google.tracing.v1.LabelValue> getLabelsMap() {
      return internalGetLabels().getMap();
    }
    /**
     * <pre>
     * Properties of a span. Labels at the span level.
     * E.g.
     * "/instance_id": "my-instance"
     * "/zone": "us-central1-a"
     * "/grpc/peer_address": "ip:port" (dns, etc.)
     * "/grpc/deadline": "Duration"
     * "/http/user_agent"
     * "/http/request_bytes": 300
     * "/http/response_bytes": 1200
     * "/http/url": google.com/apis
     * "/pid"
     * "abc.com/mylabel": "my label value"
     * </pre>
     *
     * <code>map&lt;string, .google.tracing.v1.LabelValue&gt; labels = 6;</code>
     */

    public com.google.tracing.v1.LabelValue getLabelsOrDefault(
        java.lang.String key,
        com.google.tracing.v1.LabelValue defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.tracing.v1.LabelValue> map =
          internalGetLabels().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Properties of a span. Labels at the span level.
     * E.g.
     * "/instance_id": "my-instance"
     * "/zone": "us-central1-a"
     * "/grpc/peer_address": "ip:port" (dns, etc.)
     * "/grpc/deadline": "Duration"
     * "/http/user_agent"
     * "/http/request_bytes": 300
     * "/http/response_bytes": 1200
     * "/http/url": google.com/apis
     * "/pid"
     * "abc.com/mylabel": "my label value"
     * </pre>
     *
     * <code>map&lt;string, .google.tracing.v1.LabelValue&gt; labels = 6;</code>
     */

    public com.google.tracing.v1.LabelValue getLabelsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.tracing.v1.LabelValue> map =
          internalGetLabels().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearLabels() {
      internalGetMutableLabels().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * Properties of a span. Labels at the span level.
     * E.g.
     * "/instance_id": "my-instance"
     * "/zone": "us-central1-a"
     * "/grpc/peer_address": "ip:port" (dns, etc.)
     * "/grpc/deadline": "Duration"
     * "/http/user_agent"
     * "/http/request_bytes": 300
     * "/http/response_bytes": 1200
     * "/http/url": google.com/apis
     * "/pid"
     * "abc.com/mylabel": "my label value"
     * </pre>
     *
     * <code>map&lt;string, .google.tracing.v1.LabelValue&gt; labels = 6;</code>
     */

    public Builder removeLabels(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableLabels().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.tracing.v1.LabelValue>
    getMutableLabels() {
      return internalGetMutableLabels().getMutableMap();
    }
    /**
     * <pre>
     * Properties of a span. Labels at the span level.
     * E.g.
     * "/instance_id": "my-instance"
     * "/zone": "us-central1-a"
     * "/grpc/peer_address": "ip:port" (dns, etc.)
     * "/grpc/deadline": "Duration"
     * "/http/user_agent"
     * "/http/request_bytes": 300
     * "/http/response_bytes": 1200
     * "/http/url": google.com/apis
     * "/pid"
     * "abc.com/mylabel": "my label value"
     * </pre>
     *
     * <code>map&lt;string, .google.tracing.v1.LabelValue&gt; labels = 6;</code>
     */
    public Builder putLabels(
        java.lang.String key,
        com.google.tracing.v1.LabelValue value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      if (value == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableLabels().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * Properties of a span. Labels at the span level.
     * E.g.
     * "/instance_id": "my-instance"
     * "/zone": "us-central1-a"
     * "/grpc/peer_address": "ip:port" (dns, etc.)
     * "/grpc/deadline": "Duration"
     * "/http/user_agent"
     * "/http/request_bytes": 300
     * "/http/response_bytes": 1200
     * "/http/url": google.com/apis
     * "/pid"
     * "abc.com/mylabel": "my label value"
     * </pre>
     *
     * <code>map&lt;string, .google.tracing.v1.LabelValue&gt; labels = 6;</code>
     */

    public Builder putAllLabels(
        java.util.Map<java.lang.String, com.google.tracing.v1.LabelValue> values) {
      internalGetMutableLabels().getMutableMap()
          .putAll(values);
      return this;
    }

    private com.google.tracing.v1.StackTrace stackTrace_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.tracing.v1.StackTrace, com.google.tracing.v1.StackTrace.Builder, com.google.tracing.v1.StackTraceOrBuilder> stackTraceBuilder_;
    /**
     * <pre>
     * Stack trace captured at the start of the span. This is optional.
     * </pre>
     *
     * <code>.google.tracing.v1.StackTrace stack_trace = 7;</code>
     */
    public boolean hasStackTrace() {
      return stackTraceBuilder_ != null || stackTrace_ != null;
    }
    /**
     * <pre>
     * Stack trace captured at the start of the span. This is optional.
     * </pre>
     *
     * <code>.google.tracing.v1.StackTrace stack_trace = 7;</code>
     */
    public com.google.tracing.v1.StackTrace getStackTrace() {
      if (stackTraceBuilder_ == null) {
        return stackTrace_ == null ? com.google.tracing.v1.StackTrace.getDefaultInstance() : stackTrace_;
      } else {
        return stackTraceBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Stack trace captured at the start of the span. This is optional.
     * </pre>
     *
     * <code>.google.tracing.v1.StackTrace stack_trace = 7;</code>
     */
    public Builder setStackTrace(com.google.tracing.v1.StackTrace value) {
      if (stackTraceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        stackTrace_ = value;
        onChanged();
      } else {
        stackTraceBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Stack trace captured at the start of the span. This is optional.
     * </pre>
     *
     * <code>.google.tracing.v1.StackTrace stack_trace = 7;</code>
     */
    public Builder setStackTrace(
        com.google.tracing.v1.StackTrace.Builder builderForValue) {
      if (stackTraceBuilder_ == null) {
        stackTrace_ = builderForValue.build();
        onChanged();
      } else {
        stackTraceBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Stack trace captured at the start of the span. This is optional.
     * </pre>
     *
     * <code>.google.tracing.v1.StackTrace stack_trace = 7;</code>
     */
    public Builder mergeStackTrace(com.google.tracing.v1.StackTrace value) {
      if (stackTraceBuilder_ == null) {
        if (stackTrace_ != null) {
          stackTrace_ =
            com.google.tracing.v1.StackTrace.newBuilder(stackTrace_).mergeFrom(value).buildPartial();
        } else {
          stackTrace_ = value;
        }
        onChanged();
      } else {
        stackTraceBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Stack trace captured at the start of the span. This is optional.
     * </pre>
     *
     * <code>.google.tracing.v1.StackTrace stack_trace = 7;</code>
     */
    public Builder clearStackTrace() {
      if (stackTraceBuilder_ == null) {
        stackTrace_ = null;
        onChanged();
      } else {
        stackTrace_ = null;
        stackTraceBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Stack trace captured at the start of the span. This is optional.
     * </pre>
     *
     * <code>.google.tracing.v1.StackTrace stack_trace = 7;</code>
     */
    public com.google.tracing.v1.StackTrace.Builder getStackTraceBuilder() {
      
      onChanged();
      return getStackTraceFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Stack trace captured at the start of the span. This is optional.
     * </pre>
     *
     * <code>.google.tracing.v1.StackTrace stack_trace = 7;</code>
     */
    public com.google.tracing.v1.StackTraceOrBuilder getStackTraceOrBuilder() {
      if (stackTraceBuilder_ != null) {
        return stackTraceBuilder_.getMessageOrBuilder();
      } else {
        return stackTrace_ == null ?
            com.google.tracing.v1.StackTrace.getDefaultInstance() : stackTrace_;
      }
    }
    /**
     * <pre>
     * Stack trace captured at the start of the span. This is optional.
     * </pre>
     *
     * <code>.google.tracing.v1.StackTrace stack_trace = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.tracing.v1.StackTrace, com.google.tracing.v1.StackTrace.Builder, com.google.tracing.v1.StackTraceOrBuilder> 
        getStackTraceFieldBuilder() {
      if (stackTraceBuilder_ == null) {
        stackTraceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.tracing.v1.StackTrace, com.google.tracing.v1.StackTrace.Builder, com.google.tracing.v1.StackTraceOrBuilder>(
                getStackTrace(),
                getParentForChildren(),
                isClean());
        stackTrace_ = null;
      }
      return stackTraceBuilder_;
    }

    private java.util.List<com.google.tracing.v1.Span.TimeEvent> timeEvents_ =
      java.util.Collections.emptyList();
    private void ensureTimeEventsIsMutable() {
      if (!((bitField0_ & 0x00000080) == 0x00000080)) {
        timeEvents_ = new java.util.ArrayList<com.google.tracing.v1.Span.TimeEvent>(timeEvents_);
        bitField0_ |= 0x00000080;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.tracing.v1.Span.TimeEvent, com.google.tracing.v1.Span.TimeEvent.Builder, com.google.tracing.v1.Span.TimeEventOrBuilder> timeEventsBuilder_;

    /**
     * <pre>
     * A collection of time-stamped events.
     * </pre>
     *
     * <code>repeated .google.tracing.v1.Span.TimeEvent time_events = 8;</code>
     */
    public java.util.List<com.google.tracing.v1.Span.TimeEvent> getTimeEventsList() {
      if (timeEventsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(timeEvents_);
      } else {
        return timeEventsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * A collection of time-stamped events.
     * </pre>
     *
     * <code>repeated .google.tracing.v1.Span.TimeEvent time_events = 8;</code>
     */
    public int getTimeEventsCount() {
      if (timeEventsBuilder_ == null) {
        return timeEvents_.size();
      } else {
        return timeEventsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * A collection of time-stamped events.
     * </pre>
     *
     * <code>repeated .google.tracing.v1.Span.TimeEvent time_events = 8;</code>
     */
    public com.google.tracing.v1.Span.TimeEvent getTimeEvents(int index) {
      if (timeEventsBuilder_ == null) {
        return timeEvents_.get(index);
      } else {
        return timeEventsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * A collection of time-stamped events.
     * </pre>
     *
     * <code>repeated .google.tracing.v1.Span.TimeEvent time_events = 8;</code>
     */
    public Builder setTimeEvents(
        int index, com.google.tracing.v1.Span.TimeEvent value) {
      if (timeEventsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTimeEventsIsMutable();
        timeEvents_.set(index, value);
        onChanged();
      } else {
        timeEventsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * A collection of time-stamped events.
     * </pre>
     *
     * <code>repeated .google.tracing.v1.Span.TimeEvent time_events = 8;</code>
     */
    public Builder setTimeEvents(
        int index, com.google.tracing.v1.Span.TimeEvent.Builder builderForValue) {
      if (timeEventsBuilder_ == null) {
        ensureTimeEventsIsMutable();
        timeEvents_.set(index, builderForValue.build());
        onChanged();
      } else {
        timeEventsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A collection of time-stamped events.
     * </pre>
     *
     * <code>repeated .google.tracing.v1.Span.TimeEvent time_events = 8;</code>
     */
    public Builder addTimeEvents(com.google.tracing.v1.Span.TimeEvent value) {
      if (timeEventsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTimeEventsIsMutable();
        timeEvents_.add(value);
        onChanged();
      } else {
        timeEventsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * A collection of time-stamped events.
     * </pre>
     *
     * <code>repeated .google.tracing.v1.Span.TimeEvent time_events = 8;</code>
     */
    public Builder addTimeEvents(
        int index, com.google.tracing.v1.Span.TimeEvent value) {
      if (timeEventsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTimeEventsIsMutable();
        timeEvents_.add(index, value);
        onChanged();
      } else {
        timeEventsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * A collection of time-stamped events.
     * </pre>
     *
     * <code>repeated .google.tracing.v1.Span.TimeEvent time_events = 8;</code>
     */
    public Builder addTimeEvents(
        com.google.tracing.v1.Span.TimeEvent.Builder builderForValue) {
      if (timeEventsBuilder_ == null) {
        ensureTimeEventsIsMutable();
        timeEvents_.add(builderForValue.build());
        onChanged();
      } else {
        timeEventsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A collection of time-stamped events.
     * </pre>
     *
     * <code>repeated .google.tracing.v1.Span.TimeEvent time_events = 8;</code>
     */
    public Builder addTimeEvents(
        int index, com.google.tracing.v1.Span.TimeEvent.Builder builderForValue) {
      if (timeEventsBuilder_ == null) {
        ensureTimeEventsIsMutable();
        timeEvents_.add(index, builderForValue.build());
        onChanged();
      } else {
        timeEventsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A collection of time-stamped events.
     * </pre>
     *
     * <code>repeated .google.tracing.v1.Span.TimeEvent time_events = 8;</code>
     */
    public Builder addAllTimeEvents(
        java.lang.Iterable<? extends com.google.tracing.v1.Span.TimeEvent> values) {
      if (timeEventsBuilder_ == null) {
        ensureTimeEventsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, timeEvents_);
        onChanged();
      } else {
        timeEventsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * A collection of time-stamped events.
     * </pre>
     *
     * <code>repeated .google.tracing.v1.Span.TimeEvent time_events = 8;</code>
     */
    public Builder clearTimeEvents() {
      if (timeEventsBuilder_ == null) {
        timeEvents_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
      } else {
        timeEventsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * A collection of time-stamped events.
     * </pre>
     *
     * <code>repeated .google.tracing.v1.Span.TimeEvent time_events = 8;</code>
     */
    public Builder removeTimeEvents(int index) {
      if (timeEventsBuilder_ == null) {
        ensureTimeEventsIsMutable();
        timeEvents_.remove(index);
        onChanged();
      } else {
        timeEventsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * A collection of time-stamped events.
     * </pre>
     *
     * <code>repeated .google.tracing.v1.Span.TimeEvent time_events = 8;</code>
     */
    public com.google.tracing.v1.Span.TimeEvent.Builder getTimeEventsBuilder(
        int index) {
      return getTimeEventsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * A collection of time-stamped events.
     * </pre>
     *
     * <code>repeated .google.tracing.v1.Span.TimeEvent time_events = 8;</code>
     */
    public com.google.tracing.v1.Span.TimeEventOrBuilder getTimeEventsOrBuilder(
        int index) {
      if (timeEventsBuilder_ == null) {
        return timeEvents_.get(index);  } else {
        return timeEventsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * A collection of time-stamped events.
     * </pre>
     *
     * <code>repeated .google.tracing.v1.Span.TimeEvent time_events = 8;</code>
     */
    public java.util.List<? extends com.google.tracing.v1.Span.TimeEventOrBuilder> 
         getTimeEventsOrBuilderList() {
      if (timeEventsBuilder_ != null) {
        return timeEventsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(timeEvents_);
      }
    }
    /**
     * <pre>
     * A collection of time-stamped events.
     * </pre>
     *
     * <code>repeated .google.tracing.v1.Span.TimeEvent time_events = 8;</code>
     */
    public com.google.tracing.v1.Span.TimeEvent.Builder addTimeEventsBuilder() {
      return getTimeEventsFieldBuilder().addBuilder(
          com.google.tracing.v1.Span.TimeEvent.getDefaultInstance());
    }
    /**
     * <pre>
     * A collection of time-stamped events.
     * </pre>
     *
     * <code>repeated .google.tracing.v1.Span.TimeEvent time_events = 8;</code>
     */
    public com.google.tracing.v1.Span.TimeEvent.Builder addTimeEventsBuilder(
        int index) {
      return getTimeEventsFieldBuilder().addBuilder(
          index, com.google.tracing.v1.Span.TimeEvent.getDefaultInstance());
    }
    /**
     * <pre>
     * A collection of time-stamped events.
     * </pre>
     *
     * <code>repeated .google.tracing.v1.Span.TimeEvent time_events = 8;</code>
     */
    public java.util.List<com.google.tracing.v1.Span.TimeEvent.Builder> 
         getTimeEventsBuilderList() {
      return getTimeEventsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.tracing.v1.Span.TimeEvent, com.google.tracing.v1.Span.TimeEvent.Builder, com.google.tracing.v1.Span.TimeEventOrBuilder> 
        getTimeEventsFieldBuilder() {
      if (timeEventsBuilder_ == null) {
        timeEventsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.tracing.v1.Span.TimeEvent, com.google.tracing.v1.Span.TimeEvent.Builder, com.google.tracing.v1.Span.TimeEventOrBuilder>(
                timeEvents_,
                ((bitField0_ & 0x00000080) == 0x00000080),
                getParentForChildren(),
                isClean());
        timeEvents_ = null;
      }
      return timeEventsBuilder_;
    }

    private java.util.List<com.google.tracing.v1.Span.Link> links_ =
      java.util.Collections.emptyList();
    private void ensureLinksIsMutable() {
      if (!((bitField0_ & 0x00000100) == 0x00000100)) {
        links_ = new java.util.ArrayList<com.google.tracing.v1.Span.Link>(links_);
        bitField0_ |= 0x00000100;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.tracing.v1.Span.Link, com.google.tracing.v1.Span.Link.Builder, com.google.tracing.v1.Span.LinkOrBuilder> linksBuilder_;

    /**
     * <pre>
     * A collection of links.
     * </pre>
     *
     * <code>repeated .google.tracing.v1.Span.Link links = 9;</code>
     */
    public java.util.List<com.google.tracing.v1.Span.Link> getLinksList() {
      if (linksBuilder_ == null) {
        return java.util.Collections.unmodifiableList(links_);
      } else {
        return linksBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * A collection of links.
     * </pre>
     *
     * <code>repeated .google.tracing.v1.Span.Link links = 9;</code>
     */
    public int getLinksCount() {
      if (linksBuilder_ == null) {
        return links_.size();
      } else {
        return linksBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * A collection of links.
     * </pre>
     *
     * <code>repeated .google.tracing.v1.Span.Link links = 9;</code>
     */
    public com.google.tracing.v1.Span.Link getLinks(int index) {
      if (linksBuilder_ == null) {
        return links_.get(index);
      } else {
        return linksBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * A collection of links.
     * </pre>
     *
     * <code>repeated .google.tracing.v1.Span.Link links = 9;</code>
     */
    public Builder setLinks(
        int index, com.google.tracing.v1.Span.Link value) {
      if (linksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLinksIsMutable();
        links_.set(index, value);
        onChanged();
      } else {
        linksBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * A collection of links.
     * </pre>
     *
     * <code>repeated .google.tracing.v1.Span.Link links = 9;</code>
     */
    public Builder setLinks(
        int index, com.google.tracing.v1.Span.Link.Builder builderForValue) {
      if (linksBuilder_ == null) {
        ensureLinksIsMutable();
        links_.set(index, builderForValue.build());
        onChanged();
      } else {
        linksBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A collection of links.
     * </pre>
     *
     * <code>repeated .google.tracing.v1.Span.Link links = 9;</code>
     */
    public Builder addLinks(com.google.tracing.v1.Span.Link value) {
      if (linksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLinksIsMutable();
        links_.add(value);
        onChanged();
      } else {
        linksBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * A collection of links.
     * </pre>
     *
     * <code>repeated .google.tracing.v1.Span.Link links = 9;</code>
     */
    public Builder addLinks(
        int index, com.google.tracing.v1.Span.Link value) {
      if (linksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLinksIsMutable();
        links_.add(index, value);
        onChanged();
      } else {
        linksBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * A collection of links.
     * </pre>
     *
     * <code>repeated .google.tracing.v1.Span.Link links = 9;</code>
     */
    public Builder addLinks(
        com.google.tracing.v1.Span.Link.Builder builderForValue) {
      if (linksBuilder_ == null) {
        ensureLinksIsMutable();
        links_.add(builderForValue.build());
        onChanged();
      } else {
        linksBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A collection of links.
     * </pre>
     *
     * <code>repeated .google.tracing.v1.Span.Link links = 9;</code>
     */
    public Builder addLinks(
        int index, com.google.tracing.v1.Span.Link.Builder builderForValue) {
      if (linksBuilder_ == null) {
        ensureLinksIsMutable();
        links_.add(index, builderForValue.build());
        onChanged();
      } else {
        linksBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A collection of links.
     * </pre>
     *
     * <code>repeated .google.tracing.v1.Span.Link links = 9;</code>
     */
    public Builder addAllLinks(
        java.lang.Iterable<? extends com.google.tracing.v1.Span.Link> values) {
      if (linksBuilder_ == null) {
        ensureLinksIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, links_);
        onChanged();
      } else {
        linksBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * A collection of links.
     * </pre>
     *
     * <code>repeated .google.tracing.v1.Span.Link links = 9;</code>
     */
    public Builder clearLinks() {
      if (linksBuilder_ == null) {
        links_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
      } else {
        linksBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * A collection of links.
     * </pre>
     *
     * <code>repeated .google.tracing.v1.Span.Link links = 9;</code>
     */
    public Builder removeLinks(int index) {
      if (linksBuilder_ == null) {
        ensureLinksIsMutable();
        links_.remove(index);
        onChanged();
      } else {
        linksBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * A collection of links.
     * </pre>
     *
     * <code>repeated .google.tracing.v1.Span.Link links = 9;</code>
     */
    public com.google.tracing.v1.Span.Link.Builder getLinksBuilder(
        int index) {
      return getLinksFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * A collection of links.
     * </pre>
     *
     * <code>repeated .google.tracing.v1.Span.Link links = 9;</code>
     */
    public com.google.tracing.v1.Span.LinkOrBuilder getLinksOrBuilder(
        int index) {
      if (linksBuilder_ == null) {
        return links_.get(index);  } else {
        return linksBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * A collection of links.
     * </pre>
     *
     * <code>repeated .google.tracing.v1.Span.Link links = 9;</code>
     */
    public java.util.List<? extends com.google.tracing.v1.Span.LinkOrBuilder> 
         getLinksOrBuilderList() {
      if (linksBuilder_ != null) {
        return linksBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(links_);
      }
    }
    /**
     * <pre>
     * A collection of links.
     * </pre>
     *
     * <code>repeated .google.tracing.v1.Span.Link links = 9;</code>
     */
    public com.google.tracing.v1.Span.Link.Builder addLinksBuilder() {
      return getLinksFieldBuilder().addBuilder(
          com.google.tracing.v1.Span.Link.getDefaultInstance());
    }
    /**
     * <pre>
     * A collection of links.
     * </pre>
     *
     * <code>repeated .google.tracing.v1.Span.Link links = 9;</code>
     */
    public com.google.tracing.v1.Span.Link.Builder addLinksBuilder(
        int index) {
      return getLinksFieldBuilder().addBuilder(
          index, com.google.tracing.v1.Span.Link.getDefaultInstance());
    }
    /**
     * <pre>
     * A collection of links.
     * </pre>
     *
     * <code>repeated .google.tracing.v1.Span.Link links = 9;</code>
     */
    public java.util.List<com.google.tracing.v1.Span.Link.Builder> 
         getLinksBuilderList() {
      return getLinksFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.tracing.v1.Span.Link, com.google.tracing.v1.Span.Link.Builder, com.google.tracing.v1.Span.LinkOrBuilder> 
        getLinksFieldBuilder() {
      if (linksBuilder_ == null) {
        linksBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.tracing.v1.Span.Link, com.google.tracing.v1.Span.Link.Builder, com.google.tracing.v1.Span.LinkOrBuilder>(
                links_,
                ((bitField0_ & 0x00000100) == 0x00000100),
                getParentForChildren(),
                isClean());
        links_ = null;
      }
      return linksBuilder_;
    }

    private com.google.rpc.Status status_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.rpc.Status, com.google.rpc.Status.Builder, com.google.rpc.StatusOrBuilder> statusBuilder_;
    /**
     * <pre>
     * The final status of the Span. This is optional.
     * </pre>
     *
     * <code>.google.rpc.Status status = 10;</code>
     */
    public boolean hasStatus() {
      return statusBuilder_ != null || status_ != null;
    }
    /**
     * <pre>
     * The final status of the Span. This is optional.
     * </pre>
     *
     * <code>.google.rpc.Status status = 10;</code>
     */
    public com.google.rpc.Status getStatus() {
      if (statusBuilder_ == null) {
        return status_ == null ? com.google.rpc.Status.getDefaultInstance() : status_;
      } else {
        return statusBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The final status of the Span. This is optional.
     * </pre>
     *
     * <code>.google.rpc.Status status = 10;</code>
     */
    public Builder setStatus(com.google.rpc.Status value) {
      if (statusBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        status_ = value;
        onChanged();
      } else {
        statusBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The final status of the Span. This is optional.
     * </pre>
     *
     * <code>.google.rpc.Status status = 10;</code>
     */
    public Builder setStatus(
        com.google.rpc.Status.Builder builderForValue) {
      if (statusBuilder_ == null) {
        status_ = builderForValue.build();
        onChanged();
      } else {
        statusBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The final status of the Span. This is optional.
     * </pre>
     *
     * <code>.google.rpc.Status status = 10;</code>
     */
    public Builder mergeStatus(com.google.rpc.Status value) {
      if (statusBuilder_ == null) {
        if (status_ != null) {
          status_ =
            com.google.rpc.Status.newBuilder(status_).mergeFrom(value).buildPartial();
        } else {
          status_ = value;
        }
        onChanged();
      } else {
        statusBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The final status of the Span. This is optional.
     * </pre>
     *
     * <code>.google.rpc.Status status = 10;</code>
     */
    public Builder clearStatus() {
      if (statusBuilder_ == null) {
        status_ = null;
        onChanged();
      } else {
        status_ = null;
        statusBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The final status of the Span. This is optional.
     * </pre>
     *
     * <code>.google.rpc.Status status = 10;</code>
     */
    public com.google.rpc.Status.Builder getStatusBuilder() {
      
      onChanged();
      return getStatusFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The final status of the Span. This is optional.
     * </pre>
     *
     * <code>.google.rpc.Status status = 10;</code>
     */
    public com.google.rpc.StatusOrBuilder getStatusOrBuilder() {
      if (statusBuilder_ != null) {
        return statusBuilder_.getMessageOrBuilder();
      } else {
        return status_ == null ?
            com.google.rpc.Status.getDefaultInstance() : status_;
      }
    }
    /**
     * <pre>
     * The final status of the Span. This is optional.
     * </pre>
     *
     * <code>.google.rpc.Status status = 10;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.rpc.Status, com.google.rpc.Status.Builder, com.google.rpc.StatusOrBuilder> 
        getStatusFieldBuilder() {
      if (statusBuilder_ == null) {
        statusBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.rpc.Status, com.google.rpc.Status.Builder, com.google.rpc.StatusOrBuilder>(
                getStatus(),
                getParentForChildren(),
                isClean());
        status_ = null;
      }
      return statusBuilder_;
    }

    private boolean hasRemoteParent_ ;
    /**
     * <pre>
     * True if this Span has a remote parent (is an RPC server Span).
     * </pre>
     *
     * <code>bool has_remote_parent = 11;</code>
     */
    public boolean getHasRemoteParent() {
      return hasRemoteParent_;
    }
    /**
     * <pre>
     * True if this Span has a remote parent (is an RPC server Span).
     * </pre>
     *
     * <code>bool has_remote_parent = 11;</code>
     */
    public Builder setHasRemoteParent(boolean value) {
      
      hasRemoteParent_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * True if this Span has a remote parent (is an RPC server Span).
     * </pre>
     *
     * <code>bool has_remote_parent = 11;</code>
     */
    public Builder clearHasRemoteParent() {
      
      hasRemoteParent_ = false;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:google.tracing.v1.Span)
  }

  // @@protoc_insertion_point(class_scope:google.tracing.v1.Span)
  private static final com.google.tracing.v1.Span DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.tracing.v1.Span();
  }

  public static com.google.tracing.v1.Span getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Span>
      PARSER = new com.google.protobuf.AbstractParser<Span>() {
    public Span parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new Span(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Span> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Span> getParserForType() {
    return PARSER;
  }

  public com.google.tracing.v1.Span getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

